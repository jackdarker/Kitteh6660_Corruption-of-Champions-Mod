From ed46d5ce46e5b46f3bc26a66ba49fcd6aa9981eb Mon Sep 17 00:00:00 2001
From: Jack Darker <JackDarker@freenet.de>
Date: Sun, 26 Jan 2020 14:26:35 +0100
Subject: [PATCH] Trying to improve performance by avoiding unnecessary
 statscreenRefresh and recalculations:
 -----------------------------------------------------------------------------------------------
 - statScreenRefresh, showUpDown always called in doNext and doYesNo -
 disabled statScreenRefresh on most places, especially if doNext, doYesNo or
 takeItem a.s.o are called (they call statscreenrefresh); there are still many
 calls in other places... - disabled dynStat when called with 0 change (used
 to trigger arrowupdate, not needed anymore) - disabled showStatDown,
 showStatUp (now done by showUpDown) - getAllMaxStats recalculates stat
 changes from perks/racials only if flagged as needed

Todo:
- hourly timechange around 2s because of processing 50 and more timeaware instances
- playerEvents.timeChange calls dynstats multiple times (for change of lust, corruption,...); can we combine those into a single call?;
- never call statScreenRefresh (and other UI updates functions) from content classes; this should be done by the engine-classes only
---
 classes/classes/BaseContent.as                |   2 +-
 classes/classes/Bindings.as                   |   4 +-
 classes/classes/CharCreation.as               |   6 +-
 classes/classes/ControlBindings.as            |  20 +-
 classes/classes/Creature.as                   |   2 +-
 classes/classes/EngineCore.as                 | 106 +-
 classes/classes/EventParser.as                |   7 +-
 .../classes/Items/Consumables/KitsuneGift.as  |   4 +-
 .../Items/Consumables/PhoukaWhiskey.as        |   4 +-
 classes/classes/Items/Mutations.as            |  46 +-
 classes/classes/Monster.as                    |   5 +-
 classes/classes/Player.as                     | 988 +++++++++---------
 classes/classes/PlayerEvents.as               |  10 +-
 classes/classes/PlayerInfo.as                 |   3 +-
 classes/classes/Saves.as                      |  16 +-
 classes/classes/Scenes/Areas/Beach/Gorgon.as  |   4 +-
 .../Areas/Beach/PinchousWaterwearAndTools.as  |   2 +-
 classes/classes/Scenes/Areas/Bog.as           |   2 +-
 .../classes/Scenes/Areas/Caves/DarkSlime.as   |   2 +-
 .../classes/Scenes/Areas/Desert/AntsScene.as  |   4 +-
 classes/classes/Scenes/Areas/Desert/Naga.as   |   5 +-
 classes/classes/Scenes/Areas/GlacialRift.as   |   4 +-
 .../Scenes/Areas/GlacialRift/WinterWolf.as    |   4 +-
 classes/classes/Scenes/Camp.as                |   5 +-
 classes/classes/Scenes/Combat/Combat.as       |  49 +-
 .../classes/Scenes/Combat/CombatAbilities.as  |  35 +-
 classes/classes/Scenes/Combat/CombatMagic.as  |  72 +-
 .../classes/Scenes/Combat/CombatSoulskills.as |  15 +-
 .../classes/Scenes/Combat/MagicSpecials.as    |  42 +-
 .../classes/Scenes/Combat/PhysicalSpecials.as |  16 +-
 classes/classes/Scenes/DebugMenu.as           |   2 +-
 classes/classes/Scenes/Dungeons/D3/D3.as      |   2 +-
 .../Scenes/Dungeons/D3/Doppleganger.as        |   2 +-
 .../Scenes/Dungeons/D3/DriderIncubus.as       |   4 +-
 classes/classes/Scenes/Dungeons/DeepCave.as   |   2 +-
 classes/classes/Scenes/Dungeons/DesertCave.as |  11 +-
 .../Scenes/Dungeons/DungeonAbstractContent.as |   4 +-
 .../classes/Scenes/Dungeons/DungeonCore.as    |   4 +-
 .../classes/Scenes/Dungeons/DungeonEngine.as  |   8 +-
 classes/classes/Scenes/Dungeons/HelDungeon.as |   4 +-
 .../classes/Scenes/Explore/ExploreDebug.as    |   8 +-
 classes/classes/Scenes/Explore/Giacomo.as     |  56 +-
 classes/classes/Scenes/Explore/Lumi.as        | 198 ++--
 classes/classes/Scenes/Holidays.as            |   4 +-
 classes/classes/Scenes/Masturbation.as        |   6 +-
 classes/classes/Scenes/Monsters/ImpScene.as   |   2 +-
 classes/classes/Scenes/NPCs/CaiLin.as         |  16 +-
 classes/classes/Scenes/NPCs/EmberScene.as     |   2 +-
 classes/classes/Scenes/NPCs/Fenris.as         |   2 +-
 classes/classes/Scenes/NPCs/FenrisMonster.as  |   2 +-
 classes/classes/Scenes/NPCs/Helspawn.as       |   3 +-
 classes/classes/Scenes/NPCs/Rathazul.as       |  72 +-
 classes/classes/Scenes/NPCs/Sheila.as         |   2 +-
 classes/classes/Scenes/NPCs/SheilaScene.as    |  14 +-
 classes/classes/Scenes/Places/Bazaar.as       |  26 +-
 .../classes/Scenes/Places/Bazaar/Benoit.as    |  14 +-
 .../classes/Scenes/Places/Bazaar/BlackCock.as |   8 +-
 classes/classes/Scenes/Places/Farm.as         |  20 +-
 classes/classes/Scenes/Places/HeXinDao.as     |  42 +-
 .../Places/HeXinDao/JourneyToTheEast.as       |  24 +-
 classes/classes/Scenes/Places/Ingnam.as       |   6 +-
 .../Scenes/Places/Ingnam/IngnamFarm.as        |   2 +-
 classes/classes/Scenes/Places/Prison.as       |   6 +-
 classes/classes/Scenes/Places/TelAdre.as      |  38 +-
 classes/classes/Scenes/Places/TelAdre/Shop.as |   2 +-
 .../Places/TelAdre/YaraPiercingStudio.as      |   4 +-
 classes/classes/Scenes/Pregnancy.as           |   2 +-
 .../classes/Scenes/PregnancyProgression.as    |   2 +-
 classes/classes/Scenes/Quests/UrtaQuest.as    |   4 +-
 classes/classes/Scenes/Soulforce.as           | 276 ++---
 70 files changed, 1214 insertions(+), 1176 deletions(-)

diff --git a/classes/classes/BaseContent.as b/classes/classes/BaseContent.as
index 77e7dec03..6c1216759 100644
--- a/classes/classes/BaseContent.as
+++ b/classes/classes/BaseContent.as
@@ -189,7 +189,7 @@ import coc.xxc.StoryContext;
 
 		protected function statScreenRefresh():void
 		{
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(false);
 		}
 
 		protected function get combat():Combat {
diff --git a/classes/classes/Bindings.as b/classes/classes/Bindings.as
index a70b61a69..d354c98dc 100644
--- a/classes/classes/Bindings.as
+++ b/classes/classes/Bindings.as
@@ -45,8 +45,8 @@ package classes
 				var saveFile:* = SharedObject.getLocal("CoC_" + slot, "/");
 				var doQuickLoad:Function = function():void {
 					if (game.saves.loadGame("CoC_" + slot)) {
-						game.showStats();
-						game.statScreenRefresh();
+						//game.showStats();
+						EngineCore.statScreenRefresh(true);
 						game.outputText("Slot " + slot + " Loaded!", true);
 						game.doNext(game.playerMenu);
 					}
diff --git a/classes/classes/CharCreation.as b/classes/classes/CharCreation.as
index 797e3613b..f843f9173 100644
--- a/classes/classes/CharCreation.as
+++ b/classes/classes/CharCreation.as
@@ -1417,7 +1417,7 @@ import coc.view.MainView;
 		}
 			
 		public function arrival():void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			model.time.hours = 11;
 			clearOutput();
 			outputText("You are prepared for what is to come.  Most of the last year has been spent honing your body and mind to prepare for the challenges ahead.  You are the Champion of Ingnam.  The one who will journey to the demon realm and guarantee the safety of your friends and family, even though you'll never see them again.  You wipe away a tear as you enter the courtyard and see Elder Nomur waiting for you.  You are ready.\n\n");
@@ -1588,7 +1588,7 @@ import coc.view.MainView;
             }
 			CoC.instance.saves.loadPermObject();
 			flags[kFLAGS.MOD_SAVE_VERSION] = CoC.instance.modSaveVersion;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			chooseToPlay();
 			return;
 		}
@@ -1625,7 +1625,7 @@ import coc.view.MainView;
 			}
 			player.perkPoints += 1;
 			clearOutput();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			outputText("Would you like to play through the " + (1 * (1 + player.newGamePlusMod())) + "-day");
 			if (player.newGamePlusMod() > 0) outputText("s");
 			outputText(" prologue in Ingnam or just skip?");
diff --git a/classes/classes/ControlBindings.as b/classes/classes/ControlBindings.as
index b3bac578b..8984ea428 100644
--- a/classes/classes/ControlBindings.as
+++ b/classes/classes/ControlBindings.as
@@ -107,8 +107,8 @@ internal class ControlBindings {
                             var saveFile:* = SharedObject.getLocal("CoC_1", "/");
                             if (saveFile.data.exists) {
                                 if (CoC.instance.saves.loadGame("CoC_1")) {
-                                    EngineCore.showStats();
-                                    EngineCore.statScreenRefresh();
+                                    //EngineCore.showStats();
+                                    EngineCore.statScreenRefresh(true);
                                     EngineCore.clearOutput();
                                     EngineCore.outputText("Slot 1 Loaded!");
                                     EngineCore.doNext(EventParser.playerMenu);
@@ -125,8 +125,8 @@ internal class ControlBindings {
                             var saveFile:* = SharedObject.getLocal("CoC_2", "/");
                             if (saveFile.data.exists) {
                                 if (CoC.instance.saves.loadGame("CoC_2")) {
-                                    EngineCore.showStats();
-                                    EngineCore.statScreenRefresh();
+                                    //EngineCore.showStats();
+                                    EngineCore.statScreenRefresh(true);
                                     EngineCore.clearOutput();
                                     EngineCore.outputText("Slot 2 Loaded!");
                                     EngineCore.doNext(EventParser.playerMenu);
@@ -143,8 +143,8 @@ internal class ControlBindings {
                             var saveFile:* = SharedObject.getLocal("CoC_3", "/");
                             if (saveFile.data.exists) {
                                 if (CoC.instance.saves.loadGame("CoC_3")) {
-                                    EngineCore.showStats();
-                                    EngineCore.statScreenRefresh();
+                                    //EngineCore.showStats();
+                                    EngineCore.statScreenRefresh(true);
                                     EngineCore.clearOutput();
                                     EngineCore.outputText("Slot 3 Loaded!");
                                     EngineCore.doNext(EventParser.playerMenu);
@@ -161,8 +161,8 @@ internal class ControlBindings {
                             var saveFile:* = SharedObject.getLocal("CoC_4", "/");
                             if (saveFile.data.exists) {
                                 if (CoC.instance.saves.loadGame("CoC_4")) {
-                                    EngineCore.showStats();
-                                    EngineCore.statScreenRefresh();
+                                    //EngineCore.showStats();
+                                    EngineCore.statScreenRefresh(true);
                                     EngineCore.clearOutput();
                                     EngineCore.outputText("Slot 4 Loaded!");
                                     EngineCore.doNext(EventParser.playerMenu);
@@ -179,8 +179,8 @@ internal class ControlBindings {
                             var saveFile:* = SharedObject.getLocal("CoC_5", "/");
                             if (saveFile.data.exists) {
                                 if (CoC.instance.saves.loadGame("CoC_5")) {
-                                    EngineCore.showStats();
-                                    EngineCore.statScreenRefresh();
+                                    //EngineCore.showStats();
+                                    EngineCore.statScreenRefresh(true);
                                     EngineCore.clearOutput();
                                     EngineCore.outputText("Slot 5 Loaded!");
                                     EngineCore.doNext(EventParser.playerMenu);
diff --git a/classes/classes/Creature.as b/classes/classes/Creature.as
index f63b5e2ef..7fb01d43a 100644
--- a/classes/classes/Creature.as
+++ b/classes/classes/Creature.as
@@ -1296,7 +1296,7 @@ public class Creature extends Utils
 			return false;
 		}
 
-		//has perk?
+		//returns the perk-index if found, otherwise a value <0
 		public function findPerk(ptype:PerkType):Number
 		{
 			if (perks.length <= 0)
diff --git a/classes/classes/EngineCore.as b/classes/classes/EngineCore.as
index 0104d243f..fd6646cce 100644
--- a/classes/classes/EngineCore.as
+++ b/classes/classes/EngineCore.as
@@ -73,7 +73,7 @@ public class EngineCore {
             else {
                 if (display) HPChangeNotify(changeNum);
                 CoC.instance.player.HP += int(changeNum);
-                CoC.instance.mainView.statsView.showStatUp('hp');
+                //CoC.instance.mainView.statsView.showStatUp('hp');
                 // hpUp.visible = true;
             }
         }
@@ -82,17 +82,18 @@ public class EngineCore {
             if (CoC.instance.player.HP + changeNum <= 0) {
                 if (display) HPChangeNotify(changeNum);
                 CoC.instance.player.HP = 0;
-                CoC.instance.mainView.statsView.showStatDown('hp');
+                //CoC.instance.mainView.statsView.showStatDown('hp');
             }
             else {
                 if (display) HPChangeNotify(changeNum);
                 CoC.instance.player.HP += changeNum;
-                CoC.instance.mainView.statsView.showStatDown('hp');
+                //CoC.instance.mainView.statsView.showStatDown('hp');
             }
         }
-        CoC.instance.player.dynStats("lust", 0, "scale", false); //Workaround to showing the arrow.
-        EngineCore.statScreenRefresh();
-        return CoC.instance.player.HP - before;
+        //CoC.instance.player.dynStats("lust", 0, "scale", false); //Workaround to showing the arrow.
+		EngineCore.showUpDown(false);
+        EngineCore.statScreenRefresh(false);
+		return CoC.instance.player.HP - before;
     }
 
     public static function HPChangeNotify(changeNum:Number):void {
@@ -132,6 +133,7 @@ public class EngineCore {
                 //	CoC.instance.mainView.statsView.showStatUp( 'hp' );
                 // hpUp.visible = true;
             }
+			EngineCore.showUpDown(false);
         }
         //Negative Soulforce
         /*	else
@@ -149,7 +151,7 @@ public class EngineCore {
             }
             dynStats("lust", 0, "scale", false) //Workaround to showing the arrow.
         */
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(false);
         return CoC.instance.player.soulforce - before;
     }
 
@@ -171,6 +173,7 @@ public class EngineCore {
                 //	CoC.instance.mainView.statsView.showStatUp( 'hp' );
                 // hpUp.visible = true;
             }
+			EngineCore.showUpDown(false);
         }
         //Negative Mana
         /*	else
@@ -188,7 +191,7 @@ public class EngineCore {
             }
             dynStats("lust", 0, "scale", false) //Workaround to showing the arrow.
         */
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(false);
         return CoC.instance.player.mana - before;
     }
 
@@ -210,6 +213,7 @@ public class EngineCore {
                 //	CoC.instance.mainView.statsView.showStatUp( 'hp' );
                 // hpUp.visible = true;
             }
+			EngineCore.showUpDown(false);
         }
         //Negative Wrath
         /*	else
@@ -227,7 +231,7 @@ public class EngineCore {
             }
             dynStats("lust", 0, "scale", false) //Workaround to showing the arrow.
         */
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(false);
         return CoC.instance.player.wrath - before;
     }
 
@@ -818,6 +822,8 @@ public class EngineCore {
      * @param    eventNo The event parser or function to call if 'No' button is pressed.
      */
     public static function doYesNo(eventYes:Function, eventNo:Function):void {
+		statScreenRefresh(true);
+		showUpDown(true);
         menu();
         addButton(6, "Yes", eventYes);	//jk: moved the buttons because I accidently pressing YES instead of NEXT all the time
         addButton(7, "No", eventNo);	//f.e. when picking up items with full inventory
@@ -834,8 +840,8 @@ public class EngineCore {
             return;
         }
         //trace("DoNext have item:", eventNo);
-		if (_needsStatScreenUpdate) statScreenRefresh();
-		if (_needsUpDownUpdate) showUpDown();
+		statScreenRefresh(true/*_needsStatScreenUpdate*/);
+		showUpDown(true /*_needsUpDownUpdate*/);
         menu();
         addButton(0, "Next", event);
     }
@@ -844,20 +850,17 @@ public class EngineCore {
         CoC.instance.mainView.invert();
     }
 	private static var _needsStatScreenUpdate:Boolean;
-	/**
-	 * Used to update the display of statistics
-	 * @param	immediate	:	if false the update will be delayed until next turn is started (to improve performance)
-	 */
-	public static function needsStatScreenRefresh(immediate:Boolean):void {	//Todo do UI update only after turn complete
-		if (immediate)
-			statScreenRefresh()
-		else
-			_needsStatScreenUpdate = true;
-	}
     /**
      * Used to update the display of statistics
+	 * this gets already called in doNext() !
+	 * @param	immediate	:	if false the update will be delayed until next turn is started (to improve performance)
      */
-    public static function statScreenRefresh():void {
+    public static function statScreenRefresh(immediate:Boolean = false):void {		//Todo instead of calling this from a game-class, this should only be called by the engine
+		if (!immediate) {
+			_needsStatScreenUpdate = true;
+			return;
+		}	
+		
         Utils.Begin("engineCore", "statScreenRefresh");
         CoC.instance.mainView.statsView.show(); // show() method refreshes.
         CoC.instance.mainViewManager.refreshStats();
@@ -902,21 +905,22 @@ public class EngineCore {
     public static function hideUpDown():void {
         CoC.instance.mainView.statsView.hideUpDown();
         //Clear storage values so up/down arrows can be properly displayed
-        CoC.instance.oldStats.oldStr = 0;
-        CoC.instance.oldStats.oldTou = 0;
-        CoC.instance.oldStats.oldSpe = 0;
-        CoC.instance.oldStats.oldInte = 0;
-        CoC.instance.oldStats.oldWis = 0;
-        CoC.instance.oldStats.oldLib = 0;
-        CoC.instance.oldStats.oldSens = 0;
-        CoC.instance.oldStats.oldCor = 0;
-        CoC.instance.oldStats.oldHP = 0;
-        CoC.instance.oldStats.oldLust = 0;
-        CoC.instance.oldStats.oldWrath = 0;
-        CoC.instance.oldStats.oldFatigue = 0;
-        CoC.instance.oldStats.oldMana = 0;
-        CoC.instance.oldStats.oldSoulforce = 0;
-        CoC.instance.oldStats.oldHunger = 0;
+		//Todo why ? this breaks the logic in showUpDown
+        //CoC.instance.oldStats.oldStr = 0;
+        //CoC.instance.oldStats.oldTou = 0;
+        //CoC.instance.oldStats.oldSpe = 0;
+        //CoC.instance.oldStats.oldInte = 0;
+        //CoC.instance.oldStats.oldWis = 0;
+        //CoC.instance.oldStats.oldLib = 0;
+        //CoC.instance.oldStats.oldSens = 0;
+        //CoC.instance.oldStats.oldCor = 0;
+        //CoC.instance.oldStats.oldHP = 0;
+        //CoC.instance.oldStats.oldLust = 0;
+        //CoC.instance.oldStats.oldWrath = 0;
+        //CoC.instance.oldStats.oldFatigue = 0;
+        //CoC.instance.oldStats.oldMana = 0;
+        //CoC.instance.oldStats.oldSoulforce = 0;
+        //CoC.instance.oldStats.oldHunger = 0;
     }
 
     public static function fatigue(mod:Number, type:Number = 0):void {
@@ -988,16 +992,14 @@ public class EngineCore {
     }
 
 	private static var _needsUpDownUpdate:Boolean;
-	public static function needsUpDownRefresh(immediate:Boolean):void { 
-		if (immediate) 
-			showUpDown();
-		else
+    //displays up/down arrows depending on stat-change since last call
+    public static function showUpDown(immediate:Boolean = false):void { //Moved from StatsView.
+		if (!immediate) {
 			_needsUpDownUpdate = true;
-	}
-    
-    public static function showUpDown():void { //Moved from StatsView.
+			return;
+		}
+			
         Utils.Begin("engineCore", "showUpDown");
-
         function _oldStatNameFor(statName:String):String {
             return 'old' + statName.charAt(0).toUpperCase() + statName.substr(1);
         }
@@ -1017,6 +1019,20 @@ public class EngineCore {
                 CoC.instance.mainView.statsView.showStatDown(statName);
             }
         }
+			CoC.instance.oldStats.oldStr = CoC.instance.player.str;
+			CoC.instance.oldStats.oldTou = CoC.instance.player.tou;
+			CoC.instance.oldStats.oldSpe = CoC.instance.player.spe;
+			CoC.instance.oldStats.oldInte = CoC.instance.player.inte;
+			CoC.instance.oldStats.oldWis = CoC.instance.player.wis;
+			CoC.instance.oldStats.oldLib = CoC.instance.player.lib;
+			CoC.instance.oldStats.oldSens = CoC.instance.player.sens;
+			CoC.instance.oldStats.oldCor = CoC.instance.player.cor;
+			CoC.instance.oldStats.oldHP = CoC.instance.player.HP;
+			CoC.instance.oldStats.oldLust = CoC.instance.player.lust;
+			CoC.instance.oldStats.oldFatigue = CoC.instance.player.fatigue;
+			CoC.instance.oldStats.oldSoulforce = CoC.instance.player.soulforce;
+			CoC.instance.oldStats.oldHunger = CoC.instance.player.hunger;
+		
 		_needsUpDownUpdate = false;
         Utils.End("engineCore", "showUpDown");
     }
diff --git a/classes/classes/EventParser.as b/classes/classes/EventParser.as
index ca5f1d012..0dd92e757 100644
--- a/classes/classes/EventParser.as
+++ b/classes/classes/EventParser.as
@@ -341,11 +341,12 @@ public class EventParser {
             SceneLib.prison.goBackToPrisonBecauseQuestTimeIsUp();
             return true;
         }
-        EngineCore.statScreenRefresh();
+        
         if (needNext) {
             EngineCore.doNext(playerMenu);
             return true;
         }
+		EngineCore.statScreenRefresh(true);
         playerMenu();
         return false;
     }
@@ -618,7 +619,7 @@ public class EventParser {
                 CoC.instance.model.time.hours = 0;
             }
         }
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(true);
     }
 	public static function cheatTime2(time:Number, needNext:Boolean = false):void {
         //Advance minutes
@@ -639,7 +640,7 @@ public class EventParser {
                 CoC.instance.model.time.hours = 0;
             }
         }
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(true);
     }
 
     public static function growHair(amount:Number = .1):Boolean {
diff --git a/classes/classes/Items/Consumables/KitsuneGift.as b/classes/classes/Items/Consumables/KitsuneGift.as
index 6b66387db..5aaffb125 100644
--- a/classes/classes/Items/Consumables/KitsuneGift.as
+++ b/classes/classes/Items/Consumables/KitsuneGift.as
@@ -38,7 +38,7 @@ public final class KitsuneGift extends Consumable {
 				outputText("\n\n<b>You've received " + Utils.num2Text(gems) + " shining gems from the kitsune's gift!  How generous!</b>");
 				game.player.gems += gems;
 				//add X gems to inventory
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true)();
 				break;
 
 			//[Kitsune Tea/Scholar's Tea] //Just use Scholar's Tea and drop the "trick" effect if you don't want to throw in another new item.
@@ -80,7 +80,7 @@ public final class KitsuneGift extends Consumable {
 				outputText("\n\n<b>The kitsune's familiar has stolen your gems!</b>");
 				// Lose X gems as though losing in battle to a kitsune
 				game.player.gems -= 2 + Utils.rand(15);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				break;
 
 			//[Prank]
diff --git a/classes/classes/Items/Consumables/PhoukaWhiskey.as b/classes/classes/Items/Consumables/PhoukaWhiskey.as
index d98d59d71..9f7adf4ae 100644
--- a/classes/classes/Items/Consumables/PhoukaWhiskey.as
+++ b/classes/classes/Items/Consumables/PhoukaWhiskey.as
@@ -116,7 +116,7 @@ public class PhoukaWhiskey extends Consumable {
 					//The four stats we’re affecting get paired together to save space. This way we don’t need a second StatusEffect to store more info.
 				game.player.dynStats("lib", libidoChange, "sens", -sensChange, "spe", -speedChange, "int", -intChange);
 			}
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
         }
 		
 		public function phoukaWhiskeyExpires(player:Player):void
@@ -137,7 +137,7 @@ public class PhoukaWhiskey extends Consumable {
 				outputText("\n<b>The fuzzy, happy feeling ebbs away.  With it goes the warmth and carefree feelings.  Your head aches and you wonder if you should have another whiskey, just to tide you over</b>\n");
 			else
 				outputText("\n<b>The fuzzy, happy feeling ebbs away.  The weight of the world’s problems seems to settle on you once more.  It was nice while it lasted and you wouldn’t mind having another whiskey.</b>\n");
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
     }
 }
diff --git a/classes/classes/Items/Mutations.as b/classes/classes/Items/Mutations.as
index 5c47abfef..117094e55 100644
--- a/classes/classes/Items/Mutations.as
+++ b/classes/classes/Items/Mutations.as
@@ -108,17 +108,17 @@ public final class Mutations extends MutationsHelper
 			if (player.wis < 50) {
 				if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wis += 2 + rand(7);
 				else player.wis += 1 + rand(4);
-				dynStats();
+				//dynStats();
 			}
 			else if (player.wis < 100) {
 				if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wis += 2 + rand(5);
 				else player.wis += 1 + rand(3);
-				dynStats();
+				//dynStats();
 			}
 			else {
 				if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wis += 2 + rand(3);
 				else player.wis += 1 + rand(2);
-				dynStats();
+				//dynStats();
 			}
 		}/*
 //Dao Dew
@@ -227,7 +227,7 @@ public final class Mutations extends MutationsHelper
 			clearOutput();
 			outputText("You take first bite of fruit that Evangeline gave you.  Surprisingly it taste delicious as nothing else you tasted before so without thinking more you ate rest of the fruit.");
 			if (player.findPerk(PerkLib.EzekielBlessing) < 0) player.createPerk(PerkLib.EzekielBlessing, 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh(true);
 			dynStats("str", 5, "tou", 5, "spe", 5, "inte", 5, "wis", 5, "lib", 5, "sen", 5);
 			player.refillHunger(50);
 		}
@@ -238,7 +238,7 @@ public final class Mutations extends MutationsHelper
 			if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wrath += 40;
 			else player.wrath += 20;
 			if (player.wrath > player.maxWrath()) player.wrath = player.maxWrath();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		public function mediumangrypill(player:Player):void {
 			clearOutput();
@@ -246,7 +246,7 @@ public final class Mutations extends MutationsHelper
 			if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wrath += 120;
 			else player.wrath += 60;
 			if (player.wrath > player.maxWrath()) player.wrath = player.maxWrath();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		public function bigangrypill(player:Player):void {
 			clearOutput();
@@ -254,7 +254,7 @@ public final class Mutations extends MutationsHelper
 			if (player.hasPerk(PerkLib.GoblinoidBlood) && player.hasPerk(PerkLib.NaturalPunchingBagFinalForm)) player.wrath += 360;
 			else player.wrath += 180;
 			if (player.wrath > player.maxWrath()) player.wrath = player.maxWrath();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		
 		public function mediumhealpill(player:Player):void {
@@ -280,7 +280,7 @@ public final class Mutations extends MutationsHelper
 				outputText("You shudder as a small orgasm passes through you. When you recover you actually feel more aroused.");
 				dynStats("lus", 15);
 			}
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		public function bighealpill(player:Player):void {
 			var rand:int = Math.random() * 100;
@@ -304,7 +304,7 @@ public final class Mutations extends MutationsHelper
 				outputText("You shudder as a small orgasm passes through you. When you recover you actually feel more aroused.");
 				dynStats("lus", 45);
 			}
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		
 		public function peppermintwhite(player:Player):void {
@@ -313,7 +313,7 @@ public final class Mutations extends MutationsHelper
             //Recovers health and fatigue, adds five to max health, and one to libido.*/
             HPChange(EngineCore.maxHP(),true);
             fatigue(-100);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 
 		public function lowgradeelementalPearl(player:Player):void {
@@ -379,7 +379,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 100;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(5);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 		public function lowgradesoulforcerecoverypill2(player:Player):void {
@@ -390,7 +390,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 1000;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(50);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 		public function midgradesoulforcerecoverypill(player:Player):void {
@@ -401,7 +401,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 600;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(25);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 		public function midgradesoulforcerecoverypill2(player:Player):void {
@@ -412,7 +412,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 6000;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(250);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 		public function highgradesoulforcerecoverypill(player:Player):void {
@@ -423,7 +423,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 3600;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(125);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 		public function highgradesoulforcerecoverypill2(player:Player):void {
@@ -434,7 +434,7 @@ public final class Mutations extends MutationsHelper
 				player.soulforce += 36000;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(125);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 			}
 		}
 	//	public function superiorgradesoulforcerecoverypill(player:Player):void {
@@ -442,13 +442,13 @@ public final class Mutations extends MutationsHelper
 	//		player.soulforce += 21600;
 	//		if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
 	//		if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(625);
-	//		statScreenRefresh();
+	//		statScreenRefresh(true);
 	//	}
 		public function fasteningpill(player:Player):void {
 			outputText("You cram the pill in your mouth and swallow it.  Surprisingly there is no discomfort, only a sensation of your stomach been full.");
 			if (player.hasStatusEffect(StatusEffects.FastingPill)) player.addStatusValue(StatusEffects.FastingPill, 1, 24);
 			else player.createStatusEffect(StatusEffects.FastingPill,73,0,0,0);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 
 		public function triplethrustmanual(player:Player):void
@@ -753,19 +753,19 @@ public final class Mutations extends MutationsHelper
 			outputText("You grab your mana potion, pull the cork off and swiftly chug it down.\n\n(Recovered mana: 200)");
 			player.mana += 200;
 			if (player.mana > player.maxMana()) player.mana = player.maxMana();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		public function dilutedarcaneregenconcotion(player:Player):void {
 			outputText("You grab your mana potion, pull the cork off and swiftly chug it down.\n\n(Recovered mana: 1200)");
 			player.mana += 1200;
 			if (player.mana > player.maxMana()) player.mana = player.maxMana();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		public function arcaneregenconcotion(player:Player):void {
 			outputText("You grab your mana potion, pull the cork off and swiftly chug it down.\n\n(Recovered mana: 7200)");
 			player.mana += 7200;
 			if (player.mana > player.maxMana()) player.mana = player.maxMana();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		
 		public function tomeofcleave(player:Player):void
@@ -10734,7 +10734,7 @@ public final class Mutations extends MutationsHelper
 				outputText("\n\n<b>You've received " + num2Text(gems) + " shining gems from the kitsune's gift!  How generous!</b>");
 				player.gems += gems;
 				//add X gems to inventory
-				statScreenRefresh();
+				statScreenRefresh(true);
 				break;
 
 			//[Kitsune Tea/Scholar's Tea] //Just use Scholar's Tea and drop the "trick" effect if you don't want to throw in another new item.
@@ -10776,7 +10776,7 @@ public final class Mutations extends MutationsHelper
 				outputText("\n\n<b>The kitsune's familiar has stolen your gems!</b>");
 				// Lose X gems as though losing in battle to a kitsune
 				player.gems -= 2 + rand(15);
-				statScreenRefresh();
+				statScreenRefresh(true);
 				break;
 
 			//[Prank]
diff --git a/classes/classes/Monster.as b/classes/classes/Monster.as
index dde71afd2..cb6943581 100644
--- a/classes/classes/Monster.as
+++ b/classes/classes/Monster.as
@@ -56,12 +56,9 @@ import flash.utils.getQualifiedClassName;
 		{
 			SceneLib.combat.cleanupAfterCombatImpl();
 		}
-		/*protected static function showStatDown(a:String):void{
-			CoC.instance.mainView.statsView.showStatDown(a);
-		}*/
 		
 		protected final function statScreenRefresh():void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(false);
 		}
 		protected final function doNext(eventNo:Function):void { //Now typesafe
 			EngineCore.doNext(eventNo);
diff --git a/classes/classes/Player.as b/classes/classes/Player.as
index 4bd26702f..89b6d2f03 100644
--- a/classes/classes/Player.as
+++ b/classes/classes/Player.as
@@ -1793,8 +1793,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reducePhysDamage(damage);
@@ -1809,8 +1809,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -1823,6 +1823,7 @@ use namespace CoC;
 					HP = minHP();
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
+				EngineCore.showUpDown(false);
 			}
 			return returnDamage;
 		}
@@ -1910,8 +1911,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reduceMagicDamage(damage);
@@ -1926,8 +1927,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -1937,6 +1938,7 @@ use namespace CoC;
 					HP = minHP();
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
+				EngineCore.showUpDown(false);
 			}
 			return returnDamage;
 		}
@@ -2004,8 +2006,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reduceFireDamage(damage);
@@ -2024,8 +2026,8 @@ use namespace CoC;
 						createStatusEffect(StatusEffects.HydraRegenerationDisabled, 0, 0, 0, 0);
 						outputText(" <b>The fire damage you took suddenly weakened your ability to regenerate!</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -2036,6 +2038,7 @@ use namespace CoC;
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
 			}
+			EngineCore.showUpDown(false);
 			return returnDamage;
 		}
 		public function reduceFireDamage(damage:Number):Number {
@@ -2111,8 +2114,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reduceIceDamage(damage);
@@ -2127,8 +2130,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -2138,6 +2141,7 @@ use namespace CoC;
 					HP = minHP();
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
+				EngineCore.showUpDown(false);
 			}
 			return returnDamage;
 		}
@@ -2202,8 +2206,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reduceLightningDamage(damage);
@@ -2218,8 +2222,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -2229,6 +2233,7 @@ use namespace CoC;
 					HP = minHP();
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
+				EngineCore.showUpDown(false);
 			}
 			return returnDamage;
 		}
@@ -2293,8 +2298,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reduceDarknessDamage(damage);
@@ -2309,8 +2314,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -2320,7 +2325,9 @@ use namespace CoC;
 					HP = minHP();
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
+				EngineCore.showUpDown(false);
 			}
+			
 			return returnDamage;
 		}
 		public function reduceDarknessDamage(damage:Number):Number {
@@ -2386,8 +2393,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">Absorbed " + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">Absorbed " + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('mana');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('mana');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				else {
 					damage = reducePoisonDamage(damage);
@@ -2402,8 +2409,8 @@ use namespace CoC;
 						if (damage > 0) outputText("<b>(<font color=\"#800000\">" + damage + "</font>)</b>");
 						else outputText("<b>(<font color=\"#000080\">" + damage + "</font>)</b>");
 					}
-					game.mainView.statsView.showStatDown('hp');
-					dynStats("lus", 0); //Force display arrow.
+					//game.mainView.statsView.showStatDown('hp');
+					//dynStats("lus", 0); //Force display arrow.
 				}
 				if (flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] > 0) {
 					dynStats("lus", int(damage / 2));
@@ -2414,6 +2421,7 @@ use namespace CoC;
 					//This call did nothing. There is no event 5010: if (game.inCombat) game.doNext(5010);
 				}
 			}
+			EngineCore.showUpDown(false);
 			return returnDamage;
 		}
 		public function reducePoisonDamage(damage:Number):Number {
@@ -7520,7 +7528,7 @@ use namespace CoC;
 					modThickness(100, weightChange);
 					hunger = maxHunger();
 				}
-				if (hunger > oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatUp('hunger');
+				//if (hunger > oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatUp('hunger');
 				//game.dynStats("lus", 0, "scale", false);
 				if (nl) outputText("\n");
 				//Messages
@@ -7537,21 +7545,23 @@ use namespace CoC;
 				if (oldHunger >= 240) EngineCore.awardAchievement("Epic Glutton ", kACHIEVEMENTS.REALISTIC_EPIC_GLUTTON);
 				if (oldHunger >= 490) EngineCore.awardAchievement("Legendary Glutton ", kACHIEVEMENTS.REALISTIC_LEGENDARY_GLUTTON);
 				if (oldHunger >= 990) EngineCore.awardAchievement("Mythical Glutton ", kACHIEVEMENTS.REALISTIC_MYTHICAL_GLUTTON);
-				if (hunger > oldHunger) CoC.instance.mainView.statsView.showStatUp("hunger");
-				dynStats("lus", 0, "scale", false);
-				EngineCore.statScreenRefresh();
+				//if (hunger > oldHunger) CoC.instance.mainView.statsView.showStatUp("hunger");
+				//dynStats("lus", 0, "scale", false);
+				EngineCore.showUpDown(false)
+				EngineCore.statScreenRefresh(false);
 			}
 		}
 		public function refillGargoyleHunger(amnt:Number = 0, nl:Boolean = true):void {
 			var oldHunger:Number = hunger;
 			hunger += amnt;
 			if (hunger > maxHunger()) hunger = maxHunger();
-			if (hunger > oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatUp('hunger');
+			//if (hunger > oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatUp('hunger');
 			//game.dynStats("lus", 0, "scale", false);
 			if (nl) outputText("\n");
-			if (hunger > oldHunger) CoC.instance.mainView.statsView.showStatUp("hunger");
-			dynStats("lus", 0, "scale", false);
-			EngineCore.statScreenRefresh();
+			//if (hunger > oldHunger) CoC.instance.mainView.statsView.showStatUp("hunger");
+			//dynStats("lus", 0, "scale", false);
+			EngineCore.showUpDown(false);
+			EngineCore.statScreenRefresh(false);
 		}
 		
 		/**
@@ -7562,8 +7572,9 @@ use namespace CoC;
 			var oldHunger:Number = hunger;
 			hunger -= amnt;
 			if (hunger < 0) hunger = 0;
-			if (hunger < oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatDown('hunger');
-			dynStats("lus", 0, "scale", false);
+			//if (hunger < oldHunger && flags[kFLAGS.USE_OLD_INTERFACE] == 0) CoC.instance.mainView.statsView.showStatDown('hunger');
+			//dynStats("lus", 0, "scale", false);
+			EngineCore.showUpDown(false);
 		}
 		
 		public function corruptionTolerance():int {
@@ -8483,8 +8494,8 @@ use namespace CoC;
 				cor:0
 			};
 		private function calcMaxStatsRacial():void {
-			if(flags[kFLAGS.TIMES_TRANSFORMED] != _NeedsStatsRacialBonusRefresh) {
-			Begin("Player", "getAllMaxStats.racial");
+			var _updateStats:Boolean = _NeedsStatsPerkBonusRefresh || (flags[kFLAGS.TIMES_TRANSFORMED] != _NeedsStatsRacialBonusRefresh);
+			if (!_updateStats)	return; //no calculation necessary
 			var maxStr:int = 0;
 			var maxTou:int = 0;
 			var maxSpe:int = 0;
@@ -8493,7 +8504,10 @@ use namespace CoC;
 			var maxLib:int = 0;
 			var maxSen:int = 0;
 			var maxCor:int = 0;
-			var newGamePlusMod:int = this.newGamePlusMod()+1;
+			var newGamePlusMod:int = this.newGamePlusMod() + 1;
+			//recalc racial bonus only if changed
+			if(true/*flags[kFLAGS.TIMES_TRANSFORMED] != _NeedsStatsRacialBonusRefresh*/ ) {
+			Begin("Player", "getAllMaxStats.racial");
 			//Alter max stats depending on race (+15 za pkt)
 			if (cowScore() >= 4) {
 				if (cowScore() >= 10) {
@@ -9404,422 +9418,425 @@ use namespace CoC;
 			_NeedsStatsRacialBonusRefresh = flags[kFLAGS.TIMES_TRANSFORMED]
 			End("Player", "getAllMaxStats.racial");
 		}
-			if(_NeedsStatsPerkBonusRefresh){
-			Begin("Player","getAllMaxStats.perks2");
-			if (findPerk(PerkLib.ChimericalBodyInitialStage) >= 0) {
-				maxTou += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodySemiBasicStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodyBasicStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodyAdvancedStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodySemiSuperiorStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodySuperiorStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (10 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodyPeerlessStage) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (10 * newGamePlusMod);
-				maxSpe += (10 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ChimericalBodySemiEpicStage) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (10 * newGamePlusMod);
-				maxWis += (10 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-				maxSen += (10 * newGamePlusMod);// 8/8/8/7/7/7/7
-			}
-			if (findPerk(PerkLib.ChimericalBodyEpicStage) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (10 * newGamePlusMod);
-				maxSpe += (10 * newGamePlusMod);
-				maxInt += (10 * newGamePlusMod);
-				maxWis += (10 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);// 10/10/10/7/7/6/6
-			}
-			if (findPerk(PerkLib.BlackHeartFinalForm) >= 0) {
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.CatlikeNimblenessEvolved) >= 0) maxSpe += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.DraconicLungs) >= 0) maxSpe += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.DraconicLungsEvolved) >= 0) {
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.DraconicLungsFinalForm) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ElvishPeripheralNervSysEvolved) >= 0) maxSpe += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.ElvishPeripheralNervSysFinalForm) >= 0) maxSpe += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.GorgonsEyesEvolved) >= 0) {
-				maxSpe += (5 * newGamePlusMod);
-				maxSen += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.HinezumiBurningBloodFinalForm) >= 0) maxTou += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.KitsuneThyroidGland) >= 0) maxSpe += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.KitsuneThyroidGlandEvolved) >= 0) {
-				maxSpe += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.KitsuneThyroidGlandEvolved) >= 0) {
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.LactaBovinaOvariesEvolved) >= 0) maxLib += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.LactaBovinaOvariesFinalForm) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.MantislikeAgility) >= 0) {
-				if (hasCoatOfType(Skin.CHITIN) && findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (20 * newGamePlusMod);
-				if ((skinType == Skin.SCALES && findPerk(PerkLib.ThickSkin) >= 0) || hasCoatOfType(Skin.CHITIN)) maxSpe += (15 * newGamePlusMod);
-				if (skinType == Skin.SCALES) maxSpe += (10 * newGamePlusMod);
-				if (findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.MantislikeAgilityEvolved) >= 0) {
-				if (hasCoatOfType(Skin.CHITIN) && findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (25 * newGamePlusMod);
-				if ((skinType == Skin.SCALES && findPerk(PerkLib.ThickSkin) >= 0) || hasCoatOfType(Skin.CHITIN)) maxSpe += (20 * newGamePlusMod);
-				if (skinType == Skin.SCALES) maxSpe += (15 * newGamePlusMod);
-				if (findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.MinotaurTesticlesEvolved) >= 0) maxLib += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.MinotaurTesticlesFinalForm) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.NaturalPunchingBag) >= 0) maxTou += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.NaturalPunchingBagEvolved) >= 0) maxTou += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.NaturalPunchingBagFinalForm) >= 0) maxTou += (20 * newGamePlusMod);
-			if (findPerk(PerkLib.ObsidianHeartFinalForm) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.OniMusculature) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.OniMusculatureEvolved) >= 0) maxStr += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.OniMusculatureFinalForm) >= 0) maxStr += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.OrcAdrenalGlandsEvolved) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.OrcAdrenalGlandsFinalForm) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.PigBoarFat) >= 0) maxTou += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.PigBoarFatEvolved) >= 0) maxTou += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.PigBoarFatFinalForm) >= 0) maxTou += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.SalamanderAdrenalGlands) >= 0) {
-				maxTou += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.SalamanderAdrenalGlandsEvolved) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.SalamanderAdrenalGlandsFinalForm) >= 0) {
-				maxStr += (15 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (15 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ScyllaInkGlands) >= 0) maxStr += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.TrachealSystemEvolved) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.TrachealSystemFinalForm) >= 0) maxSpe += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.VenomGlandsFinalForm) >= 0) maxTou += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.EzekielBlessing) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			//Perks
-			if (findPerk(PerkLib.JobAllRounder) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-				maxSen += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobBeastWarrior) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxTou += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-				if (findPerk(PerkLib.ImprovingNaturesBlueprintsApexPredator) >= 0) {
+			//recalc perk bonus only if changed
+			if(true /*_NeedsStatsPerkBonusRefresh*/ ){	
+				Begin("Player","getAllMaxStats.perks2");
+				if (findPerk(PerkLib.ChimericalBodyInitialStage) >= 0) {
+					maxTou += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ChimericalBodySemiBasicStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
 					maxInt += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ChimericalBodyBasicStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
 					maxWis += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
 				}
-				else {
-					maxInt -= (5 * newGamePlusMod);
-					maxWis -= (5 * newGamePlusMod);
+				if (findPerk(PerkLib.ChimericalBodyAdvancedStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
 				}
-			}
-			if (findPerk(PerkLib.JobBrawler) >= 0) maxStr += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.JobCourtesan) >= 0) maxLib += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.JobDefender) >= 0) maxTou += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.JobDervish) >= 0) maxSpe += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.JobElementalConjurer) >= 0) maxWis += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobEnchanter) >= 0) maxInt += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.JobEromancer) >= 0) {
-				maxInt += (5 * newGamePlusMod);
-				maxLib += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobGolemancer) >= 0) {
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobGuardian) >= 0) maxTou += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobGunslinger) >= 0) maxWis += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.JobHealer) >= 0) {
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobHunter) >= 0) {
-				maxSpe += (10 * newGamePlusMod);
-				maxInt += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobKnight) >= 0) maxTou += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.JobLeader) >= 0) {
-				maxInt += (5 * newGamePlusMod);
-				maxWis += (5 * newGamePlusMod);
-				if (findPerk(PerkLib.ShootTheLoadAndHitTheRoad) >= 0) maxSpe += (5 * newGamePlusMod);
-				if (findPerk(PerkLib.ShootTheLoadAndHitTheRoad) < 0) maxLib -= (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobMonk) >= 0) maxWis += (15 * newGamePlusMod);
-			if (findPerk(PerkLib.JobRanger) >= 0) maxSpe += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobRogue) >= 0) {
-				maxStr += (5 * newGamePlusMod);
-				maxSpe += (5 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.JobSeducer) >= 0) maxLib += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobSorcerer) >= 0) maxInt += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobSoulCultivator) >= 0) maxWis += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.JobSwordsman) >= 0) maxStr += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.JobWarlord) >= 0) maxTou += (20 * newGamePlusMod);
-			if (findPerk(PerkLib.JobWarrior) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.PrestigeJobArcaneArcher) >= 0) {
-				maxSpe += (40 * newGamePlusMod);
-				maxInt += (40 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobBerserker) >= 0) {
-				maxStr += (60 * newGamePlusMod);
-				maxTou += (20 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobGreySage) >= 0) {
-				maxInt += (80 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobSeer) >= 0) {
-				maxInt += (60 * newGamePlusMod);
-				maxWis += (20 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobSentinel) >= 0) {
-				maxStr += (20 * newGamePlusMod);
-				maxTou += (60 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobSoulArcher) >= 0) {
-				maxSpe += (40 * newGamePlusMod);
-				maxWis += (40 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobSoulArtMaster) >= 0) {
-				maxStr += (40 * newGamePlusMod);
-				maxWis += (40 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobSpellKnight) >= 0) {
-				maxStr += (40 * newGamePlusMod);
-				maxInt += (40 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobTempest) >= 0) {
-				maxStr += (40 * newGamePlusMod);
-				maxSpe += (40 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.PrestigeJobWarlock) >= 0) {
-				maxInt += (60 * newGamePlusMod);
-				maxLib += (20 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.DeityJobMunchkin) >= 0) {
-				maxStr += (25 * newGamePlusMod);
-				maxTou += (25 * newGamePlusMod);
-				maxSpe += (25 * newGamePlusMod);
-				maxInt += (25 * newGamePlusMod);
-				maxWis += (25 * newGamePlusMod);
-				maxLib += (15 * newGamePlusMod);
-				maxSen += (15 * newGamePlusMod);
-			}
-			
-			if (findPerk(PerkLib.CarefulButRecklessAimAndShooting) >= 0 && findPerk(PerkLib.ColdAim) < 0) maxTou -= (15 * newGamePlusMod);
-			if (findPerk(PerkLib.WeaponMastery) >= 0) maxStr += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.WeaponGrandMastery) >= 0) maxStr += (10 * newGamePlusMod);
-			if (findPerk(PerkLib.ElementalConjurerResolve) >= 0) {
-				if (findPerk(PerkLib.ElementalConjurerMindAndBodyResolve) < 0) {
-					maxStr -= (15 * newGamePlusMod);
-					maxTou -= (15 * newGamePlusMod);
-					maxSpe -= (15 * newGamePlusMod);
+				if (findPerk(PerkLib.ChimericalBodySemiSuperiorStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
 				}
-				maxInt += (20 * newGamePlusMod);
-				maxWis += (30 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ElementalConjurerDedication) >= 0) {
-				if (findPerk(PerkLib.ElementalConjurerMindAndBodyDedication) < 0) {
-					maxStr -= (30 * newGamePlusMod);
-					maxTou -= (30 * newGamePlusMod);
-					maxSpe -= (30 * newGamePlusMod);
+				if (findPerk(PerkLib.ChimericalBodySuperiorStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (10 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
 				}
-				maxInt += (40 * newGamePlusMod);
-				maxWis += (60 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.ElementalConjurerSacrifice) >= 0) {
-				if (findPerk(PerkLib.ElementalConjurerMindAndBodySacrifice) < 0) {
-					maxStr -= (45 * newGamePlusMod);
-					maxTou -= (45 * newGamePlusMod);
-					maxSpe -= (45 * newGamePlusMod);
+				if (findPerk(PerkLib.ChimericalBodyPeerlessStage) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (10 * newGamePlusMod);
+					maxSpe += (10 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
 				}
-				maxInt += (60 * newGamePlusMod);
-				maxWis += (90 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.HclassHeavenTribulationSurvivor) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (10 * newGamePlusMod);
-				maxSpe += (10 * newGamePlusMod);
-				maxInt += (10 * newGamePlusMod);
-				maxWis += (10 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-				maxSen += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.GclassHeavenTribulationSurvivor) >= 0) {
-				maxStr += (15 * newGamePlusMod);
-				maxTou += (15 * newGamePlusMod);
-				maxSpe += (15 * newGamePlusMod);
-				maxInt += (15 * newGamePlusMod);
-				maxWis += (15 * newGamePlusMod);
-				maxLib += (15 * newGamePlusMod);
-				maxSen += (15 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.FclassHeavenTribulationSurvivor) >= 0) {
-				maxStr += (20 * newGamePlusMod);
-				maxTou += (20 * newGamePlusMod);
-				maxSpe += (20 * newGamePlusMod);
-				maxInt += (20 * newGamePlusMod);
-				maxWis += (20 * newGamePlusMod);
-				maxLib += (20 * newGamePlusMod);
-				maxSen += (20 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.EpicStrength) >= 0) maxStr += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendaryStrength) >= 0) maxStr += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalStrength) >= 0) maxStr += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicToughness) >= 0) maxTou += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendaryToughness) >= 0) maxTou += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalToughness) >= 0) maxTou += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicSpeed) >= 0) maxSpe += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendarySpeed) >= 0) maxSpe += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalSpeed) >= 0) maxSpe += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicIntelligence) >= 0) maxInt += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendaryIntelligence) >= 0) maxInt += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalIntelligence) >= 0) maxInt += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicWisdom) >= 0) maxWis += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendaryWisdom) >= 0) maxWis += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalWisdom) >= 0) maxWis += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicLibido) >= 0) maxLib += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendaryLibido) >= 0) maxLib += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalLibido) >= 0) maxLib += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.EpicSensitivity) >= 0) maxSen += (35 + (5 * newGamePlusMod));
-			if (findPerk(PerkLib.LegendarySensitivity) >= 0) maxSen += (50 + (10 * newGamePlusMod));
-			if (findPerk(PerkLib.MythicalSensitivity) >= 0) maxSen += (65 + (15 * newGamePlusMod));
-			if (findPerk(PerkLib.IronStomachSu) >= 0) maxTou += (5 * newGamePlusMod);
-			if (findPerk(PerkLib.SoulApprentice) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulPersonage) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulWarrior) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulSprite) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulScholar) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulElder) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulExalt) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulOverlord) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulTyrant) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulKing) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulEmperor) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.SoulAncestor) >= 0) maxWis += 5;
-			if (findPerk(PerkLib.EpicGolemMaker) >= 0) {
-				maxInt += 10;
-				maxWis += 10;
-			}
-			if (findPerk(PerkLib.LegendaryGolemMaker) >= 0) {
-				maxInt += 20;
-				maxWis += 20;
-			}
-			if (findPerk(PerkLib.MythicalGolemMaker) >= 0) {
-				maxInt += 30;
-				maxWis += 30;
-			}
-			if (findPerk(PerkLib.LimitBreakerFlesh1stStage) >= 0) {
-				maxStr += (10 * newGamePlusMod);
-				maxTou += (10 * newGamePlusMod);
-				maxSpe += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.LimitBreakerFlesh2ndStage) >= 0) {
-				maxInt += (10 * newGamePlusMod);
-				maxWis += (10 * newGamePlusMod);
-				maxLib += (10 * newGamePlusMod);
-				maxSen += (10 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.LimitBreakerPsyche1stStage) >= 0) {
-				maxStr += (20 * newGamePlusMod);
-				maxTou += (20 * newGamePlusMod);
-				maxSpe += (20 * newGamePlusMod);
-			}
-			if (findPerk(PerkLib.LimitBreakerPsyche2ndStage) >= 0) {
-				maxInt += (20 * newGamePlusMod);
-				maxWis += (20 * newGamePlusMod);
-				maxLib += (20 * newGamePlusMod);
-				maxSen += (20 * newGamePlusMod);
+				if (findPerk(PerkLib.ChimericalBodySemiEpicStage) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					maxInt += (10 * newGamePlusMod);
+					maxWis += (10 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+					maxSen += (10 * newGamePlusMod);// 8/8/8/7/7/7/7
+				}
+				if (findPerk(PerkLib.ChimericalBodyEpicStage) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (10 * newGamePlusMod);
+					maxSpe += (10 * newGamePlusMod);
+					maxInt += (10 * newGamePlusMod);
+					maxWis += (10 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);// 10/10/10/7/7/6/6
+				}
+				if (findPerk(PerkLib.BlackHeartFinalForm) >= 0) {
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.CatlikeNimblenessEvolved) >= 0) maxSpe += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.DraconicLungs) >= 0) maxSpe += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.DraconicLungsEvolved) >= 0) {
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.DraconicLungsFinalForm) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ElvishPeripheralNervSysEvolved) >= 0) maxSpe += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.ElvishPeripheralNervSysFinalForm) >= 0) maxSpe += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.GorgonsEyesEvolved) >= 0) {
+					maxSpe += (5 * newGamePlusMod);
+					maxSen += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.HinezumiBurningBloodFinalForm) >= 0) maxTou += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.KitsuneThyroidGland) >= 0) maxSpe += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.KitsuneThyroidGlandEvolved) >= 0) {
+					maxSpe += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.KitsuneThyroidGlandEvolved) >= 0) {
+					maxSpe += (5 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.LactaBovinaOvariesEvolved) >= 0) maxLib += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.LactaBovinaOvariesFinalForm) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.MantislikeAgility) >= 0) {
+					if (hasCoatOfType(Skin.CHITIN) && findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (20 * newGamePlusMod);
+					if ((skinType == Skin.SCALES && findPerk(PerkLib.ThickSkin) >= 0) || hasCoatOfType(Skin.CHITIN)) maxSpe += (15 * newGamePlusMod);
+					if (skinType == Skin.SCALES) maxSpe += (10 * newGamePlusMod);
+					if (findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.MantislikeAgilityEvolved) >= 0) {
+					if (hasCoatOfType(Skin.CHITIN) && findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (25 * newGamePlusMod);
+					if ((skinType == Skin.SCALES && findPerk(PerkLib.ThickSkin) >= 0) || hasCoatOfType(Skin.CHITIN)) maxSpe += (20 * newGamePlusMod);
+					if (skinType == Skin.SCALES) maxSpe += (15 * newGamePlusMod);
+					if (findPerk(PerkLib.ThickSkin) >= 0) maxSpe += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.MinotaurTesticlesEvolved) >= 0) maxLib += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.MinotaurTesticlesFinalForm) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.NaturalPunchingBag) >= 0) maxTou += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.NaturalPunchingBagEvolved) >= 0) maxTou += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.NaturalPunchingBagFinalForm) >= 0) maxTou += (20 * newGamePlusMod);
+				if (findPerk(PerkLib.ObsidianHeartFinalForm) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.OniMusculature) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.OniMusculatureEvolved) >= 0) maxStr += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.OniMusculatureFinalForm) >= 0) maxStr += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.OrcAdrenalGlandsEvolved) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.OrcAdrenalGlandsFinalForm) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.PigBoarFat) >= 0) maxTou += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.PigBoarFatEvolved) >= 0) maxTou += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.PigBoarFatFinalForm) >= 0) maxTou += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.SalamanderAdrenalGlands) >= 0) {
+					maxTou += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.SalamanderAdrenalGlandsEvolved) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.SalamanderAdrenalGlandsFinalForm) >= 0) {
+					maxStr += (15 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (15 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ScyllaInkGlands) >= 0) maxStr += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.TrachealSystemEvolved) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.TrachealSystemFinalForm) >= 0) maxSpe += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.VenomGlandsFinalForm) >= 0) maxTou += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.EzekielBlessing) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
+				}
+				//Perks
+				if (findPerk(PerkLib.JobAllRounder) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+					maxSen += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobBeastWarrior) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxTou += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+					if (findPerk(PerkLib.ImprovingNaturesBlueprintsApexPredator) >= 0) {
+						maxInt += (5 * newGamePlusMod);
+						maxWis += (5 * newGamePlusMod);
+					}
+					else {
+						maxInt -= (5 * newGamePlusMod);
+						maxWis -= (5 * newGamePlusMod);
+					}
+				}
+				if (findPerk(PerkLib.JobBrawler) >= 0) maxStr += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.JobCourtesan) >= 0) maxLib += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.JobDefender) >= 0) maxTou += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.JobDervish) >= 0) maxSpe += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.JobElementalConjurer) >= 0) maxWis += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobEnchanter) >= 0) maxInt += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.JobEromancer) >= 0) {
+					maxInt += (5 * newGamePlusMod);
+					maxLib += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobGolemancer) >= 0) {
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobGuardian) >= 0) maxTou += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobGunslinger) >= 0) maxWis += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.JobHealer) >= 0) {
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobHunter) >= 0) {
+					maxSpe += (10 * newGamePlusMod);
+					maxInt += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobKnight) >= 0) maxTou += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.JobLeader) >= 0) {
+					maxInt += (5 * newGamePlusMod);
+					maxWis += (5 * newGamePlusMod);
+					if (findPerk(PerkLib.ShootTheLoadAndHitTheRoad) >= 0) maxSpe += (5 * newGamePlusMod);
+					if (findPerk(PerkLib.ShootTheLoadAndHitTheRoad) < 0) maxLib -= (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobMonk) >= 0) maxWis += (15 * newGamePlusMod);
+				if (findPerk(PerkLib.JobRanger) >= 0) maxSpe += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobRogue) >= 0) {
+					maxStr += (5 * newGamePlusMod);
+					maxSpe += (5 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.JobSeducer) >= 0) maxLib += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobSorcerer) >= 0) maxInt += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobSoulCultivator) >= 0) maxWis += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.JobSwordsman) >= 0) maxStr += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.JobWarlord) >= 0) maxTou += (20 * newGamePlusMod);
+				if (findPerk(PerkLib.JobWarrior) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.PrestigeJobArcaneArcher) >= 0) {
+					maxSpe += (40 * newGamePlusMod);
+					maxInt += (40 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobBerserker) >= 0) {
+					maxStr += (60 * newGamePlusMod);
+					maxTou += (20 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobGreySage) >= 0) {
+					maxInt += (80 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobSeer) >= 0) {
+					maxInt += (60 * newGamePlusMod);
+					maxWis += (20 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobSentinel) >= 0) {
+					maxStr += (20 * newGamePlusMod);
+					maxTou += (60 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobSoulArcher) >= 0) {
+					maxSpe += (40 * newGamePlusMod);
+					maxWis += (40 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobSoulArtMaster) >= 0) {
+					maxStr += (40 * newGamePlusMod);
+					maxWis += (40 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobSpellKnight) >= 0) {
+					maxStr += (40 * newGamePlusMod);
+					maxInt += (40 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobTempest) >= 0) {
+					maxStr += (40 * newGamePlusMod);
+					maxSpe += (40 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.PrestigeJobWarlock) >= 0) {
+					maxInt += (60 * newGamePlusMod);
+					maxLib += (20 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.DeityJobMunchkin) >= 0) {
+					maxStr += (25 * newGamePlusMod);
+					maxTou += (25 * newGamePlusMod);
+					maxSpe += (25 * newGamePlusMod);
+					maxInt += (25 * newGamePlusMod);
+					maxWis += (25 * newGamePlusMod);
+					maxLib += (15 * newGamePlusMod);
+					maxSen += (15 * newGamePlusMod);
+				}
+				
+				if (findPerk(PerkLib.CarefulButRecklessAimAndShooting) >= 0 && findPerk(PerkLib.ColdAim) < 0) maxTou -= (15 * newGamePlusMod);
+				if (findPerk(PerkLib.WeaponMastery) >= 0) maxStr += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.WeaponGrandMastery) >= 0) maxStr += (10 * newGamePlusMod);
+				if (findPerk(PerkLib.ElementalConjurerResolve) >= 0) {
+					if (findPerk(PerkLib.ElementalConjurerMindAndBodyResolve) < 0) {
+						maxStr -= (15 * newGamePlusMod);
+						maxTou -= (15 * newGamePlusMod);
+						maxSpe -= (15 * newGamePlusMod);
+					}
+					maxInt += (20 * newGamePlusMod);
+					maxWis += (30 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ElementalConjurerDedication) >= 0) {
+					if (findPerk(PerkLib.ElementalConjurerMindAndBodyDedication) < 0) {
+						maxStr -= (30 * newGamePlusMod);
+						maxTou -= (30 * newGamePlusMod);
+						maxSpe -= (30 * newGamePlusMod);
+					}
+					maxInt += (40 * newGamePlusMod);
+					maxWis += (60 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.ElementalConjurerSacrifice) >= 0) {
+					if (findPerk(PerkLib.ElementalConjurerMindAndBodySacrifice) < 0) {
+						maxStr -= (45 * newGamePlusMod);
+						maxTou -= (45 * newGamePlusMod);
+						maxSpe -= (45 * newGamePlusMod);
+					}
+					maxInt += (60 * newGamePlusMod);
+					maxWis += (90 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.HclassHeavenTribulationSurvivor) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (10 * newGamePlusMod);
+					maxSpe += (10 * newGamePlusMod);
+					maxInt += (10 * newGamePlusMod);
+					maxWis += (10 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+					maxSen += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.GclassHeavenTribulationSurvivor) >= 0) {
+					maxStr += (15 * newGamePlusMod);
+					maxTou += (15 * newGamePlusMod);
+					maxSpe += (15 * newGamePlusMod);
+					maxInt += (15 * newGamePlusMod);
+					maxWis += (15 * newGamePlusMod);
+					maxLib += (15 * newGamePlusMod);
+					maxSen += (15 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.FclassHeavenTribulationSurvivor) >= 0) {
+					maxStr += (20 * newGamePlusMod);
+					maxTou += (20 * newGamePlusMod);
+					maxSpe += (20 * newGamePlusMod);
+					maxInt += (20 * newGamePlusMod);
+					maxWis += (20 * newGamePlusMod);
+					maxLib += (20 * newGamePlusMod);
+					maxSen += (20 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.EpicStrength) >= 0) maxStr += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendaryStrength) >= 0) maxStr += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalStrength) >= 0) maxStr += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicToughness) >= 0) maxTou += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendaryToughness) >= 0) maxTou += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalToughness) >= 0) maxTou += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicSpeed) >= 0) maxSpe += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendarySpeed) >= 0) maxSpe += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalSpeed) >= 0) maxSpe += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicIntelligence) >= 0) maxInt += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendaryIntelligence) >= 0) maxInt += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalIntelligence) >= 0) maxInt += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicWisdom) >= 0) maxWis += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendaryWisdom) >= 0) maxWis += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalWisdom) >= 0) maxWis += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicLibido) >= 0) maxLib += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendaryLibido) >= 0) maxLib += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalLibido) >= 0) maxLib += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.EpicSensitivity) >= 0) maxSen += (35 + (5 * newGamePlusMod));
+				if (findPerk(PerkLib.LegendarySensitivity) >= 0) maxSen += (50 + (10 * newGamePlusMod));
+				if (findPerk(PerkLib.MythicalSensitivity) >= 0) maxSen += (65 + (15 * newGamePlusMod));
+				if (findPerk(PerkLib.IronStomachSu) >= 0) maxTou += (5 * newGamePlusMod);
+				if (findPerk(PerkLib.SoulApprentice) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulPersonage) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulWarrior) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulSprite) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulScholar) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulElder) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulExalt) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulOverlord) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulTyrant) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulKing) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulEmperor) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.SoulAncestor) >= 0) maxWis += 5;
+				if (findPerk(PerkLib.EpicGolemMaker) >= 0) {
+					maxInt += 10;
+					maxWis += 10;
+				}
+				if (findPerk(PerkLib.LegendaryGolemMaker) >= 0) {
+					maxInt += 20;
+					maxWis += 20;
+				}
+				if (findPerk(PerkLib.MythicalGolemMaker) >= 0) {
+					maxInt += 30;
+					maxWis += 30;
+				}
+				if (findPerk(PerkLib.LimitBreakerFlesh1stStage) >= 0) {
+					maxStr += (10 * newGamePlusMod);
+					maxTou += (10 * newGamePlusMod);
+					maxSpe += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.LimitBreakerFlesh2ndStage) >= 0) {
+					maxInt += (10 * newGamePlusMod);
+					maxWis += (10 * newGamePlusMod);
+					maxLib += (10 * newGamePlusMod);
+					maxSen += (10 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.LimitBreakerPsyche1stStage) >= 0) {
+					maxStr += (20 * newGamePlusMod);
+					maxTou += (20 * newGamePlusMod);
+					maxSpe += (20 * newGamePlusMod);
+				}
+				if (findPerk(PerkLib.LimitBreakerPsyche2ndStage) >= 0) {
+					maxInt += (20 * newGamePlusMod);
+					maxWis += (20 * newGamePlusMod);
+					maxLib += (20 * newGamePlusMod);
+					maxSen += (20 * newGamePlusMod);
+				}
+				if (hasPerk(PerkLib.ProductivityDrugs)) maxLib += perkv1(PerkLib.ProductivityDrugs);
+				if (hasPerk(PerkLib.TitanicStrength)) maxStr += Math.round(maxStr * 0.01 * Math.round(tallness / 3) * newGamePlusMod);
+				if (hasPerk(PerkLib.IcyFlesh)) maxTou = 1;
+				_NeedsStatsPerkBonusRefresh = false; 
+				End("Player", "getAllMaxStats.perks2");
 			}
-			if (hasPerk(PerkLib.ProductivityDrugs)) maxLib += perkv1(PerkLib.ProductivityDrugs);
-			if (hasPerk(PerkLib.TitanicStrength)) maxStr += Math.round(maxStr * 0.01 * Math.round(tallness / 3) * newGamePlusMod);
-			if (hasPerk(PerkLib.IcyFlesh)) maxTou = 1;
-			
 			this._MaxStatsRacialBonus.str = maxStr;
 			this._MaxStatsRacialBonus.tou = maxTou;
 			this._MaxStatsRacialBonus.spe = maxSpe;
@@ -9828,9 +9845,6 @@ use namespace CoC;
 			this._MaxStatsRacialBonus.lib = maxLib;
 			this._MaxStatsRacialBonus.sen = maxSen;
 			this._MaxStatsRacialBonus.cor = maxCor;
-			_NeedsStatsPerkBonusRefresh = false; 
-			End("Player", "getAllMaxStats.perks2");
-		}
 	}
 			
 		
@@ -9858,7 +9872,7 @@ use namespace CoC;
 			{
 				str += statusEffectv2(StatusEffects.DriderIncubusVenom);
 				removeStatusEffect(StatusEffects.DriderIncubusVenom);
-				CoC.instance.mainView.statsView.showStatUp('str');
+				//CoC.instance.mainView.statsView.showStatUp('str');
 			}
 			if(CoC.instance.monster.hasStatusEffect(StatusEffects.Sandstorm)) CoC.instance.monster.removeStatusEffect(StatusEffects.Sandstorm);
 			if(hasStatusEffect(StatusEffects.DwarfRage)) {
@@ -9885,12 +9899,12 @@ use namespace CoC;
 			}
 			if(CoC.instance.monster.hasStatusEffect(StatusEffects.TwuWuv)) {
 				inte += CoC.instance.monster.statusEffectv1(StatusEffects.TwuWuv);
-				EngineCore.statScreenRefresh();
-				CoC.instance.mainView.statsView.showStatUp( 'inte' );
+				//EngineCore.statScreenRefresh();
+				//CoC.instance.mainView.statsView.showStatUp( 'inte' );
 			}
 			if(hasStatusEffect(StatusEffects.NagaVenom)) {
 				spe += statusEffectv1(StatusEffects.NagaVenom);
-				CoC.instance.mainView.statsView.showStatUp( 'spe' );
+				//CoC.instance.mainView.statsView.showStatUp( 'spe' );
 				removeStatusEffect(StatusEffects.NagaVenom);
 			}
 			if(hasStatusEffect(StatusEffects.MedusaVenom)) {
@@ -9898,15 +9912,15 @@ use namespace CoC;
 				tou += statusEffectv2(StatusEffects.MedusaVenom);
 				spe += statusEffectv3(StatusEffects.MedusaVenom);
 				inte += statusEffectv4(StatusEffects.MedusaVenom);
-				CoC.instance.mainView.statsView.showStatUp( 'str' );
-				CoC.instance.mainView.statsView.showStatUp( 'tou' );
-				CoC.instance.mainView.statsView.showStatUp( 'spe' );
-				CoC.instance.mainView.statsView.showStatUp( 'inte' );
+				//CoC.instance.mainView.statsView.showStatUp( 'str' );
+				//CoC.instance.mainView.statsView.showStatUp( 'tou' );
+				//CoC.instance.mainView.statsView.showStatUp( 'spe' );
+				//CoC.instance.mainView.statsView.showStatUp( 'inte' );
 				removeStatusEffect(StatusEffects.MedusaVenom);
 			}
 			if(hasStatusEffect(StatusEffects.Frostbite)) {
 				str += statusEffectv1(StatusEffects.Frostbite);
-				CoC.instance.mainView.statsView.showStatUp( 'str' );
+				//CoC.instance.mainView.statsView.showStatUp( 'str' );
 				removeStatusEffect(StatusEffects.Frostbite);
 			}
 			if(hasStatusEffect(StatusEffects.Flying)) {
@@ -10045,7 +10059,7 @@ use namespace CoC;
 			}
 			if(amount == 0) consumed = true;
 			return consumed;
-*/
+*/			
 		}
 
 		public function getLowestSlot(itype:ItemType):ItemSlotClass
@@ -10561,21 +10575,21 @@ use namespace CoC;
 			//These are reset when up/down arrows are hidden with
 			//hideUpDown();
 			//Just check str because they are either all 0 or real values
-			if(game.oldStats.oldStr == 0) {
-				game.oldStats.oldStr = str;
-				game.oldStats.oldTou = tou;
-				game.oldStats.oldSpe = spe;
-				game.oldStats.oldInte = inte;
-				game.oldStats.oldWis = wis;
-				game.oldStats.oldLib = lib;
-				game.oldStats.oldSens = sens;
-				game.oldStats.oldCor = cor;
-				game.oldStats.oldHP = HP;
-				game.oldStats.oldLust = lust;
-				game.oldStats.oldFatigue = fatigue;
-				game.oldStats.oldSoulforce = soulforce;
-				game.oldStats.oldHunger = hunger;
-			}
+			//if(game.oldStats.oldStr == 0) {		moved to EngineCore.ShowUpDown
+				//game.oldStats.oldStr = str;
+				//game.oldStats.oldTou = tou;
+				//game.oldStats.oldSpe = spe;
+				//game.oldStats.oldInte = inte;
+				//game.oldStats.oldWis = wis;
+				//game.oldStats.oldLib = lib;
+				//game.oldStats.oldSens = sens;
+				//game.oldStats.oldCor = cor;
+				//game.oldStats.oldHP = HP;
+				//game.oldStats.oldLust = lust;
+				//game.oldStats.oldFatigue = fatigue;
+				//game.oldStats.oldSoulforce = soulforce;
+				//game.oldStats.oldHunger = hunger;
+			//}
 			if (scale) {
 				//MOD CHANGES FOR PERKS
 				//Bimbos learn slower
@@ -10602,7 +10616,7 @@ use namespace CoC;
 				if (dcor > 0 && findPerk(PerkLib.PurityBlessing) >= 0) dcor *= 0.5;
 				if (dcor > 0 && findPerk(PerkLib.PureAndLoving) >= 0) dcor *= 0.75;
 				if (dcor > 0 && weapon == game.weapons.HNTCANE) dcor *= 0.5;
-				if (findPerk(PerkLib.AscensionMoralShifter) >= 0) dcor *= 1 + (perkv1(PerkLib.AscensionMoralShifter) * 0.2);
+				dcor *= 1 + (perkv1(PerkLib.AscensionMoralShifter) * 0.2); //if (findPerk(PerkLib.AscensionMoralShifter) >= 0) dcor *= 1 + (perkv1(PerkLib.AscensionMoralShifter) * 0.2);
 				if (findPerk(PerkLib.Lycanthropy) >= 0) dcor *= 1.2;
 				if (hasStatusEffect(StatusEffects.BlessingOfDivineFera)) dcor *= 2;
 				
@@ -10615,13 +10629,13 @@ use namespace CoC;
 				
 				
 				//Bonus gain for perks!
-				if (findPerk(PerkLib.Strong) >= 0) dstr += dstr * perk(findPerk(PerkLib.Strong)).value1;
-				if (findPerk(PerkLib.Tough) >= 0) dtou += dtou * perk(findPerk(PerkLib.Tough)).value1;
-				if (findPerk(PerkLib.Fast) >= 0) dspe += dspe * perk(findPerk(PerkLib.Fast)).value1;
-				if (findPerk(PerkLib.Smart) >= 0) dinte += dinte * perk(findPerk(PerkLib.Smart)).value1;
-				if (findPerk(PerkLib.Wise) >= 0) dwis += dwis * perk(findPerk(PerkLib.Wise)).value1;
-				if (findPerk(PerkLib.Lusty) >= 0) dlib += dlib * perk(findPerk(PerkLib.Lusty)).value1;
-				if (findPerk(PerkLib.Sensitive) >= 0) dsens += dsens * perk(findPerk(PerkLib.Sensitive)).value1;
+				dstr += dstr * perkv1(PerkLib.Strong);//if (findPerk(PerkLib.Strong) >= 0) dstr += dstr * perk(findPerk(PerkLib.Strong)).value1;
+				dtou += dtou * perkv1(PerkLib.Tough);//if (findPerk(PerkLib.Tough) >= 0) dtou += dtou * perk(findPerk(PerkLib.Tough)).value1;
+				dspe += dspe * perkv1(PerkLib.Fast);//if (findPerk(PerkLib.Fast) >= 0) dspe += dspe * perk(findPerk(PerkLib.Fast)).value1;
+				dinte += dinte * perkv1(PerkLib.Smart);//if (findPerk(PerkLib.Smart) >= 0) dinte += dinte * perk(findPerk(PerkLib.Smart)).value1;
+				dwis += dwis * perkv1(PerkLib.Wise);//if (findPerk(PerkLib.Wise) >= 0) dwis += dwis * perk(findPerk(PerkLib.Wise)).value1;
+				dlib += dlib * perkv1(PerkLib.Lusty);//if (findPerk(PerkLib.Lusty) >= 0) dlib += dlib * perk(findPerk(PerkLib.Lusty)).value1;
+				dsens += dsens * perkv1(PerkLib.Sensitive);//if (findPerk(PerkLib.Sensitive) >= 0) dsens += dsens * perk(findPerk(PerkLib.Sensitive)).value1;
 				
 				// Uma's Str Cap from Perks (Moved to max stats)
 				/*if (findPerk(PerkLib.ChiReflowSpeed) >= 0)
@@ -10643,8 +10657,8 @@ use namespace CoC;
 			super.modStats(dstr,dtou,dspe,dinte,dwis,dlib,dsens,dlust,dcor,false,max);
 			//Refresh the stat pane with updated values
 			//mainView.statsView.showUpDown();
-			EngineCore.needsUpDownRefresh(false);
-			EngineCore.needsStatScreenRefresh(false);
+			EngineCore.showUpDown(false);
+			EngineCore.statScreenRefresh(false);
 		}
 	}
 }
\ No newline at end of file
diff --git a/classes/classes/PlayerEvents.as b/classes/classes/PlayerEvents.as
index 6ff7d030a..46de7912b 100644
--- a/classes/classes/PlayerEvents.as
+++ b/classes/classes/PlayerEvents.as
@@ -66,7 +66,7 @@ public class PlayerEvents extends BaseContent implements TimeAwareInterface {
 			}
 			//Normal
 			if (player.findPerk(PerkLib.WellAdjusted) < 0) {
-				dynStats("lus", player.lib * 0.04, "scale", false); //Raise lust
+				dynStats("lus", player.lib * 0.04, "scale", false); //Raise lust			TODO there are alot of dynstat calls here that slows down execution- can we combine them together?
 				if (player.findPerk(PerkLib.Lusty) >= 0) dynStats("lus", player.lib * 0.02, "scale", false); //Double lust rise if lusty.
 			}
 			else { //Well adjusted perk
@@ -637,7 +637,7 @@ if (CoC.instance.model.time.hours > 23) { //Once per day
 					player.inte -= 12;
 				}
 				//Tripxi firearms selection update
-				if (player.statusEffectv2(StatusEffects.TelAdreTripxi) == 3) {
+				if (player.statusEffectv2(StatusEffects.TelAdreTripxi) == 3) {	//TODO dow e need calc this every hour?
 					player.addStatusValue(StatusEffects.TelAdreTripxi, 2, -2);
 					if (player.statusEffectv1(StatusEffects.TelAdreTripxiGuns1) == 2) player.addStatusValue(StatusEffects.TelAdreTripxiGuns1, 1, 1);
 					if (player.statusEffectv2(StatusEffects.TelAdreTripxiGuns1) == 2) player.addStatusValue(StatusEffects.TelAdreTripxiGuns1, 2, 1);
@@ -1722,7 +1722,7 @@ if (CoC.instance.model.time.hours > 23) { //Once per day
 					player.dynStats("lib", -player.statusEffectv2(StatusEffects.Heat), "scale", false);
 					player.removeStatusEffect(StatusEffects.Heat); //remove heat
 					if (player.lib < 1) player.lib = 1;
-					EngineCore.statScreenRefresh();
+					//EngineCore.statScreenRefresh();
 					outputText("\n<b>Your body calms down, at last getting over your heat.</b>\n");
 					needNext = true;
 				}
@@ -1730,12 +1730,12 @@ if (CoC.instance.model.time.hours > 23) { //Once per day
 			}
 
 			if (player.inRut) { //Rut v1 is bonus cum, v2 is bonus libido, v3 is hours till it's gone
-				trace("RUT:" + player.statusEffectv3(StatusEffects.Rut));
+				//trace("RUT:" + player.statusEffectv3(StatusEffects.Rut));
 				if (player.statusEffectv3(StatusEffects.Rut) <= 1 || player.cockTotal() == 0) { //Remove bonus libido from rut
 					player.dynStats("lib", -player.statusEffectv2(StatusEffects.Rut), "scale", false);
 					player.removeStatusEffect(StatusEffects.Rut); //remove heat
 					if (player.lib < 10) player.lib = 10;
-                    EngineCore.statScreenRefresh();
+                    //EngineCore.statScreenRefresh();
 					outputText("\n<b>Your body calms down, at last getting over your rut.</b>\n");
 					needNext = true;
 				}
diff --git a/classes/classes/PlayerInfo.as b/classes/classes/PlayerInfo.as
index 20f494573..203dc2b7e 100644
--- a/classes/classes/PlayerInfo.as
+++ b/classes/classes/PlayerInfo.as
@@ -1248,7 +1248,8 @@ public class PlayerInfo extends BaseContent {
 		player.tempInt = 0;
 		player.tempWis = 0;
 		player.tempLib = 0;
-		EngineCore.statScreenRefresh();
+		EngineCore.showUpDown(true);
+		EngineCore.statScreenRefresh(true);
 		if (player.perkPoints > 0) EngineCore.doNext(perkBuyMenu);
 		else EngineCore.doNext(playerMenu);
 	}
diff --git a/classes/classes/Saves.as b/classes/classes/Saves.as
index acd219aee..abcd05037 100644
--- a/classes/classes/Saves.as
+++ b/classes/classes/Saves.as
@@ -13,8 +13,8 @@ import classes.GlobalFlags.kACHIEVEMENTS;
 import classes.GlobalFlags.kCOUNTERS;
 import classes.GlobalFlags.kFLAGS;
 import classes.Items.*;
-	import classes.Scenes.Areas.Desert.SandWitchScene;
-	import classes.Scenes.Dungeons.DungeonAbstractContent;
+import classes.Scenes.Areas.Desert.SandWitchScene;
+import classes.Scenes.Dungeons.DungeonAbstractContent;
 import classes.Scenes.NPCs.JojoScene;
 import classes.Scenes.NPCs.XXCNPC;
 import classes.Scenes.SceneLib;
@@ -156,7 +156,7 @@ CONFIG::AIR
 		clearOutput();
 		loadGameObject(gameObject, slot);
 		outputText("Slot " + slot + " Loaded!");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh(true);
 		doNext(playerMenu);
 	}
 	
@@ -208,7 +208,7 @@ public function loadScreenAIR():void
 					clearOutput();
 					loadGameObject(gameObjects[i]);
 					outputText("Slot " + String(i+1) + " Loaded!");
-					EngineCore.statScreenRefresh();
+					//EngineCore.statScreenRefresh(true);
 					EngineCore.doNext(playerMenu);
 				}
 			})(i);
@@ -272,8 +272,8 @@ public function loadScreen():void
 					if (loadGame(saveFileNames[i])) 
 					{
 						EngineCore.doNext(playerMenu);
-						EngineCore.showStats();
-						EngineCore.statScreenRefresh();
+						//EngineCore.showStats();
+						//EngineCore.statScreenRefresh();
 						clearOutput();
 						outputText("Slot " + i + " Loaded!");
 					}
@@ -584,7 +584,7 @@ public function loadGame(slot:String):void
 			trace("Setting in-use save slot to: " + slot);
 			player.slotName = slot;
 		}
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		EngineCore.doNext(playerMenu);
 	}
 }
@@ -1425,7 +1425,7 @@ public function onDataLoaded(evt:Event):void
 		}
 		loadGameObject(tmpObj);
 		outputText("Loaded Save");
-        EngineCore.statScreenRefresh();
+       // EngineCore.statScreenRefresh();
 	}
 	catch (rangeError:RangeError)
 	{
diff --git a/classes/classes/Scenes/Areas/Beach/Gorgon.as b/classes/classes/Scenes/Areas/Beach/Gorgon.as
index 1916bc95e..5d065292b 100644
--- a/classes/classes/Scenes/Areas/Beach/Gorgon.as
+++ b/classes/classes/Scenes/Areas/Beach/Gorgon.as
@@ -76,7 +76,7 @@ public class Gorgon extends Monster
 				if(player.spe > 6) {
 					player.spe -= 5;
 					//showStatDown( 'spe' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.createStatusEffect(StatusEffects.NagaVenom,5,0,0,0);
 				}
 				else {
@@ -90,7 +90,7 @@ public class Gorgon extends Monster
 				if(player.spe > 5) {
 					player.spe -= 4;
 					//showStatDown( 'spe' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.addStatusValue(StatusEffects.NagaVenom,1,4);
 				}
 				else player.takePhysDamage(15+rand(15));
diff --git a/classes/classes/Scenes/Areas/Beach/PinchousWaterwearAndTools.as b/classes/classes/Scenes/Areas/Beach/PinchousWaterwearAndTools.as
index df05e6113..e14d0f13e 100644
--- a/classes/classes/Scenes/Areas/Beach/PinchousWaterwearAndTools.as
+++ b/classes/classes/Scenes/Areas/Beach/PinchousWaterwearAndTools.as
@@ -98,7 +98,7 @@ public class PinchousWaterwearAndTools extends BaseContent
 		}
 		private function debitWeapon(itype:ItemType):void {
 			player.gems -= itype.value;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			inventory.takeItem(itype, PinchousWaterwearAndToolsShopMenu2);
 		}
 		public function leavePinchousWaterwearAndToolsShop():void {
diff --git a/classes/classes/Scenes/Areas/Bog.as b/classes/classes/Scenes/Areas/Bog.as
index 710a26cf7..ed6788304 100644
--- a/classes/classes/Scenes/Areas/Bog.as
+++ b/classes/classes/Scenes/Areas/Bog.as
@@ -49,7 +49,7 @@ public class Bog extends BaseContent
 					inventory.createStorage();
 				}
 				player.gems += gemsFound;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				outputText("\n\n<b>You now have " + num2Text(inventory.itemStorageDirectGet().length) + " storage item slots at camp.</b>");
 				doNext(camp.returnToCampUseOneHour);
 				return;
diff --git a/classes/classes/Scenes/Areas/Caves/DarkSlime.as b/classes/classes/Scenes/Areas/Caves/DarkSlime.as
index ed263c6bb..98f65631a 100644
--- a/classes/classes/Scenes/Areas/Caves/DarkSlime.as
+++ b/classes/classes/Scenes/Areas/Caves/DarkSlime.as
@@ -80,7 +80,7 @@ use namespace CoC;
 				}
 			}
 			if (damage > 0) player.takePhysDamage(damage, true);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			outputText("\n");
 		}
 		private function gooPlay():void
diff --git a/classes/classes/Scenes/Areas/Desert/AntsScene.as b/classes/classes/Scenes/Areas/Desert/AntsScene.as
index 0b401144e..9cc34e6e1 100644
--- a/classes/classes/Scenes/Areas/Desert/AntsScene.as
+++ b/classes/classes/Scenes/Areas/Desert/AntsScene.as
@@ -2617,7 +2617,7 @@ public class AntsScene extends BaseContent implements TimeAwareInterface
 				var gems:int = 0;
 				gems = 10 + rand(10) + kidsMod * 2;
 				player.gems += gems;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				//If Phylla IS NOT Laying Eggs
 				if (flags[kFLAGS.PHYLLA_EGG_LAYING] == 0) {
 					outputText("You ask Phylla is she's found any gems while digging out her colony.  She nods happily and runs over to a small stone chest and rifles though it.  After a moment, she runs back over to you and holds up all four of her hands.");
@@ -2672,7 +2672,7 @@ public class AntsScene extends BaseContent implements TimeAwareInterface
 			flags[kFLAGS.ACHIEVEMENT_PROGRESS_ANTWORKS] += stones;
 			if (flags[kFLAGS.ACHIEVEMENT_PROGRESS_ANTWORKS] >= 200) awardAchievement("AntWorks", kACHIEVEMENTS.GENERAL_ANTWORKS);
 			flags[kFLAGS.CAMP_CABIN_STONE_RESOURCES] += stones;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			//If Phylla IS NOT Laying Eggs
 			if (flags[kFLAGS.PHYLLA_EGG_LAYING] == 0) {
 				outputText("You ask Phylla is she's got any spare stones from digging, which you can take.  She nods happily and runs over to a small stone pile and rifles though it.  After a moment, she runs back over to you and holds up all four of her hands.");
diff --git a/classes/classes/Scenes/Areas/Desert/Naga.as b/classes/classes/Scenes/Areas/Desert/Naga.as
index cae52a45b..76e5e7ffc 100644
--- a/classes/classes/Scenes/Areas/Desert/Naga.as
+++ b/classes/classes/Scenes/Areas/Desert/Naga.as
@@ -20,7 +20,7 @@ public class Naga extends Monster
 				outputText("The venom's effects are almost instantaneous; your vision begins to blur and it becomes increasingly harder to stand.");
 				if(player.spe > 4) {
 					player.spe -= 3;
-					EngineCore.showUpDown();//showStatDown( 'spe' );
+					//showStatDown( 'spe' );
 					player.createStatusEffect(StatusEffects.NagaVenom,3,0,0,0);
 				}
 				else {
@@ -33,12 +33,13 @@ public class Naga extends Monster
 				outputText("The venom's effects intensify as your vision begins to blur and it becomes increasingly harder to stand.");
 				if(player.spe > 3) {
 					player.spe -= 2;
-					EngineCore.showUpDown();//showStatDown( 'spe' );
+					//showStatDown( 'spe' );
 					player.addStatusValue(StatusEffects.NagaVenom,1,2);
 				}
 				else player.takeMagicDamage(5+rand(5));
 				player.takeMagicDamage(5+rand(5));
 			}
+			EngineCore.showUpDown(false);
 		}
 		
 		//2b)  Ability - Constrict - entangles player, raises lust 
diff --git a/classes/classes/Scenes/Areas/GlacialRift.as b/classes/classes/Scenes/Areas/GlacialRift.as
index 5dc16a841..b8f438250 100644
--- a/classes/classes/Scenes/Areas/GlacialRift.as
+++ b/classes/classes/Scenes/Areas/GlacialRift.as
@@ -164,7 +164,7 @@ use namespace CoC;
 							inventory.createStorage();
 						}
 						player.gems += gemsFound;
-						EngineCore.statScreenRefresh();
+						//EngineCore.statScreenRefresh();
 						outputText("\n\n<b>You now have " + num2Text(inventory.itemStorageDirectGet().length) + " storage item slots at camp.</b>");
 					}
 					else {
@@ -190,7 +190,7 @@ use namespace CoC;
 							var gemsFound2:int = 40 + rand(160);
 							outputText("As you wander the rift your foot hits something burrowed under the snow. It is a treasure chest and it looks packed to the brim.\n\nInside was " + String(gemsFound) + " gems! ");
 							player.gems += gemsFound2;
-							EngineCore.statScreenRefresh();
+							//EngineCore.statScreenRefresh();
 						}
 					}
 					doNext(camp.returnToCampUseOneHour);
diff --git a/classes/classes/Scenes/Areas/GlacialRift/WinterWolf.as b/classes/classes/Scenes/Areas/GlacialRift/WinterWolf.as
index 37ab376af..b738ccc4c 100644
--- a/classes/classes/Scenes/Areas/GlacialRift/WinterWolf.as
+++ b/classes/classes/Scenes/Areas/GlacialRift/WinterWolf.as
@@ -49,7 +49,7 @@ public class WinterWolf extends Monster
 				outputText(" You feel the cold enter your body and shake you to the very core weakening your resolve just as much as slowing down your movement.");
 				if(player.str > 7) {
 					player.str -= 6;
-					EngineCore.showUpDown()//showStatDown( 'str' );
+					EngineCore.showUpDown(false);//showStatDown( 'str' );
 					player.createStatusEffect(StatusEffects.Frostbite,6,0,0,0);
 				}
 				else {
@@ -67,7 +67,7 @@ public class WinterWolf extends Monster
 				outputText(" The coldness effects intensify as your movement slowing down even more.");
 				if(player.str > 6) {
 					player.str -= 5;
-					EngineCore..showUpDown();// showStatDown( 'str' );
+					EngineCore.showUpDown(false);// showStatDown( 'str' );
 					player.addStatusValue(StatusEffects.Frostbite,1,5);
 				}
 				else {
diff --git a/classes/classes/Scenes/Camp.as b/classes/classes/Scenes/Camp.as
index 2e2fc890b..3e5b0aedb 100644
--- a/classes/classes/Scenes/Camp.as
+++ b/classes/classes/Scenes/Camp.as
@@ -121,8 +121,8 @@ public function EzekielCurseQuickFix():void
 	outputText("Like with a magic wand touch some divine being has blessed you. And before leaving meantioned about never again selling or discarding odd fruits.");
 	if (player.findPerk(PerkLib.EzekielBlessing) < 0) player.createPerk(PerkLib.EzekielBlessing, 0, 0, 0, 0);
 	if (player.hasStatusEffect(StatusEffects.EzekielCurse)) player.removeStatusEffect(StatusEffects.EzekielCurse);
-	EngineCore.statScreenRefresh();
 	dynStats("str", 5, "tou", 5, "spe", 5, "inte", 5, "lib", 5);
+	EngineCore.statScreenRefresh(true);
 	doCamp();
 
 }
@@ -132,8 +132,7 @@ private function doCamp():void { //Only called by playerMenu
 	if (player.slotName != "VOID" && mainView.getButtonText(0) != "Game Over" && flags[kFLAGS.HARDCORE_MODE] > 0) 
 	{
 		trace("Autosaving to slot: " + player.slotName);
-
-CoC.instance.saves.saveGame(player.slotName);
+		CoC.instance.saves.saveGame(player.slotName);
     }
     CoC.instance.inCombat = false;
     if (ingnam.inIngnam) { //Ingnam
diff --git a/classes/classes/Scenes/Combat/Combat.as b/classes/classes/Scenes/Combat/Combat.as
index f74f9b67d..2f9e02ef8 100644
--- a/classes/classes/Scenes/Combat/Combat.as
+++ b/classes/classes/Scenes/Combat/Combat.as
@@ -300,7 +300,7 @@ public function cleanupAfterCombatImpl(nextFunc:Function = null):void {
 				outputText("\n\nYou have to lean on Isabella's shoulder while the two of your hike back to camp.  She clearly won.");
 				inCombat = false;
 				player.HP = 1;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				EngineCore.doNext(nextFunc);
 				return;
 			}
@@ -308,13 +308,13 @@ public function cleanupAfterCombatImpl(nextFunc:Function = null):void {
 			if(monster.hasStatusEffect(StatusEffects.PeachLootLoss)) {
 				inCombat = false;
 				player.HP = 1;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				return;
 			}
 			if(monster.short == "Ember") {
 				inCombat = false;
 				player.HP = 1;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				EngineCore.doNext(nextFunc);
 				return;
 			}
@@ -528,7 +528,7 @@ public function combatMenu(newRound:Boolean = true):void { //If returning from a
 	EngineCore.hideUpDown();
 	if (newRound) combatStatusesUpdate(); //Update Combat Statuses
 	display();
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	if (newRound) combatRoundOver();
 	if (combatIsOver()) return;
 	ui.mainMenu();
@@ -1507,7 +1507,7 @@ public function packAttack():void {
 			else outputText(monster.capitalA + monster.short + " <b>mutilates</b> you with powerful fists and " + monster.weaponVerb + "s! ");
 			player.takePhysDamage(damage, true);
 		}
-		EngineCore.statScreenRefresh();
+		EngineCore.statScreenRefresh(true);
 		outputText("\n");
 	}
 }
@@ -4751,7 +4751,7 @@ public function doPoisonDamage(damage:Number, apply:Boolean = true, display:Bool
 		if (player.hasPerk(PerkLib.BloodMage)
 			&& (type == USEMANA_MAGIC || type == USEMANA_WHITE || type == USEMANA_BLACK)) {
 			player.takePhysDamage(mod);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			return;
 		}
 		//Mana restoration buffs!
@@ -4759,13 +4759,14 @@ public function doPoisonDamage(damage:Number, apply:Boolean = true, display:Bool
 			mod *= manaRecoveryMultiplier();
 		}
 		player.mana = boundFloat(0, player.mana - mod, player.maxMana());
-		if(mod < 0) {
+		/*if(mod < 0) {
 			mainView.statsView.showStatUp( 'mana' );
 		}
 		if(mod > 0) {
 			mainView.statsView.showStatDown( 'mana' );
-		}
-		EngineCore.statScreenRefresh();
+		}*/
+		EngineCore.showUpDown(false);
+		EngineCore.statScreenRefresh(false);
 	}
 	public function manaRecoveryMultiplier():Number {
 		var multi:Number = 1;
@@ -4813,7 +4814,7 @@ public function fatigueImpl(mod:Number,type:Number  = USEFATG_NORMAL):void {
 		//Blood mages use HP for spells
 		if (player.hasPerk(PerkLib.BloodMage)) {
 			player.takePhysDamage(mod);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			return;
 		}
 	}
@@ -4824,16 +4825,17 @@ public function fatigueImpl(mod:Number,type:Number  = USEFATG_NORMAL):void {
 		mod *= fatigueRecoveryMultiplier();
 	}
 	player.fatigue += mod;
-	if(mod < 0) {
+	/*if(mod < 0) {
 		mainView.statsView.showStatUp( 'fatigue' );
 	}
 	if(mod > 0) {
 		mainView.statsView.showStatDown( 'fatigue' );
-	}
-	dynStats("lus", 0, "scale", false); //Force display fatigue up/down by invoking zero lust change.
+	}*/
+	//dynStats("lus", 0, "scale", false); //Force display fatigue up/down by invoking zero lust change.
 	if(player.fatigue > player.maxFatigue()) player.fatigue = player.maxFatigue();
-	if(player.fatigue < 0) player.fatigue = 0;
-	EngineCore.statScreenRefresh();
+	if (player.fatigue < 0) player.fatigue = 0;
+	EngineCore.showUpDown(false);
+	EngineCore.statScreenRefresh(false);
 }
 	public function fatigueRecoveryMultiplier():Number {
 		var multi:Number = 1;
@@ -5011,8 +5013,9 @@ public function awardPlayer(nextFunc:Function = null):void
 	inCombat = false;
 	player.gems += monster.gems;
 	player.XP += monster.XP;
-	mainView.statsView.showStatUp('xp');
-	dynStats("lust", 0, "scale", false); //Forces up arrow.
+	//mainView.statsView.showStatUp('xp');
+	//dynStats("lust", 0, "scale", false); //Forces up arrow.
+	EngineCore.showUpDown(false);
 }
 
 //Update combat status effects
@@ -5508,7 +5511,7 @@ private function combatStatusesUpdate():void {
 		if(player.hasPerk(PerkLib.Medicine) && rand(100) <= 14) {
 			outputText("You manage to cleanse [monster a] [monster name] venom from your system with your knowledge of medicine!\n\n");
 			player.spe += player.statusEffectv1(StatusEffects.NagaVenom);
-			mainView.statsView.showStatUp( 'spe' );
+			//mainView.statsView.showStatUp( 'spe' );
 			// speUp.visible = true;
 			// speDown.visible = false;
 			player.removeStatusEffect(StatusEffects.NagaVenom);
@@ -5529,10 +5532,10 @@ private function combatStatusesUpdate():void {
 			player.tou += player.statusEffectv2(StatusEffects.MedusaVenom);
 			player.spe += player.statusEffectv3(StatusEffects.MedusaVenom);
 			player.inte += player.statusEffectv4(StatusEffects.MedusaVenom);
-			mainView.statsView.showStatUp( 'str' );
+			/*mainView.statsView.showStatUp( 'str' );
 			mainView.statsView.showStatUp( 'tou' );
 			mainView.statsView.showStatUp( 'spe' );
-			mainView.statsView.showStatUp( 'inte' );
+			mainView.statsView.showStatUp( 'inte' );*/
 			player.removeStatusEffect(StatusEffects.MedusaVenom);
 		}
 		else if (player.str <= 5 && player.tou <= 5 && player.spe <= 5 && player.inte <= 5) player.takePhysDamage(5);
@@ -5602,7 +5605,7 @@ private function combatStatusesUpdate():void {
 			
 			player.str += player.statusEffectv2(StatusEffects.DriderIncubusVenom);
 			player.removeStatusEffect(StatusEffects.DriderIncubusVenom);
-			CoC.instance.mainView.statsView.showStatUp('str');
+			//CoC.instance.mainView.statsView.showStatUp('str');
 		}
 		else
 		{
@@ -5611,7 +5614,7 @@ private function combatStatusesUpdate():void {
 			{
 				player.str += player.statusEffectv2(StatusEffects.DriderIncubusVenom);
 				player.removeStatusEffect(StatusEffects.DriderIncubusVenom);
-				CoC.instance.mainView.statsView.showStatUp('str');
+				//CoC.instance.mainView.statsView.showStatUp('str');
 				outputText("The drider incubus’ venom wanes, the effects of the poision weakening as strength returns to your limbs!\n\n");
 			}
 			else
@@ -7217,7 +7220,7 @@ public function teaseXP(XP:Number = 0):void {
 	// Called after the monster's action. Increments round counter. Setups doNext to win/loss/combat menu
 public function combatRoundOver():void {
 	combatRound++;
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	flags[kFLAGS.ENEMY_CRITICAL] = 0;
 	combatIsOver();
 }
diff --git a/classes/classes/Scenes/Combat/CombatAbilities.as b/classes/classes/Scenes/Combat/CombatAbilities.as
index 9cfcf930c..3239cf713 100644
--- a/classes/classes/Scenes/Combat/CombatAbilities.as
+++ b/classes/classes/Scenes/Combat/CombatAbilities.as
@@ -1,6 +1,7 @@
 package classes.Scenes.Combat 
 {
 	import classes.*;
+	import classes.EngineCore;
 	import classes.GlobalFlags.*;
 	import classes.Items.*;
 	import classes.Scenes.Areas.Forest.TentacleBeast;
@@ -114,7 +115,7 @@ package classes.Scenes.Combat
 		public function spellChargeWeapon(silent:Boolean = false):void {
 			if (silent) {
 				player.createStatusEffect(StatusEffects.ChargeWeapon,10*player.spellMod(),0,0,0);
-				statScreenRefresh();
+				//statScreenRefresh();
 				return;
 			}
 			
@@ -134,7 +135,7 @@ package classes.Scenes.Combat
 			var temp:int = 10 * player.spellMod();
 			if (temp > 100) temp = 100;
 			player.createStatusEffect(StatusEffects.ChargeWeapon, temp, 0, 0, 0);
-			statScreenRefresh();
+			//statScreenRefresh();
 			flags[kFLAGS.SPELLS_CAST]++;
 			spellPerkUnlock();
 			monster.doAI();
@@ -213,7 +214,7 @@ package classes.Scenes.Combat
 			outputText("\n\n", false);
 			flags[kFLAGS.SPELLS_CAST]++;
 			spellPerkUnlock();
-			statScreenRefresh();
+			//statScreenRefresh();
 			monster.doAI();
 		}
 		
@@ -300,7 +301,7 @@ package classes.Scenes.Combat
 			flags[kFLAGS.SPELLS_CAST]++;
 			spellPerkUnlock();
 			monster.HP -= temp;
-			statScreenRefresh();
+			//statScreenRefresh();
 			if (monster.HP < 1) doNext(combat.endHpVictory);
 			else monster.doAI();
 		}
@@ -315,7 +316,7 @@ package classes.Scenes.Combat
 			doNext(combat.combatMenu);
 		//This is now automatic - newRound arg defaults to true:	menuLoc = 0;
 			player.changeFatigue(15,1);
-			statScreenRefresh();
+			//statScreenRefresh();
 			if (monster is FrostGiant && player.hasStatusEffect(StatusEffects.GiantBoulder)) {
 				(monster as FrostGiant).giantBoulderHit(2);
 				monster.doAI();
@@ -424,7 +425,7 @@ package classes.Scenes.Combat
 			}
 			
 			outputText("\n\n", false);
-			statScreenRefresh();
+			//statScreenRefresh();
 			flags[kFLAGS.SPELLS_CAST]++;
 			spellPerkUnlock();
 			if (player.lust >= player.maxLust()) doNext(combat.endLustLoss);
@@ -447,11 +448,12 @@ package classes.Scenes.Combat
 				//if (player.tou + temp > 100) tempTou = 100 - player.tou;
 				player.changeStatusValue(StatusEffects.Might,1,tempStr);
 				player.changeStatusValue(StatusEffects.Might,2,tempTou);
-				mainView.statsView.showStatUp('str');
-				mainView.statsView.showStatUp('tou');
+				//mainView.statsView.showStatUp('str');
+				//mainView.statsView.showStatUp('tou');
 				player.str += player.statusEffectv1(StatusEffects.Might);
 				player.tou += player.statusEffectv2(StatusEffects.Might);
-				statScreenRefresh();
+				EngineCore.showUpDown(false);
+				EngineCore.statScreenRefresh(false);
 			}
 			
 			if (silent)	{ // for Battlemage
@@ -567,7 +569,7 @@ package classes.Scenes.Combat
 			flags[kFLAGS.SPELLS_CAST]++;
 			spellPerkUnlock();
 			monster.HP -= temp;
-			statScreenRefresh();
+			//statScreenRefresh();
 			if (monster.HP < 1) doNext(combat.endHpVictory);
 			else monster.doAI();
 		}
@@ -589,9 +591,10 @@ package classes.Scenes.Combat
 				player.str -= player.statusEffectv1(StatusEffects.Might);
 				player.tou -= player.statusEffectv2(StatusEffects.Might);
 				player.removeStatusEffect(StatusEffects.Might);
-				showStatDown("str");
-				showStatDown("tou");
-				statScreenRefresh();
+				//showStatDown("str");
+				//showStatDown("tou");
+				EngineCore.showUpDown(false);
+				EngineCore.statScreenRefresh(false);
 			}
 			//Remove opponent's effects
 				if (player.hasStatusEffect(StatusEffects.ChargeWeapon)) {
@@ -615,7 +618,7 @@ package classes.Scenes.Combat
 				monster.str -= monster.statusEffectv1(StatusEffects.Might);
 				monster.tou -= monster.statusEffectv2(StatusEffects.Might);
 				monster.removeStatusEffect(StatusEffects.Might);
-				statScreenRefresh();
+				//statScreenRefresh();
 			}
 			if (monster.hasStatusEffect(StatusEffects.Shell)) {
 				outputText("\nThe magical shell around " + monster.a + " " + monster.short + " shatters!");
@@ -1167,7 +1170,7 @@ package classes.Scenes.Combat
 				if (monster.findPerk(PerkLib.Acid) < 0) monster.createPerk(PerkLib.Acid,0,0,0,0);
 			}
 			dmg = combat.doDamage(dmg, true, true);
-			statScreenRefresh();
+			//statScreenRefresh();
 			outputText("\n\n");
 			flags[kFLAGS.LAST_ATTACK_TYPE] = 2;
 			flags[kFLAGS.SPELLS_CAST]++;
@@ -1211,7 +1214,7 @@ package classes.Scenes.Combat
 				if (monster.findPerk(PerkLib.Acid) < 0) monster.createPerk(PerkLib.Acid,0,0,0,0);
 			}
 			dmg = combat.doDamage(dmg, true, true);
-			statScreenRefresh();
+			//statScreenRefresh();
 			outputText("\n\n");
 			flags[kFLAGS.LAST_ATTACK_TYPE] = 2;
 			flags[kFLAGS.SPELLS_CAST]++;
diff --git a/classes/classes/Scenes/Combat/CombatMagic.as b/classes/classes/Scenes/Combat/CombatMagic.as
index 7ade52390..d6e0aa7ea 100644
--- a/classes/classes/Scenes/Combat/CombatMagic.as
+++ b/classes/classes/Scenes/Combat/CombatMagic.as
@@ -2,6 +2,7 @@
  * Coded by aimozg on 30.05.2017.
  */
 package classes.Scenes.Combat {
+	import classes.EngineCore;
 import classes.GlobalFlags.kFLAGS;
 import classes.Items.HeadJewelryLib;
 import classes.Items.JewelryLib;
@@ -1294,7 +1295,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else
 		{
@@ -1311,7 +1312,7 @@ public class CombatMagic extends BaseCombatContent {
 		doNext(combatMenu);
 		if (player.hasPerk(PerkLib.LastResort) && player.mana < spellCostBlack(20)) player.HP -= spellCostBlack(20);
 		else useMana(20,6);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if ((monster is FrostGiant || monster is YoungFrostGiant) && player.hasStatusEffect(StatusEffects.GiantBoulder)) {
 			if (monster as FrostGiant) (monster as FrostGiant).giantBoulderHit(2);
 			if (monster as YoungFrostGiant) (monster as YoungFrostGiant).youngGiantBoulderHit(2);
@@ -1435,7 +1436,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -1520,7 +1521,7 @@ public class CombatMagic extends BaseCombatContent {
 			}
 			player.tou += player.statusEffectv2(StatusEffects.Might);
 			player.HP = oldHPratio*player.maxHP();
-			statScreenRefresh();
+			//statScreenRefresh();
 		};
 
 		if (silent)	{ // for Battlemage
@@ -1636,11 +1637,12 @@ public class CombatMagic extends BaseCombatContent {
 			tempSpe = BlinkBoost;
 			//if(player.spe + temp > 100) tempSpe = 100 - player.spe;
 			player.changeStatusValue(StatusEffects.Blink,1,tempSpe);
-			mainView.statsView.showStatUp('spe');
+			//mainView.statsView.showStatUp('spe');
 			// strUp.visible = true;
 			// strDown.visible = false;
 			player.spe += player.statusEffectv1(StatusEffects.Blink);
-			statScreenRefresh();
+			EngineCore.showUpDown(false);
+			EngineCore.statScreenRefresh(false);
 		};
 
 		if (silent)	{ // for Battleflash
@@ -1755,7 +1757,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 
 //(45) Darkness Shard
@@ -1821,14 +1823,14 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 	
 	public function spellWaveOfEcstasy():void {
 		doNext(combatMenu);
 		if (player.hasPerk(PerkLib.LastResort) && player.mana < spellCostBlack(100)) player.HP -= spellCostBlack(100);
 		else useMana(100,6);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if ((monster is FrostGiant || monster is YoungFrostGiant) && player.hasStatusEffect(StatusEffects.GiantBoulder)) {
 			if (monster as FrostGiant) (monster as FrostGiant).giantBoulderHit(2);
 			if (monster as YoungFrostGiant) (monster as YoungFrostGiant).youngGiantBoulderHit(2);
@@ -1955,7 +1957,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -2019,7 +2021,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -2062,7 +2064,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2111,7 +2113,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2162,7 +2164,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2214,7 +2216,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2260,7 +2262,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2331,7 +2333,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -2381,7 +2383,7 @@ public class CombatMagic extends BaseCombatContent {
 			if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 			spellPerkUnlock();
 			combat.heroBaneProc(damage);
-			statScreenRefresh();
+			//statScreenRefresh();
 			if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 			else enemyAI();
 		}
@@ -2476,7 +2478,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -2565,7 +2567,7 @@ public class CombatMagic extends BaseCombatContent {
 			if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 			spellPerkUnlock();
 			combat.heroBaneProc(damage);
-			statScreenRefresh();
+			//statScreenRefresh();
 			if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 			else enemyAI();
 		}
@@ -2602,7 +2604,7 @@ public class CombatMagic extends BaseCombatContent {
 		if (silent) {
 			if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
 			player.createStatusEffect(StatusEffects.ManaShield,0,0,0,0);
-			statScreenRefresh();
+			//statScreenRefresh();
 			return;
 		}
 		clearOutput();
@@ -2660,7 +2662,7 @@ public class CombatMagic extends BaseCombatContent {
 		}
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2725,7 +2727,7 @@ public class CombatMagic extends BaseCombatContent {
 		if (player.hasPerk(PerkLib.EternalyLastingBuffs)) ChargeWeaponDuration += 5;
 		if (silent) {
 			player.createStatusEffect(StatusEffects.ChargeWeapon,ChargeWeaponBoost,ChargeWeaponDuration,0,0);
-			statScreenRefresh();
+			//statScreenRefresh();
 			return;
 		}
 
@@ -2742,7 +2744,7 @@ public class CombatMagic extends BaseCombatContent {
 		outputText("You utter words of power, summoning an electrical charge around your [weapon].  It crackles loudly, ensuring you'll do more damage with it for the rest of the fight.\n\n");
 		player.createStatusEffect(StatusEffects.ChargeWeapon, ChargeWeaponBoost, ChargeWeaponDuration, 0, 0);
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2805,7 +2807,7 @@ public class CombatMagic extends BaseCombatContent {
 		if (player.hasPerk(PerkLib.EternalyLastingBuffs)) ChargeArmorDuration += 5;
 		if (silent) {
 			player.createStatusEffect(StatusEffects.ChargeArmor,ChargeArmorBoost,ChargeArmorDuration,0,0);
-			statScreenRefresh();
+			//statScreenRefresh();
 			return;
 		}
 
@@ -2825,7 +2827,7 @@ public class CombatMagic extends BaseCombatContent {
 		outputText("  It crackles loudly, ensuring you'll have more protection for the rest of the fight.\n\n");
 		player.createStatusEffect(StatusEffects.ChargeArmor, ChargeArmorBoost, ChargeArmorDuration, 0, 0);
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2844,7 +2846,7 @@ public class CombatMagic extends BaseCombatContent {
 		spellHealEffect();
 		outputText("\n\n");
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
@@ -2940,7 +2942,7 @@ public class CombatMagic extends BaseCombatContent {
 				flags[kFLAGS.SPELLS_CAST]++;
 				if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 				spellPerkUnlock();
-				statScreenRefresh();
+				//statScreenRefresh();
 				enemyAI();
 				return;
 			}
@@ -2972,7 +2974,7 @@ public class CombatMagic extends BaseCombatContent {
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	//(30) Whitefire – burns the enemy for 10 + int/3 + rand(int/2) * spellMod.
@@ -3026,7 +3028,7 @@ public class CombatMagic extends BaseCombatContent {
 			if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 			spellPerkUnlock();
 			combat.heroBaneProc(damage);
-			statScreenRefresh();
+			//statScreenRefresh();
 		}
 		else
 		{
@@ -3082,7 +3084,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 
 //(45) Lightning Bolt - base lighting spell
@@ -3140,7 +3142,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 	
 	//(50) Pyre Burst – aoe fire spell
@@ -3218,7 +3220,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if (monster.HP <= monster.minHP())
 		{
 			doNext(endHpVictory);
@@ -3288,7 +3290,7 @@ public class CombatMagic extends BaseCombatContent {
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -3314,7 +3316,7 @@ public class CombatMagic extends BaseCombatContent {
 			player.createStatusEffect(StatusEffects.Blizzard, 1 + player.inte / 25,0,0,0);
 		}
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 		spellPerkUnlock();
diff --git a/classes/classes/Scenes/Combat/CombatSoulskills.as b/classes/classes/Scenes/Combat/CombatSoulskills.as
index 7b81b07d0..58f80aaf1 100644
--- a/classes/classes/Scenes/Combat/CombatSoulskills.as
+++ b/classes/classes/Scenes/Combat/CombatSoulskills.as
@@ -2,6 +2,7 @@
  * Coded by aimozg on 30.05.2017.
  */
 package classes.Scenes.Combat {
+	import classes.EngineCore;
 import classes.BodyParts.Arms;
 import classes.BodyParts.LowerBody;
 import classes.BodyParts.Tail;
@@ -926,7 +927,7 @@ public class CombatSoulskills extends BaseCombatContent {
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
 		combat.EruptingRiposte();
-		statScreenRefresh();
+		//statScreenRefresh()();
 		if(monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -1250,15 +1251,16 @@ public class CombatSoulskills extends BaseCombatContent {
 			tempStrTou = TranceBoost;
 			player.createStatusEffect(StatusEffects.TranceTransformation, 0, 0, 0, 0);
 			player.changeStatusValue(StatusEffects.TranceTransformation, 1, tempStrTou);
-			mainView.statsView.showStatUp('str');
+			//mainView.statsView.showStatUp('str');
 			// strUp.visible = true;
 			// strDown.visible = false;
-			mainView.statsView.showStatUp('tou');
+			//mainView.statsView.showStatUp('tou');
 			// touUp.visible = true;
 			// touDown.visible = false;
 			player.str += player.statusEffectv1(StatusEffects.TranceTransformation);
 			player.tou += player.statusEffectv1(StatusEffects.TranceTransformation);
-			statScreenRefresh();
+			EngineCore.showUpDown(false);
+			EngineCore.statScreenRefresh(false);
 		};
 		var tempStrTou:Number = 0;
 		var tempSpe:Number = 0;
@@ -1287,9 +1289,10 @@ public class CombatSoulskills extends BaseCombatContent {
 		if (!player.hasStatusEffect(StatusEffects.BeatOfWar)) player.createStatusEffect(StatusEffects.BeatOfWar,0,0,0,0);//player.addStatusValue(StatusEffects.BeatOfWar, 1, BeatOfWarBoost);
 		tempStr = BeatOfWarBoost;
 		player.addStatusValue(StatusEffects.BeatOfWar,1,tempStr);
-		mainView.statsView.showStatUp('str');
+		//mainView.statsView.showStatUp('str');
 		player.str += BeatOfWarBoost;			//player.statusEffectv1(StatusEffects.BeatOfWar);
-		statScreenRefresh();
+		EngineCore.showUpDown(false);
+		EngineCore.statScreenRefresh(false);
 		outputText("You momentarily attune yourself to the song of the mother tree, and prepare to add a note of your own to it’s rhythm. You feel the beat shift the song’s tempo slightly, taking a twist towards the ominous. This attunement augments your strength.\n\n");
 		combat.basemeleeattacks();
 	}
diff --git a/classes/classes/Scenes/Combat/MagicSpecials.as b/classes/classes/Scenes/Combat/MagicSpecials.as
index a2f9f04d3..f7d45bab4 100644
--- a/classes/classes/Scenes/Combat/MagicSpecials.as
+++ b/classes/classes/Scenes/Combat/MagicSpecials.as
@@ -1013,7 +1013,7 @@ public class MagicSpecials extends BaseCombatContent {
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
 		checkAchievementDamage(damage);
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if (monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
 	}
@@ -1281,7 +1281,7 @@ public class MagicSpecials extends BaseCombatContent {
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
 		checkAchievementDamage(damage);
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 
 	public function hungeringCold():void {
@@ -1341,7 +1341,7 @@ public class MagicSpecials extends BaseCombatContent {
 		if (player.weapon == weapons.DEMSCYT && player.cor < 90) dynStats("cor", 0.3);
 		checkAchievementDamage(damage);
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 	}
 
 	public function acidSpit():void {
@@ -2305,7 +2305,7 @@ public class MagicSpecials extends BaseCombatContent {
 		if (player.hasPerk(PerkLib.HinezumiBurningBloodFinalForm)) blazingBattleSpiritDuration += 7;
 		outputText("Your bodily flames begin to rage as you enter a passionate battle fury.\n\n");
 		player.createStatusEffect(StatusEffects.BlazingBattleSpirit,blazingBattleSpiritDuration,0,0,0);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -2314,7 +2314,7 @@ public class MagicSpecials extends BaseCombatContent {
 		player.HP -= player.HP * 0.05;
 		outputText("You wince in pain but feel relief as your wounds begin to smoke and close.\n\n");
 		player.createStatusEffect(StatusEffects.Cauterize,10,0,0,0);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -2339,14 +2339,15 @@ public class MagicSpecials extends BaseCombatContent {
 		tempTouSpe = temp;
 		player.changeStatusValue(StatusEffects.DwarfRage,1,tempStr);
 		player.changeStatusValue(StatusEffects.DwarfRage,2,tempTouSpe);
-		mainView.statsView.showStatUp('str');
+		/*mainView.statsView.showStatUp('str');
 		mainView.statsView.showStatUp('tou');
-		mainView.statsView.showStatUp('spe');
+		mainView.statsView.showStatUp('spe');*/
 		player.str += player.statusEffectv1(StatusEffects.DwarfRage);
 		player.tou += player.statusEffectv2(StatusEffects.DwarfRage);
 		player.spe += player.statusEffectv2(StatusEffects.DwarfRage);
-		player.HP = oldHPratio*player.maxHP();
-		statScreenRefresh();
+		player.HP = oldHPratio * player.maxHP();
+		EngineCore.showUpDown(false);
+		EngineCore.statScreenRefresh(false);
 		enemyAI();
 	}
 
@@ -2408,14 +2409,15 @@ public class MagicSpecials extends BaseCombatContent {
 		player.changeStatusValue(StatusEffects.CrinosShape,1,tempStr);
 		player.changeStatusValue(StatusEffects.CrinosShape,2,tempTou);
 		player.changeStatusValue(StatusEffects.CrinosShape,3,tempSpe);
-		mainView.statsView.showStatUp('str');
+		/*mainView.statsView.showStatUp('str');
 		mainView.statsView.showStatUp('tou');
-		mainView.statsView.showStatUp('spe');
+		mainView.statsView.showStatUp('spe');*/
 		player.str += player.statusEffectv1(StatusEffects.CrinosShape);
 		player.tou += player.statusEffectv2(StatusEffects.CrinosShape);
 		player.spe += player.statusEffectv3(StatusEffects.CrinosShape);
-		player.HP = oldHPratio*player.maxHP();
-		statScreenRefresh();
+		player.HP = oldHPratio * player.maxHP();
+		EngineCore.showUpDown(false);
+		EngineCore.statScreenRefresh(false);
 		enemyAI();
 	}
 	public function returnToNormalShape():void {
@@ -2535,7 +2537,7 @@ public class MagicSpecials extends BaseCombatContent {
 	//	if(!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell,0,0,0,0);
 	//	spellPerkUnlock();
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		if (monster.HP <= monster.minHP())
 		{
 			doNext(endHpVictory);
@@ -2734,7 +2736,7 @@ public class MagicSpecials extends BaseCombatContent {
 		damage = doFireDamage(damage, true, true);
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if (!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell, 0, 0, 0, 0);
 		if (player.hasPerk(PerkLib.EromancyMaster)) combat.teaseXP(1 + combat.bonusExpAfterSuccesfullTease());
@@ -2839,7 +2841,7 @@ public class MagicSpecials extends BaseCombatContent {
 		damage = doFireDamage(damage, true, true);
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if (!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell, 0, 0, 0, 0);
 		if (player.hasPerk(PerkLib.EromancyMaster)) combat.teaseXP(1 + combat.bonusExpAfterSuccesfullTease());
@@ -2955,7 +2957,7 @@ public class MagicSpecials extends BaseCombatContent {
 		damage = doFireDamage(damage, true, true);
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if (!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell, 0, 0, 0, 0);
 		if (player.hasPerk(PerkLib.EromancyMaster)) combat.teaseXP(1 + combat.bonusExpAfterSuccesfullTease());
@@ -3063,7 +3065,7 @@ public class MagicSpecials extends BaseCombatContent {
 		damage = doFireDamage(damage, true, true);
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if (!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell, 0, 0, 0, 0);
 		if (player.hasPerk(PerkLib.EromancyMaster)) combat.teaseXP(1 + combat.bonusExpAfterSuccesfullTease());
@@ -3177,7 +3179,7 @@ public class MagicSpecials extends BaseCombatContent {
 		damage = doFireDamage(damage, true, true);
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		flags[kFLAGS.SPELLS_CAST]++;
 		if (!player.hasStatusEffect(StatusEffects.CastedSpell)) player.createStatusEffect(StatusEffects.CastedSpell, 0, 0, 0, 0);
 		if (player.hasPerk(PerkLib.EromancyMaster)) combat.teaseXP(1 + combat.bonusExpAfterSuccesfullTease());
@@ -3426,7 +3428,7 @@ public class MagicSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		checkAchievementDamage(damage);
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		outputText("\n\n");
 		if (monster.HP <= monster.minHP()) doNext(endHpVictory);
 		else enemyAI();
diff --git a/classes/classes/Scenes/Combat/PhysicalSpecials.as b/classes/classes/Scenes/Combat/PhysicalSpecials.as
index 6231ed98f..afbc2eaeb 100644
--- a/classes/classes/Scenes/Combat/PhysicalSpecials.as
+++ b/classes/classes/Scenes/Combat/PhysicalSpecials.as
@@ -1561,7 +1561,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 			monster.teased(lustDmg);
 		}
 		outputText("\n\n");
-		statScreenRefresh();
+		//statScreenRefresh();
 		if(monster.lust >= monster.maxLust()) doNext(endLustVictory);
 		else enemyAI();
 	}
@@ -4530,7 +4530,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 			outputText("discharge!");
 			monster.createStatusEffect(StatusEffects.Stunned, 2, 0, 0, 0);
 		}
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4561,7 +4561,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4623,7 +4623,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4668,7 +4668,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4697,7 +4697,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4727,7 +4727,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		outputText("\n\n");
 		monster.HP -= damage;
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 	
@@ -4773,7 +4773,7 @@ public class PhysicalSpecials extends BaseCombatContent {
 		if (crit == true) outputText(" <b>*Critical Hit!*</b>");
 		outputText("\n\n");
 		combat.heroBaneProc(damage);
-		statScreenRefresh();
+		//statScreenRefresh();
 		enemyAI();
 	}
 
diff --git a/classes/classes/Scenes/DebugMenu.as b/classes/classes/Scenes/DebugMenu.as
index 5239ede5d..61f90f97f 100644
--- a/classes/classes/Scenes/DebugMenu.as
+++ b/classes/classes/Scenes/DebugMenu.as
@@ -567,7 +567,7 @@ public class DebugMenu extends BaseContent
 		
 		private function statChangeApply(stats:String = "", increment:Number = 0):void {
 			dynStats(stats, increment);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			statChangeAttributeMenu(stats);
 		}
 		
diff --git a/classes/classes/Scenes/Dungeons/D3/D3.as b/classes/classes/Scenes/Dungeons/D3/D3.as
index 218d88e67..86a85d2c4 100644
--- a/classes/classes/Scenes/Dungeons/D3/D3.as
+++ b/classes/classes/Scenes/Dungeons/D3/D3.as
@@ -303,7 +303,7 @@ import classes.StatusEffects;
 		
 		private function generateRoomMenu(tRoom:room):void
 		{
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			SceneLib.dungeons.setTopButtons();
diff --git a/classes/classes/Scenes/Dungeons/D3/Doppleganger.as b/classes/classes/Scenes/Dungeons/D3/Doppleganger.as
index 51131abfc..d72463390 100644
--- a/classes/classes/Scenes/Dungeons/D3/Doppleganger.as
+++ b/classes/classes/Scenes/Dungeons/D3/Doppleganger.as
@@ -71,7 +71,7 @@ import classes.VaginaClass;
 		
 		private function addTalkShit():void
 		{
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			
 			if (HP < 1)
 			{
diff --git a/classes/classes/Scenes/Dungeons/D3/DriderIncubus.as b/classes/classes/Scenes/Dungeons/D3/DriderIncubus.as
index e35a65d4a..23c36f950 100644
--- a/classes/classes/Scenes/Dungeons/D3/DriderIncubus.as
+++ b/classes/classes/Scenes/Dungeons/D3/DriderIncubus.as
@@ -230,7 +230,7 @@ this.HP -= (this.maxHP() * 0.08);
 				}
 				
 				player.str -= amount;
-				EngineCore.showUpDown()// showStatDown('str');
+				EngineCore.showUpDown(false);// showStatDown('str');
 				player.addStatusValue(StatusEffects.DriderIncubusVenom, 2, amount);
 					
 				//Alternate if PC cannot move
@@ -275,7 +275,7 @@ this.HP -= (this.maxHP() * 0.08);
 					}
 					
 					player.str -= amount;
-					EngineCore.showUpDown()//showStatDown('str');
+					//showStatDown('str');
 					player.addStatusValue(StatusEffects.DriderIncubusVenom, 2, amount);
 				}				
 			}
diff --git a/classes/classes/Scenes/Dungeons/DeepCave.as b/classes/classes/Scenes/Dungeons/DeepCave.as
index 9b6363989..8e587e46d 100644
--- a/classes/classes/Scenes/Dungeons/DeepCave.as
+++ b/classes/classes/Scenes/Dungeons/DeepCave.as
@@ -175,7 +175,7 @@ use namespace CoC;
 			spriteSelect(52);
 			clearOutput();
 			player.gems -= itype.value * 3;
-			statScreenRefresh();
+			//EngineCore.statScreenRefresh(true);
 			inventory.takeItem(itype, incubusShop);
 		}
 		
diff --git a/classes/classes/Scenes/Dungeons/DesertCave.as b/classes/classes/Scenes/Dungeons/DesertCave.as
index 967a8210b..c5c902d49 100644
--- a/classes/classes/Scenes/Dungeons/DesertCave.as
+++ b/classes/classes/Scenes/Dungeons/DesertCave.as
@@ -2342,10 +2342,11 @@ if (CoC.instance.inCombat) cleanupAfterCombat();
 				outputText("  \"<i>Your tale has the ring of truth to it, [name].  I am the Sand Mother of this coven, and it seems we are not enemies after all.  If you like I can instruct my daughters to let you pass through the sands unhindered.</i>\"  She spreads her arms graciously and asks, \"<i>Was there anything you would like to discuss?  It has been an age since I've had a new arrival to converse with.</i>\"\n\n(+200 XP)");
 				//(Award XP)
 				player.XP += 200;
-				mainView.statsView.showStatUp( 'xp' );
-				dynStats("lust", 0, "scale", false); //Forces up arrow.
+				//mainView.statsView.showStatUp( 'xp' );
+				//dynStats("lust", 0, "scale", false); //Forces up arrow.
 				//xpUp.visible = true;
-				statScreenRefresh();
+				EngineCore.showUpDown(false);
+				EngineCore.statScreenRefresh(false);
 				//(Set friendly)
 				flags[kFLAGS.SAND_WITCHES_FRIENDLY] = 1;
 				//Options: Turn off Sand Witches, Turn on Sand Witches, Fuck (if PC is male or fem), Discuss history, Discuss Coven's Current State
@@ -2397,9 +2398,9 @@ if (CoC.instance.inCombat) cleanupAfterCombat();
 			outputText("\n\n\"<i>Very well.  You are either not a demon agent or the most clever spy this side of Marae's Lake,</i>\" the regal enchantress admits, quietly fixing her hair.  \"<i>Either way, it seems I have no choice but to take you at your word until your actions prove otherwise.</i>\"  She finishes with her hair and idly folds her hands across her lap, which only serves to strain her silken robe tighter around her double-bust.");
 			outputText("\n\n\"<i>Is there something you would like to discuss, or aid you would request?  It has been a great deal of time since I have had the pleasure of discourse with an outsider.</i>\"");
 			player.XP += 200;
-			mainView.statsView.showStatUp( 'xp' );
+			//mainView.statsView.showStatUp( 'xp' );
 			// xpUp.visible = true;
-			statScreenRefresh();
+			//statScreenRefresh();
 			//(Set friendly)
 			flags[kFLAGS.SAND_WITCHES_FRIENDLY] = 1;
 			sandWitchMotherFriendlyMenu();
diff --git a/classes/classes/Scenes/Dungeons/DungeonAbstractContent.as b/classes/classes/Scenes/Dungeons/DungeonAbstractContent.as
index 92fbf6349..1d3d86c3f 100644
--- a/classes/classes/Scenes/Dungeons/DungeonAbstractContent.as
+++ b/classes/classes/Scenes/Dungeons/DungeonAbstractContent.as
@@ -78,7 +78,7 @@ import classes.Scenes.SceneLib;
 		private function moveToRoom(newRoom:DngRoom):void {
 			clearOutput();
 			cheatTime(1 / 12);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			//DungeonCore.setTopButtons();
 			spriteSelect(-1);
 			menu();
@@ -95,7 +95,7 @@ import classes.Scenes.SceneLib;
 		}
 		private function resumeRoom():void {
 			clearOutput();
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			//setTopButtons();
 			spriteSelect(-1);
 			menu();
diff --git a/classes/classes/Scenes/Dungeons/DungeonCore.as b/classes/classes/Scenes/Dungeons/DungeonCore.as
index 0d2019aab..cf5d00565 100644
--- a/classes/classes/Scenes/Dungeons/DungeonCore.as
+++ b/classes/classes/Scenes/Dungeons/DungeonCore.as
@@ -228,7 +228,7 @@ package classes.Scenes.Dungeons
 		 * @param	eastFunction
 		 */
 		public function setDungeonButtons(northFunction:Function = null, southFunction:Function = null, westFunction:Function = null, eastFunction:Function = null):void {
-			statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			menu();
@@ -252,7 +252,7 @@ package classes.Scenes.Dungeons
 		
 		public function generateRoomMenu(tRoom:room):void
 		{
-			statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			setTopButtons();
diff --git a/classes/classes/Scenes/Dungeons/DungeonEngine.as b/classes/classes/Scenes/Dungeons/DungeonEngine.as
index 0532ef66a..74f2d6ae4 100644
--- a/classes/classes/Scenes/Dungeons/DungeonEngine.as
+++ b/classes/classes/Scenes/Dungeons/DungeonEngine.as
@@ -441,7 +441,7 @@ public class DungeonEngine extends BaseContent
 		 * @param	eastFunction
 		 */
 		public function setDungeonButtons(northFunction:Function = null, southFunction:Function = null, westFunction:Function = null, eastFunction:Function = null):void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			menu();
@@ -456,7 +456,7 @@ public class DungeonEngine extends BaseContent
 			setTopButtons();
 		}
 		public function setDungeonButtonsRD(northFunction:Function = null, southFunction:Function = null, westFunction:Function = null, eastFunction:Function = null):void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			menu();
@@ -471,7 +471,7 @@ public class DungeonEngine extends BaseContent
 			setTopButtons();
 		}
 		public function setDungeonButtonsRD3D(northFunction:Function = null, southFunction:Function = null, westFunction:Function = null, eastFunction:Function = null, upFunction:Function = null, downFunction:Function = null):void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			menu();
@@ -488,7 +488,7 @@ public class DungeonEngine extends BaseContent
 			setTopButtons();
 		}
 		public function setDungeonButtonsEL(northFunction:Function = null, southFunction:Function = null, westFunction:Function = null, eastFunction:Function = null, upFunction:Function = null, downFunction:Function = null):void {
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			hideUpDown();
 			spriteSelect(-1);
 			menu();
diff --git a/classes/classes/Scenes/Dungeons/HelDungeon.as b/classes/classes/Scenes/Dungeons/HelDungeon.as
index 92fdc7219..c22b543f5 100644
--- a/classes/classes/Scenes/Dungeons/HelDungeon.as
+++ b/classes/classes/Scenes/Dungeons/HelDungeon.as
@@ -187,10 +187,10 @@ use namespace CoC;
 			doYesNo(reallyRetry, declineRetry);
 		}
 		public function reallyRetry():void {
-			dynStats("lus", 0, "scale", false);
+			//dynStats("lus", 0, "scale", false);
 			player.fatigue = 0;
 			player.HP = player.maxHP();
-			statScreenRefresh();
+			//statScreenRefresh();
 			//Restart dungeon, resets all encounters.
 			flags[kFLAGS.HEL_HARPIES_DEFEATED] = 0;
 			flags[kFLAGS.HEL_PHOENIXES_DEFEATED] = 0;
diff --git a/classes/classes/Scenes/Explore/ExploreDebug.as b/classes/classes/Scenes/Explore/ExploreDebug.as
index cc53312f5..5f766762b 100644
--- a/classes/classes/Scenes/Explore/ExploreDebug.as
+++ b/classes/classes/Scenes/Explore/ExploreDebug.as
@@ -150,21 +150,21 @@ package classes.Scenes.Explore
 				{
                     CoC.instance.inCombat = false;
                     CoC.instance.player.clearStatuses(false);
-                    EngineCore.statScreenRefresh();
+                    EngineCore.statScreenRefresh(true);
 					exploreDebugMonsters(monsterIdx + 1);
 				};
 				m.onWon = function (hpVictory:Boolean, pcCameWorms:Boolean):void
 				{
                     CoC.instance.inCombat = false;
                     CoC.instance.player.clearStatuses(false);
-                    EngineCore.statScreenRefresh();
+                    EngineCore.statScreenRefresh(true);
 					exploreDebugMonsters(monsterIdx + 1);
 				};
 				m.onPcRunAttempt = function ():void
 				{
                     CoC.instance.inCombat = false;
                     CoC.instance.player.clearStatuses(false);
-                    EngineCore.statScreenRefresh();
+                    EngineCore.statScreenRefresh(true);
 					exploreDebugMonsters(monsterIdx + 1);
 				};
 				outputText("You are going to fight " + m.a + " " + m.short + ".");
@@ -176,7 +176,7 @@ package classes.Scenes.Explore
 				addButton(2, "Heal", function():void{
 					player.HP = player.maxHP();
 					player.lust = 0;
-					EngineCore.statScreenRefresh();
+					EngineCore.statScreenRefresh(true);
 				});
 			}
 			if (monsterIdx>1) addButton(6, "Go Back", exploreDebugMonsters, monsterIdx-1);
diff --git a/classes/classes/Scenes/Explore/Giacomo.as b/classes/classes/Scenes/Explore/Giacomo.as
index 9fa98e941..7fe0329fe 100644
--- a/classes/classes/Scenes/Explore/Giacomo.as
+++ b/classes/classes/Scenes/Explore/Giacomo.as
@@ -110,7 +110,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			addButton(2, "Erotica", eroticaMenu);
 			if (player.hasStatusEffect(StatusEffects.WormOffer) && player.hasStatusEffect(StatusEffects.Infested)) addButton(3, "Worm Cure", wormRemovalOffer);
 			addButton(4, "Leave", camp.returnToCampUseOneHour);
-			EngineCore.statScreenRefresh();
+			////EngineCore.statScreenRefresh();
 		}
 		
 		private function firstEncounter():void {
@@ -139,7 +139,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			if (player.level >= 42) addButton(13, consumables.BAPILL_.shortName, itemBuy2, consumables.BAPILL_);
 			else addButtonDisabled(13, "???", "Req. lvl 42+");
 			addButton(14, "Back", giacomoEncounter);
-			EngineCore.statScreenRefresh();
+			////EngineCore.statScreenRefresh();
 		}
 		
 		private function bookMenu():void {
@@ -161,7 +161,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			}
 			addButton(10, "Torch", pitchTorch);
 			addButton(14, "Back", giacomoEncounter);
-			EngineCore.statScreenRefresh();
+			////EngineCore.statScreenRefresh();
 		}
 		
 		private function eroticaMenu():void {
@@ -179,7 +179,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			addButton(7, "Condom", pitchCondom);
 			addButton(14, "Back", giacomoEncounter);
 
-			EngineCore.statScreenRefresh();
+			////EngineCore.statScreenRefresh();
 		}
 		
 		private function pitchManUpBeer():void {
@@ -199,7 +199,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				player.gems -= 15;
 				inventory.takeItem(consumables.MANUP_B, potionMenu);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -220,7 +220,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				player.gems -= 15;
 				inventory.takeItem(consumables.VITAL_T, potionMenu);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -241,7 +241,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				player.gems -= 15;
 				inventory.takeItem(consumables.SMART_T, potionMenu);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -262,7 +262,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				inventory.takeItem(consumables.CERUL_P, potionMenu);
 				player.gems -= 75;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -280,7 +280,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 		
 		private function debitWeapon2(itype:ItemType):void {
 			player.gems -= itype.value;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			inventory.takeItem(itype, potionMenu);
 		}
 		
@@ -303,7 +303,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			{
 				player.gems -= 10;
 				inventory.takeItem(useables.CONDOM, eroticaMenu);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -331,7 +331,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				doNext(bookMenu);
 				player.gems -= 10;
 				player.createKeyItem("Dangerous Plants", 0, 0, 0, 0);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -359,7 +359,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				doNext(bookMenu);
 				player.gems -= 1;
 				player.createKeyItem("Traveler's Guide", 0, 0, 0, 0);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -389,7 +389,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				player.gems -= 10;
 				dynStats("lib", 2, "lus", 20);
 				player.createKeyItem("Hentai Comic", 0, 0, 0, 0);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -412,7 +412,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				outputText("You exchange 100 gems for the tome.  Now you can finally enjoy a workout with Cotton!");
 				player.createKeyItem("Yoga Guide", 0, 0, 0, 0);
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 			doNext(bookMenu);
 		}
@@ -434,7 +434,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nYou decided to buy the seed. It’s actually fairly large and light brown in color. Other than that it just looks like an ordinary seed. Maybe you'll plant it later to see what it'll grow into. <b>You acquired the Mysterious Seed.</b>");
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				flags[kFLAGS.CHRISTMAS_TREE_LEVEL] = 1;
 				player.createKeyItem("Mysterious Seed", 0, 0, 0, 0);
 				doNext(bookMenu);
@@ -458,7 +458,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nYou decided to buy the seed. It’s actually fairly large and light brown in color. Other than that it just looks like an ordinary seed. Maybe you'll plant it later to see what it'll grow intoYou buy the package filled with holiday decorations. Inside are shiny, colorful ornaments, garland, and lights. You can't help but think this will be perfect for decorating the tree back at camp. <b>You acquired Holiday Decorations.</b>");
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				flags[kFLAGS.CHRISTMAS_TREE_LEVEL] = 6;
 				player.createKeyItem("Decorations", 0, 0, 0, 0);
 				doNext(bookMenu);
@@ -487,7 +487,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nThe crazy merchant nods satisfied when you hand him over hundred gems and in exchange gives you a torch.");
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				player.createKeyItem("Torch", 0, 0, 0, 0);
 				doNext(bookMenu);
 			}
@@ -510,7 +510,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nThe crazy merchant nods satisfied when you hand him over a hundred gems and in exchange gives you a white book.");
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				inventory.takeItem(consumables.W__BOOK, bookMenu);
 			}
 		}
@@ -532,7 +532,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nThe crazy merchant nods satisfied when you hand him over five hundred gems and in exchange gives you a grey book.");
 				player.gems -= 500;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				inventory.takeItem(consumables.G__BOOK, bookMenu);
 			}
 		}
@@ -554,7 +554,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			else {
 				outputText("\n\nThe crazy merchant nods satisfied when you hand him over a hundred gems and in exchange gives you a black book.");
 				player.gems -= 100;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 				inventory.takeItem(consumables.B__BOOK, bookMenu);
 			}
 		}
@@ -583,7 +583,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				doNext(eroticaMenu);
 				player.gems -= 20;
 				player.createKeyItem("Dildo", 0, 0, 0, 0);
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 		}
 		
@@ -611,7 +611,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.createKeyItem("Self-Stimulation Belt", 0, 0, 0, 0);
 			doNext(eroticaMenu);
 			player.gems -= 30;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 		}
 		
 		private function pitchAllNaturalSelfStimulationBelt():void {
@@ -648,7 +648,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.createKeyItem("All-Natural Self-Stimulation Belt", 0, 0, 0, 0);
 			doNext(eroticaMenu);
 			player.gems -= 40;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 		}
 			
 		private function pitchOnahole():void {
@@ -675,7 +675,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.createKeyItem("Plain Onahole", 0, 0, 0, 0);
 			doNext(eroticaMenu);
 			player.gems -= 20;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 		}
 			
 		private function pitchDeluxeOnahole():void {
@@ -702,7 +702,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.createKeyItem("Deluxe Onahole", 0, 0, 0, 0);
 			doNext(eroticaMenu);
 			player.gems -= 50;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 		}
 		
 		private function pitchAllNaturalOnahole():void {
@@ -736,7 +736,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.createKeyItem("All-Natural Onahole", 0, 0, 0, 0);
 			doNext(eroticaMenu);
 			player.gems -= 150;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 		}
 		
 		private function pitchDualStimulationBelt():void {
@@ -763,7 +763,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 				outputText("You are a bit dubious at the pleasure it could offer you, but it would be better than being raped by the creatures constantly... maybe to even work out some excess lusts... hesitantly, you reach into your bag and grab 50 gems, handing it to him.  He greedily snatches it from your palm and hands you with the belt with a smile.  \"<i>I promise you won't be disappointed.</i>\"  He counts the gems and waves goodbye.\n\n(<b>Dual Belt acquired!</b>)");
 				player.createKeyItem("Dual Belt", 0, 0, 0, 0);
 				player.gems -= 50;
-				EngineCore.statScreenRefresh();
+				//EngineCore.statScreenRefresh();
 			}
 			doNext(eroticaMenu);
 		}
@@ -783,7 +783,7 @@ public class Giacomo extends BaseContent implements TimeAwareInterface {
 			player.removeStatusEffect(StatusEffects.Infested);
 			dynStats("lib", -1, "lus", -99, "cor", -4);
 			player.gems -= 175;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			inventory.takeItem(consumables.VITAL_T, camp.returnToCampUseOneHour);
 		}
 		
diff --git a/classes/classes/Scenes/Explore/Lumi.as b/classes/classes/Scenes/Explore/Lumi.as
index 6892424bd..1addc22d5 100644
--- a/classes/classes/Scenes/Explore/Lumi.as
+++ b/classes/classes/Scenes/Explore/Lumi.as
@@ -104,7 +104,7 @@ public class Lumi extends BaseContent {
         spriteSelect(37);
         trace("LUMI ENHANCE");
         player.gems -= 100;
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         player.consumeItem(itype);
         clearOutput();
         outputText("Lumi grabs the item from you and runs over to her table, stopping for only a second to put her apron on.  ");
@@ -207,7 +207,7 @@ public class Lumi extends BaseContent {
         if (player.gems >= cost) {
             outputText("You pay Lumi the gems, and she hands you " + itype.longName + " saying, \"<i>Here ya go!</i>\"\n\n");
             player.gems -= cost;
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
             inventory.takeItem(itype, lumiShop, lumiLabChoices);
         }
         else {
@@ -352,7 +352,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Toolbelt!</b>");
 			player.createKeyItem("Blueprint - Toolbelt", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -365,7 +365,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Potent Drug injectors!</b>");
 			player.createKeyItem("Blueprint - Potent Drug injectors", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -378,7 +378,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Improved Drug injectors!</b>");
 			player.createKeyItem("Blueprint - Improved Drug injectors", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -391,7 +391,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Drug injectors!</b>");
 			player.createKeyItem("Blueprint - Drug injectors", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -404,7 +404,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Gun Scope with Aimbot!</b>");
 			player.createKeyItem("Blueprint - Gun Scope with Aimbot", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -417,7 +417,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Gun Scope with Aim tech!</b>");
 			player.createKeyItem("Blueprint - Gun Scope with Aim tech", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -430,7 +430,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Gun Scope!</b>");
 			player.createKeyItem("Blueprint - Gun Scope", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -443,7 +443,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - S.A Tech Goggle!</b>");
 			player.createKeyItem("Blueprint - S.A Tech Goggle", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -456,7 +456,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Scanner goggle!</b>");
 			player.createKeyItem("Blueprint - Scanner goggle", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -469,7 +469,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Machinist Goggles!</b>");
 			player.createKeyItem("Blueprint - Machinist Goggles", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -482,7 +482,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Nitro Boots!</b>");
 			player.createKeyItem("Blueprint - Nitro Boots", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -495,7 +495,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Rocket Boots!</b>");
 			player.createKeyItem("Blueprint - Rocket Boots", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -508,7 +508,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Spring Boots!</b>");
 			player.createKeyItem("Blueprint - Spring Boots", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -521,7 +521,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - M.G.S. bracer!</b>");
 			player.createKeyItem("Blueprint - M.G.S. bracer", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -534,7 +534,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Powboy!</b>");
 			player.createKeyItem("Blueprint - Powboy", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -547,7 +547,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Power bracer!</b>");
 			player.createKeyItem("Blueprint - Power bracer", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -560,7 +560,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Ripper 2.0!</b>");
 			player.createKeyItem("Blueprint - Ripper 2.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -573,7 +573,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Ripper 1.0!</b>");
 			player.createKeyItem("Blueprint - Ripper 1.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -586,7 +586,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Machined greatsword!</b>");
 			player.createKeyItem("Blueprint - Machined greatsword", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -599,7 +599,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Upgraded Armor plating 3.0!</b>");
 			player.createKeyItem("Blueprint - Upgraded Armor plating 3.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -612,7 +612,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Upgraded Armor plating 2.0!</b>");
 			player.createKeyItem("Blueprint - Upgraded Armor plating 2.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -625,7 +625,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Upgraded Armor plating 1.0!</b>");
 			player.createKeyItem("Blueprint - Upgraded Armor plating 1.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -638,7 +638,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Taser with an overcharged battery!</b>");
 			player.createKeyItem("Blueprint - Taser with an overcharged battery", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -651,7 +651,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Taser!</b>");
 			player.createKeyItem("Blueprint - Taser", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -664,7 +664,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Safety bubble!</b>");
 			player.createKeyItem("Blueprint - Safety bubble", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -677,7 +677,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Machine Gun MK3!</b>");
 			player.createKeyItem("Blueprint - Machine Gun MK3", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -690,7 +690,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Machine Gun MK2!</b>");
 			player.createKeyItem("Blueprint - Machine Gun MK2", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -703,7 +703,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Machine Gun MK1!</b>");
 			player.createKeyItem("Blueprint - Machine Gun MK1", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -716,7 +716,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Repeater Gun!</b>");
 			player.createKeyItem("Blueprint - Repeater Gun", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -729,7 +729,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Dynapunch Glove!</b>");
 			player.createKeyItem("Blueprint - Dynapunch Glove", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -742,7 +742,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Whitefire Beam Cannon!</b>");
 			player.createKeyItem("Blueprint - Whitefire Beam Cannon", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -755,7 +755,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Snowball Generator!</b>");
 			player.createKeyItem("Blueprint - Snowball Generator", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -768,7 +768,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Raijin blaster!</b>");
 			player.createKeyItem("Blueprint - Raijin blaster", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -781,7 +781,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Gravity shots!</b>");
 			player.createKeyItem("Blueprint - Gravity shots", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -794,7 +794,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Medical Dispenser 2.0!</b>");
 			player.createKeyItem("Blueprint - Medical Dispenser 2.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -807,7 +807,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Stimpack Dispenser 1.0!</b>");
 			player.createKeyItem("Blueprint - Stimpack Dispenser 1.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -820,7 +820,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Missile launcher!</b>");
 			player.createKeyItem("Blueprint - Missile launcher", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -833,7 +833,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Omni Missile!</b>");
 			player.createKeyItem("Blueprint - Omni Missile", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -846,7 +846,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Aphrodigas Gun!</b>");
 			player.createKeyItem("Blueprint - Aphrodigas Gun", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -859,7 +859,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Lustnade Launcher!</b>");
 			player.createKeyItem("Blueprint - Lustnade Launcher", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -872,7 +872,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Cum Reservoir!</b>");
 			player.createKeyItem("Blueprint - Cum Reservoir", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -885,7 +885,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - SPMK1!</b>");
 			player.createKeyItem("Blueprint - SPMK1", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -898,7 +898,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Impregnator 1.0!</b>");
 			player.createKeyItem("Blueprint - Impregnator 1.0", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -911,7 +911,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Jetpack!</b>");
 			player.createKeyItem("Blueprint - Jetpack", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -924,7 +924,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - MK2 Jetpack!</b>");
 			player.createKeyItem("Blueprint - MK2 Jetpack", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -950,7 +950,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Energy Core!</b>");
 			player.createKeyItem("Blueprint - Energy Core", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -963,7 +963,7 @@ public class Lumi extends BaseContent {
 			outputText("\"<i>Greaf far you that ya starting a new project. Ya tell me the result in a few days gotcha?</i>\"\n\n");
 			outputText("<b>Gained Key Item: Blueprint - Mechanism!</b>");
 			player.createKeyItem("Blueprint - Mechanism", 0, 0, 0, 0);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(lumiEngineering);
 		}
 		else lumiEngineeringBuyBlueprintNotEnoughGems();
@@ -1015,7 +1015,7 @@ public class Lumi extends BaseContent {
 			flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] -= (flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] - 200);
 			outputText("Metal Pieces: " + flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] + "/200");
 		}
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		doNext(lumiEngineeringBuyMetalPieces);
 	}
 	public function lumiEngineeringBuySet1():void {
@@ -1025,7 +1025,7 @@ public class Lumi extends BaseContent {
 		outputText("\"<i>I'm surprised ya don'f gat one of dese already. Its used in next to everything in everyday goblin life.Y'all need one to craft anything of note.</i>\"\n\n");
 		outputText("<b>Gained Key Item: Mechanic's Wrench!</b>");
 		player.createKeyItem("Mechanic's Wrench", 0, 0, 0, 0);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		doNext(lumiEngineering);
 	}
 	public function lumiEngineeringBuySet2():void {
@@ -1035,7 +1035,7 @@ public class Lumi extends BaseContent {
 		outputText("\"<i>'m surprised ya don'f gat one of dese already. Yall need one to craft.</i>\"\n\n");
 		outputText("<b>Gained Key Item: Engineer's Toolbox!</b>");
 		player.createKeyItem("Engineer's Toolbox", 0, 0, 0, 0);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		doNext(lumiEngineering);
 	}
 	
@@ -1180,7 +1180,7 @@ public class Lumi extends BaseContent {
 		flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] -= 5;
 		player.destroyItems(useables.GOLCORE, 3);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Energy Core is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(useables.ENECORE, camp.returnToCampUseOneHour);
 		else inventory.takeItem(useables.ENECORE, camp.returnToCampUseFourHours);
 	}
@@ -1189,7 +1189,7 @@ public class Lumi extends BaseContent {
 		flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] -= 5;
 		flags[kFLAGS.CAMP_CABIN_NAILS_RESOURCES] -= 200;
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Mechanism is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(useables.MECHANI, camp.returnToCampUseOneHour);
 		else inventory.takeItem(useables.MECHANI, camp.returnToCampUseFourHours);
 	}
@@ -1199,7 +1199,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Toolbelt is ready.\n\n");
 		player.createKeyItem("Toolbelt", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Toolbelt");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1214,7 +1214,7 @@ public class Lumi extends BaseContent {
 		player.removeKeyItem("Improved Drug injectors");
 		player.lib += 25;
 		player.sens += 5;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1229,7 +1229,7 @@ public class Lumi extends BaseContent {
 		player.removeKeyItem("Drug injectors");
 		player.lib += 25;
 		player.sens += 5;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1243,7 +1243,7 @@ public class Lumi extends BaseContent {
 		player.removeKeyItem("Blueprint - Drug injectors");
 		player.lib += 25;
 		player.sens += 5;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1256,7 +1256,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Gun Scope with Aimbot", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Gun Scope with Aimbot");
 		player.removeKeyItem("Gun Scope with Aim tech");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1268,7 +1268,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Gun Scope with Aim tech", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Gun Scope with Aim tech");
 		player.removeKeyItem("Gun Scope");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1279,7 +1279,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Gun Scope is ready.\n\n");
 		player.createKeyItem("Gun Scope", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Gun Scope");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1290,7 +1290,7 @@ public class Lumi extends BaseContent {
 		player.destroyItems(useables.ENECORE, 5);
 		player.destroyItems(headjewelries.SCANGOG, 1);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "eight":"twelve")+" hours your brand new S.A Tech Goggle is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(headjewelries.SATGOG, camp.returnToCampUseEightHours);
 		else inventory.takeItem(headjewelries.SATGOG, camp.returnToCampUseTwelveHours);
 	}
@@ -1301,7 +1301,7 @@ public class Lumi extends BaseContent {
 		player.destroyItems(useables.ENECORE, 2);
 		player.destroyItems(headjewelries.MACHGOG, 1);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Scanner goggle is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(headjewelries.SCANGOG, camp.returnToCampUseFourHours);
 		else inventory.takeItem(headjewelries.SCANGOG, camp.returnToCampUseEightHours);
 	}
@@ -1310,7 +1310,7 @@ public class Lumi extends BaseContent {
 		flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] -= 1;
 		flags[kFLAGS.CAMP_CABIN_NAILS_RESOURCES] -= 100;
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Machinist Goggles is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(headjewelries.MACHGOG, camp.returnToCampUseOneHour);
 		else inventory.takeItem(headjewelries.MACHGOG, camp.returnToCampUseFourHours);
 	}
@@ -1324,7 +1324,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Nitro Boots", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Nitro Boots");
 		player.removeKeyItem("Rocket Boots");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1338,7 +1338,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Rocket Boots", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Rocket Boots");
 		player.removeKeyItem("Spring Boots");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1350,7 +1350,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Spring Boots is ready.\n\n");
 		player.createKeyItem("Spring Boots", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Spring Boots");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1363,7 +1363,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("M.G.S. bracer", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - M.G.S. bracer");
 		player.removeKeyItem("Powboy");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1376,7 +1376,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Powboy", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Powboy");
 		player.removeKeyItem("Power bracer");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1388,7 +1388,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Power bracer is ready.\n\n");
 		player.createKeyItem("Power bracer", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Power bracer");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1400,7 +1400,7 @@ public class Lumi extends BaseContent {
 		player.destroyItems(useables.MECHANI, 10);
 		player.destroyItems(weapons.RIPPER1, 1);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "eight":"twelve")+" hours your brand new Ripper 2.0 is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(weapons.RIPPER2, camp.returnToCampUseEightHours);
 		else inventory.takeItem(weapons.RIPPER2, camp.returnToCampUseTwelveHours);
 	}
@@ -1412,7 +1412,7 @@ public class Lumi extends BaseContent {
 		player.destroyItems(useables.MECHANI, 5);
 		player.destroyItems(weapons.MACGRSW, 1);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Ripper 1.0 is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(weapons.RIPPER1, camp.returnToCampUseFourHours);
 		else inventory.takeItem(weapons.RIPPER1, camp.returnToCampUseEightHours);
 	}
@@ -1423,7 +1423,7 @@ public class Lumi extends BaseContent {
 		player.destroyItems(useables.ENECORE, 1);
 		player.destroyItems(useables.MECHANI, 2);
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Machined greatsword is ready.\n\n");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) inventory.takeItem(weapons.MACGRSW, camp.returnToCampUseOneHour);
 		else inventory.takeItem(weapons.MACGRSW, camp.returnToCampUseFourHours);
 	}
@@ -1435,7 +1435,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Upgraded Armor plating 3.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Upgraded Armor plating 3.0");
 		player.removeKeyItem("Upgraded Armor plating 2.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1447,7 +1447,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Upgraded Armor plating 2.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Upgraded Armor plating 2.0");
 		player.removeKeyItem("Upgraded Armor plating 1.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1458,7 +1458,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Upgraded Armor plating 1.0 is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Upgraded Armor plating 1.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Upgraded Armor plating 1.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1471,7 +1471,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Taser with an overcharged battery is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Taser with an overcharged battery", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Taser with an overcharged battery");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1484,7 +1484,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Taser is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Taser", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Taser");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1496,7 +1496,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Safety bubble is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Safety bubble", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Safety bubble");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1509,7 +1509,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Machine Gun MK3", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Machine Gun MK3");
 		player.removeKeyItem("Machine Gun MK2");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1522,7 +1522,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Machine Gun MK2", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Machine Gun MK2");
 		player.removeKeyItem("Machine Gun MK1");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1535,7 +1535,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Machine Gun MK1", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Machine Gun MK1");
 		player.removeKeyItem("Repeater Gun");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1546,7 +1546,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Repeater Gun is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Repeater Gun", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Repeater Gun");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1558,7 +1558,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Dynapunch Glove is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Dynapunch Glove", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Dynapunch Glove");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1570,7 +1570,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Whitefire Beam Cannon is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Whitefire Beam Cannon", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Whitefire Beam Cannon");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1582,7 +1582,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Snowball Generator is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Snowball Generator", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Snowball Generator");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1596,7 +1596,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Raijin blaster is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Raijin blaster", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Raijin blaster");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1609,7 +1609,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Gravity shots is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Gravity shots", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Gravity shots");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1623,7 +1623,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Medical Dispenser 2.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Medical Dispenser 2.0");
 		player.removeKeyItem("Stimpack Dispenser 1.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1635,7 +1635,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Stimpack Dispenser 1.0 is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Stimpack Dispenser 1.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Stimpack Dispenser 1.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1648,7 +1648,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Omni Missile", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Omni Missile");
 		player.removeKeyItem("Missile launcher");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseEightHours);
 		else doNext(camp.returnToCampUseTwelveHours);
 	}
@@ -1660,7 +1660,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "four":"eight")+" hours your brand new Missile launcher is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Missile launcher", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Missile launcher");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1674,7 +1674,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("Lustnade Launcher", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Lustnade Launcher");
 		player.removeKeyItem("Aphrodigas Gun");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1686,7 +1686,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Aphrodigas Gun is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Aphrodigas Gun", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Aphrodigas Gun");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1697,7 +1697,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Impregnator 1.0 is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Impregnator 1.0", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Impregnator 1.0");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1707,7 +1707,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new SPMK1 is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("SPMK1", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - SPMK1");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1718,7 +1718,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Cum Reservoir is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Cum Reservoir", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Cum Reservoir");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}
@@ -1731,7 +1731,7 @@ public class Lumi extends BaseContent {
 		player.createKeyItem("MK2 Jetpack", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - MK2 Jetpack");
 		player.removeKeyItem("Jetpack");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseFourHours);
 		else doNext(camp.returnToCampUseEightHours);
 	}
@@ -1743,7 +1743,7 @@ public class Lumi extends BaseContent {
 		outputText("You get to work spending the necessary time to craft your newest toy. After "+(player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop) ? "an hour":"four hours")+" your brand new Jetpack is ready and installed up your " + player.vehiclesName + ".\n\n");
 		player.createKeyItem("Jetpack", 0, 0, 0, 0);
 		player.removeKeyItem("Blueprint - Jetpack");
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		if (player.hasStatusEffect(StatusEffects.PCDaughtersWorkshop)) doNext(camp.returnToCampUseOneHour);
 		else doNext(camp.returnToCampUseFourHours);
 	}/*
diff --git a/classes/classes/Scenes/Holidays.as b/classes/classes/Scenes/Holidays.as
index 168e60333..98721a507 100644
--- a/classes/classes/Scenes/Holidays.as
+++ b/classes/classes/Scenes/Holidays.as
@@ -3580,7 +3580,7 @@ public class Holidays {
             return;
         }
         player.gems -= 35;
-        EngineCore.statScreenRefresh();
+        EngineCore.statScreenRefresh(true);
         EngineCore.outputText("You opt for a slice of the tasty treat - you've only got until the festivities wade away, so you might as well take one now!  Do you eat the treat or save it for later?\n\n");
         EngineCore.menu();
         EngineCore.addButton(0, "Eat", CoC.instance.mutations.winterPudding, player, true, null, "Eat the delicious Winter Pudding.");
@@ -3751,7 +3751,7 @@ public class Holidays {
             if (player.gems >= 9) {
                 EngineCore.outputText("Taking a handful of gems out of your pouch, you spread them evenly around the Snowman's face, giving it a nice, vacant smile.  It still needs a nose, however, and for that, you'll need a carrot.  Perhaps there's a farm nearby?");
                 player.gems -= 9;
-                EngineCore.statScreenRefresh();
+                EngineCore.statScreenRefresh(true);
                 flags[kFLAGS.NIEVE_MOUTH] = "gems";
                 flags[kFLAGS.NIEVE_STAGE] = 3;
             }
diff --git a/classes/classes/Scenes/Masturbation.as b/classes/classes/Scenes/Masturbation.as
index 8738313d4..445ef5c7e 100644
--- a/classes/classes/Scenes/Masturbation.as
+++ b/classes/classes/Scenes/Masturbation.as
@@ -3641,7 +3641,7 @@ public class Masturbation extends BaseContent {
 			}
 			player.gems += gems;
 			flags[kFLAGS.GILDED_JERKED]++;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(camp.returnToCampUseOneHour);
 		}
 		
@@ -3688,7 +3688,7 @@ public class Masturbation extends BaseContent {
 				player.orgasm();
 				dynStats("sen", -1.5);
 			}
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(camp.returnToCampUseOneHour);
 		}
 
@@ -3722,7 +3722,7 @@ public class Masturbation extends BaseContent {
 			if (player.findPerk(PerkLib.ElectrifiedDesire) >= 0 || player.hasStatusEffect(StatusEffects.RaijuLightningStatus)) player.orgasmRaijuStyle();
 			else player.orgasm();
 			dynStats("sen", 0.5);
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(camp.returnToCampUseOneHour);
 		}
 		
diff --git a/classes/classes/Scenes/Monsters/ImpScene.as b/classes/classes/Scenes/Monsters/ImpScene.as
index 3de66cd31..97dce7cbf 100644
--- a/classes/classes/Scenes/Monsters/ImpScene.as
+++ b/classes/classes/Scenes/Monsters/ImpScene.as
@@ -222,7 +222,7 @@ use namespace CoC;
 			//new PG
 			outputText("Satisfied, his dick slides from you and he flies away as mixed seed continues to spill from your abused body. Your limbs grow weak, and you fall from the tree with a hard thud before losing consciousness.  ");
 			//Take some damage
-			mainView.statsView.showStatDown( 'hp' );
+			//mainView.statsView.showStatDown( 'hp' );
 			// hpDown.visible = true;
 			player.HP -= 10;
 			if(player.HP < 1) player.HP = 1;
diff --git a/classes/classes/Scenes/NPCs/CaiLin.as b/classes/classes/Scenes/NPCs/CaiLin.as
index b786d7418..5c9936abb 100644
--- a/classes/classes/Scenes/NPCs/CaiLin.as
+++ b/classes/classes/Scenes/NPCs/CaiLin.as
@@ -63,7 +63,7 @@ public class CaiLin extends Monster
 					//showStatDown( 'spe' );
 					player.inte -= 1;
 					//showStatDown( 'inte' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.createStatusEffect(StatusEffects.MedusaVenom,2,2,2,1);
 				}
 				else if(player.str > 8 && player.tou > 8 && player.spe > 9) {
@@ -73,7 +73,7 @@ public class CaiLin extends Monster
 					//showStatDown( 'tou' );
 					player.spe -= 3;
 					//showStatDown( 'spe' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.createStatusEffect(StatusEffects.MedusaVenom,2,2,3,0);
 				}
 				else if(player.tou > 9 && player.spe > 10) {
@@ -81,13 +81,13 @@ public class CaiLin extends Monster
 					//showStatDown( 'tou' );
 					player.spe -= 4;
 					//showStatDown( 'spe' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.createStatusEffect(StatusEffects.MedusaVenom,0,3,4,0);
 				}
 				else if(player.spe > 12) {
 					player.spe -= 6;
 					//showStatDown( 'spe' );
-					EngineCore.showUpDown();
+					EngineCore.showUpDown(false);
 					player.createStatusEffect(StatusEffects.MedusaVenom, 0,0,6,0);
 					player.takePoisonDamage(5+rand(5));
 				}
@@ -107,7 +107,7 @@ public class CaiLin extends Monster
 					player.spe -= 1;
 					//showStatDown( 'spe' );
 					player.inte -= 1;
-					EngineCore.showUpDown();//showStatDown( 'inte' );
+					//showStatDown( 'inte' );
 					player.addStatusValue(StatusEffects.MedusaVenom,1,1);
 					player.addStatusValue(StatusEffects.MedusaVenom,2,1);
 					player.addStatusValue(StatusEffects.MedusaVenom,3,1);
@@ -119,7 +119,7 @@ public class CaiLin extends Monster
 					player.tou -= 1;
 					//showStatDown( 'tou' );
 					player.spe -= 2;
-					EngineCore.showUpDown();//showStatDown( 'spe' );
+					//showStatDown( 'spe' );
 					player.addStatusValue(StatusEffects.MedusaVenom,1,1);
 					player.addStatusValue(StatusEffects.MedusaVenom,2,1);
 					player.addStatusValue(StatusEffects.MedusaVenom,3,2);
@@ -128,13 +128,13 @@ public class CaiLin extends Monster
 					player.tou -= 2;
 					//showStatDown( 'tou' );
 					player.spe -= 2;
-					EngineCore.showUpDown();//showStatDown( 'spe' );
+					//showStatDown( 'spe' );
 					player.addStatusValue(StatusEffects.MedusaVenom,2,2);
 					player.addStatusValue(StatusEffects.MedusaVenom,3,2);
 				}
 				else if(player.spe > 9) {
 					player.spe -= 3;
-					EngineCore.showUpDown();//showStatDown( 'spe' );
+					//showStatDown( 'spe' );
 					player.addStatusValue(StatusEffects.MedusaVenom,3,3);
 					player.takeMagicDamage(5+rand(5));
 				}
diff --git a/classes/classes/Scenes/NPCs/EmberScene.as b/classes/classes/Scenes/NPCs/EmberScene.as
index fffcfbeb9..20698513e 100644
--- a/classes/classes/Scenes/NPCs/EmberScene.as
+++ b/classes/classes/Scenes/NPCs/EmberScene.as
@@ -415,7 +415,7 @@ public class EmberScene extends NPCAwareContent implements TimeAwareInterface
 			outputText("\n\nHanding over the gems, you take the white shell back from her; true to her word, she's rounded it into a proper shield and fitted adjustable straps to the back.  Its hardness is indisputable, but you can only wonder if its liquid absorption properties are still intact.  Worth a test, right?");
 			//this is where the Dragonshell Shield lives, git you one!
 			player.gems -= 200;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			player.removeKeyItem("Dragon Eggshell");
 			inventory.takeItem(shields.DRGNSHL, new YvonneArmorShop().enter);
 		}
diff --git a/classes/classes/Scenes/NPCs/Fenris.as b/classes/classes/Scenes/NPCs/Fenris.as
index d5d5495cb..7c28c02c1 100644
--- a/classes/classes/Scenes/NPCs/Fenris.as
+++ b/classes/classes/Scenes/NPCs/Fenris.as
@@ -877,7 +877,7 @@ package classes.Scenes.NPCs{
 		public function timeChange():Boolean
 		{
 			//pregnancy.pregnancyAdvance();
-			trace("\nFenris time change: Time is " + CoC.instance.model.time.hours , false);
+			//trace("\nFenris time change: Time is " + CoC.instance.model.time.hours , false);
 			var _Return:Boolean = getMainQuestStage() >= MAINQUEST_Greetings;
 			if (_Return) {
 				_Return = false;
diff --git a/classes/classes/Scenes/NPCs/FenrisMonster.as b/classes/classes/Scenes/NPCs/FenrisMonster.as
index dcd4c61a7..a6bc97647 100644
--- a/classes/classes/Scenes/NPCs/FenrisMonster.as
+++ b/classes/classes/Scenes/NPCs/FenrisMonster.as
@@ -277,7 +277,7 @@ package classes.Scenes.NPCs
 				createStatusEffect(StatusEffects.Round,2,0,0,0);
 			} else addStatusValue(StatusEffects.Round, 1, 1);
 			if (HowlCooldown > 0 ) HowlCooldown = HowlCooldown - 1;
-			statScreenRefresh();
+			//statScreenRefresh();
 			outputText("\n", false);
 			//TODO ?combatRoundOver();
 	}
diff --git a/classes/classes/Scenes/NPCs/Helspawn.as b/classes/classes/Scenes/NPCs/Helspawn.as
index 89e13ca89..27dd0a14f 100644
--- a/classes/classes/Scenes/NPCs/Helspawn.as
+++ b/classes/classes/Scenes/NPCs/Helspawn.as
@@ -104,9 +104,10 @@ private function calledShot():void {
 				outputText("\nDat ass.  You lean back, enjoying the show as the slutty little salamander slips right past your guard, practically grinding up against you until you can feel a fire boiling in your loins!");
 				var lustDelta:Number = player.lustVuln * (10 + player.lib/10);
 				player.lust += lustDelta;
-				game.mainView.statsView.showStatUp( 'lust' );
+				//game.mainView.statsView.showStatUp( 'lust' );
 				// lustDown.visible = false;
 				// lustUp.visible = true;
+				EngineCore.showUpDown(false);
 				lustDelta = Math.round(lustDelta * 10)/10;
 				outputText(" (" + lustDelta + ")");
 			}
diff --git a/classes/classes/Scenes/NPCs/Rathazul.as b/classes/classes/Scenes/NPCs/Rathazul.as
index 03a2f61b2..8530d9391 100644
--- a/classes/classes/Scenes/NPCs/Rathazul.as
+++ b/classes/classes/Scenes/NPCs/Rathazul.as
@@ -359,11 +359,11 @@ private function rathazulPurifyIncubiDraft():void {
 		doNext(returnToRathazulMenu);
 		return;
 	}
+	player.gems -= 20;
 	if (!debug)
 		player.destroyItems(consumables.INCUBID, 1);
 	inventory.takeItem(consumables.P_DRAFT, returnToRathazulMenu);
-	player.gems -= 20;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -405,11 +405,11 @@ private function rathazulPurifySuccubiMilk():void {
 		doNext(returnToRathazulMenu);
 		return;
 	}
+	player.gems -= 20;
 	if (!debug)
 		player.destroyItems(consumables.SUCMILK, 1);
 	inventory.takeItem(consumables.P_S_MLK, returnToRathazulMenu);
-	player.gems -= 20;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -421,11 +421,11 @@ private function rathazulPurifySuccubiDelight():void {
 		doNext(returnToRathazulMenu);
 		return;
 	}
+	player.gems -= 20;
 	if (!debug)
 		player.destroyItems(consumables.SDELITE, 1);
 	inventory.takeItem(consumables.PSDELIT, returnToRathazulMenu);
-	player.gems -= 20;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -437,11 +437,11 @@ private function rathazulPurifyLaBova():void {
 		doNext(returnToRathazulMenu);
 		return;
 	}
+	player.gems -= 20;
 	if (!debug)
 		player.destroyItems(consumables.LABOVA_, 1);
 	inventory.takeItem(consumables.P_LBOVA, returnToRathazulMenu);
-	player.gems -= 20;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -586,7 +586,7 @@ private function makeADeBimboDraft():void {
 	//Take items
 	player.gems -= 250;
 	player.consumeItem(consumables.SMART_T,5);
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul,2,1);
 	inventory.takeItem(consumables.DEBIMBO, returnToRathazulMenu);
 }
@@ -600,11 +600,11 @@ private function purifyMinoCum():void{
 		doNext(returnToRathazulMenu);
 		return;
 	}
+	player.gems -= 20;
 	clearOutput();
 	if (!debug) player.destroyItems(consumables.MINOCUM, 1);
 	inventory.takeItem(consumables.P_M_CUM, returnToRathazulMenu);
-	player.gems -= 20;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -664,7 +664,7 @@ private function buyDyes(fromPage2:Boolean = false):void {
 		outputText("Rathazul smiles and pulls forth several vials of colored fluids.  Which type of dye would you like?");
 		outputText("\n\n<b>(-50 Gems)</b>");
 		player.gems -= 50;
-		EngineCore.statScreenRefresh();
+		EngineCore.statScreenRefresh(true);
 	}
 	menu();
 	addButton(0, "Auburn", buyDye, consumables.AUBURND);
@@ -705,7 +705,7 @@ private function buyDye(dye:ItemType):void {
 	clearOutput();
 	outputText(images.showImage("rathazul-buy-dye"));
 	inventory.takeItem(dye, rathazulShopMenu);
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -714,7 +714,7 @@ private function buyDyeNevermind():void {
 	clearOutput();
 	outputText("You change your mind about the dye, and Rathazul returns your gems.\n\n<b>(+50 Gems)</b>");
 	player.gems += 50;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	doNext(rathazulShopMenu);
 }
 
@@ -725,7 +725,7 @@ private function makeDyes():void {
 	outputText("Rathazul smiles and pulls forth several vials preparing for mixing.  Which type of dye need?");
 	outputText("\n\n<b>(-50 Gems)</b>");
 	player.gems -= 50;
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	menu();
 	if (player.hasItem(consumables.REPTLUM, 1) && flags[kFLAGS.ARIAN_SCALES] > 0) {
 		if (player.hasItem(consumables.WHITEDY, 1)) addButton(0, "White", makeDye1);
@@ -742,7 +742,7 @@ private function makeDye1():void {
 	player.destroyItems(consumables.REPTLUM, 1);
 	player.destroyItems(consumables.WHITEDY, 1);
 	outputText(images.showImage("rathazul-buy-dye"));
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	inventory.takeItem(useables.VIALCLE, rathazulShopMenu);
 }
@@ -753,7 +753,7 @@ private function makeDye2():void {
 	player.destroyItems(consumables.REPTLUM, 1);
 	player.destroyItems(consumables.BLUEDYE, 1);
 	outputText(images.showImage("rathazul-buy-dye"));
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	inventory.takeItem(useables.VIALTUR, rathazulShopMenu);
 }
@@ -764,7 +764,7 @@ private function makeDye3():void {
 	player.destroyItems(consumables.REPTLUM, 1);
 	player.destroyItems(consumables.PINKDYE, 1);
 	outputText(images.showImage("rathazul-buy-dye"));
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	inventory.takeItem(useables.VIALPIN, rathazulShopMenu);
 }
@@ -775,7 +775,7 @@ private function makeDye4():void {
 	player.destroyItems(consumables.REPTLUM, 1);
 	player.destroyItems(consumables.RAINDYE, 1);
 	outputText(images.showImage("rathazul-buy-dye"));
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	inventory.takeItem(useables.VIALRAI, rathazulShopMenu);
 }
@@ -785,7 +785,7 @@ private function makeDyeNevermind():void {
 	clearOutput();
 	outputText("You change your mind about the dye, and Rathazul returns your gems.\n\n<b>(+50 Gems)</b>");
 	player.gems += 50;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	doNext(rathazulShopMenu);
 }
 
@@ -796,7 +796,7 @@ private function buyOils():void {
 	outputText("Rathazul smiles and pulls forth several bottles of skin oil.  Which type of skin oil would you like?");
 	outputText("\n\n<b>(-50 Gems)</b>");
 	player.gems -= 50;
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	menu();
 	addButton(0, "Dark", buyOil, consumables.DARK_OL);
 	addButton(1, "Ebony", buyOil, consumables.EBONYOL);
@@ -814,7 +814,7 @@ private function buyOil(oil:ItemType):void {
 	clearOutput();
 	outputText(images.showImage("rathazul-buy-oil"));
 	inventory.takeItem(oil, rathazulShopMenu);
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -823,7 +823,7 @@ private function buyOilNevermind():void {
 	clearOutput();
 	outputText("You change your mind about the oil, and Rathazul returns your gems.\n\n<b>(+50 Gems)</b>");
 	player.gems += 50;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	doNext(rathazulShopMenu);
 }
 
@@ -834,7 +834,7 @@ private function buyLotions():void {
 	outputText("Rathazul smiles and pulls forth several vials of body lotion.  Which type of body lotion would you like?");
 	outputText("\n\n<b>(-50 Gems)</b>");
 	player.gems -= 50;
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	menu();
 	addButton(0, "Clear", buyLotion, consumables.CLEARLN);
 	addButton(1, "Rough", buyLotion, consumables.ROUGHLN);
@@ -848,7 +848,7 @@ private function buyLotion(lotion:ItemType):void {
 	clearOutput();
 	outputText(images.showImage("rathazul-buy-lotion"));
 	inventory.takeItem(lotion, rathazulShopMenu);
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 }
 
@@ -857,7 +857,7 @@ private function buyLotionNevermind():void {
 	clearOutput();
 	outputText("You change your mind about the lotion, and Rathazul returns your gems.\n\n<b>(+50 Gems)</b>");
 	player.gems += 50;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	doNext(rathazulShopMenu);
 }
 
@@ -871,7 +871,7 @@ private function buyReducto():void {
 		outputText("Rathazul hands you the Reducto with a nod before returning to his work.\n\n");
 		player.gems -= cost;
 		inventory.takeItem(consumables.REDUCTO, rathazulShopMenu);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
 	else {
@@ -890,7 +890,7 @@ private function buyGroPlus():void {
 		outputText("Rathazul hands you the GroPlus with a nod before returning to his work.\n\n");
 		player.gems -= cost;
 		inventory.takeItem(consumables.GROPLUS, rathazulShopMenu);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
 	else {
@@ -902,28 +902,28 @@ private function buyGroPlus():void {
 	private function buyPuritySomething(item:ItemType):void {
 		clearOutput();
 		player.gems -= 100;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		inventory.takeItem(item, rathazulShopMenu);
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
 	private function buyPuritySomething1(item:ItemType):void {
 		clearOutput();
 		player.gems -= 12;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		inventory.takeItem(item, rathazulShopMenu);
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
 	private function buyPuritySomething2(item:ItemType):void {
 		clearOutput();
 		player.gems -= 30;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		inventory.takeItem(item, rathazulShopMenu);
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
 	private function buyPuritySomething3(item:ItemType):void {
 		clearOutput();
 		player.gems -= 85;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		inventory.takeItem(item, rathazulShopMenu);
 		player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
 	}
@@ -936,9 +936,9 @@ private function rathazulMakesPureHoney():void {
 		doNext(rathazulShopMenu);
 		return;
 	}
-	player.destroyItems(consumables.BEEHONY, 1);
 	player.gems -= 25;
-	EngineCore.statScreenRefresh();
+	player.destroyItems(consumables.BEEHONY, 1);
+	//EngineCore.statScreenRefresh();
 	outputText("You hand over a vial of bee honey and the 25 gems.");
 	outputText("\n\n\"<i>I'll see what I can do,</i>\" he says as he takes the bee honey and begin brewing something. ");
 	outputText("\n\nA few minutes later, he comes back with the crystal vial that contains glittering liquid.  \"<i>It's ready. The honey should be pure now,</i>\" he says. He hands you over the vial of honey and goes back to working.  ");
@@ -960,7 +960,7 @@ private function rathazulMakesMilkPotion():void {
 	player.destroyItems(consumables.LACTAID, 5);
 	player.destroyItems(consumables.P_LBOVA, 2);
 	player.gems -= 250;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("You hand over the ingredients and 250 gems.");
 	outputText("\n\n\"<i>I'll see what I can do,</i>\" he says as he takes the ingredients and begin brewing something. ");
 	outputText("\n\nA few minutes later, he comes back with the potion.  \"<i>It's ready. If you have some issues with lactation or you want to produce milk forever, drink this. Keep in mind that it might be irreversible,</i>\" he says. He hands you over the potion and goes back to working.  ");
@@ -983,7 +983,7 @@ private function rathazulMakesScorpioPotion():void {
 	player.destroyItems(consumables.BEEHONY, 2);
 	player.destroyItems(consumables.SNAKOIL, 2);
 	player.gems -= 100;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("You hand over two vials of Bee Honey, two vials of Snake Oil and one hundred gems to Rathazul, which he gingerly takes them and proceeds to make a special potion for you.");
 	outputText("\n\nAfter a while, the rat hands you a vial labeled \"Scorpinum\" and nods.");
 	player.addStatusValue(StatusEffects.MetRathazul, 2, 1);
diff --git a/classes/classes/Scenes/NPCs/Sheila.as b/classes/classes/Scenes/NPCs/Sheila.as
index 53e631a8e..302c5399b 100644
--- a/classes/classes/Scenes/NPCs/Sheila.as
+++ b/classes/classes/Scenes/NPCs/Sheila.as
@@ -118,7 +118,7 @@ public class Sheila extends Monster
 				if(!hasStatusEffect(StatusEffects.TwuWuv)) {
 					createStatusEffect(StatusEffects.TwuWuv,0,0,0,0);
 					var counter:int = 40+rand(5);
-					EngineCore.showUpDown();//showStatDown( 'inte' );
+					//showStatDown( 'inte' );
 					while(counter > 0) {
 						if(player.inte >= 2) {
 							player.inte--;
diff --git a/classes/classes/Scenes/NPCs/SheilaScene.as b/classes/classes/Scenes/NPCs/SheilaScene.as
index b955d2ddd..34d647bcc 100644
--- a/classes/classes/Scenes/NPCs/SheilaScene.as
+++ b/classes/classes/Scenes/NPCs/SheilaScene.as
@@ -249,10 +249,11 @@ private function sheilaCorruptionUpdate():void {
 				else sheilaCorruption(1);
 			}
 			player.cor = Math.round(player.cor);
-			mainView.statsView.showStatDown( 'cor' );
+			//mainView.statsView.showStatDown( 'cor' );
 			// corUp.visible = false;
 			// corDown.visible = true;
-			EngineCore.statScreenRefresh();
+			EngineCore.showUpDown(true);
+			EngineCore.statScreenRefresh(true);
 		}		
 	}
 	else if(player.cor < sheilaCorruption()) {
@@ -271,14 +272,15 @@ private function sheilaCorruptionUpdate():void {
 				else sheilaCorruption(-1);
 			}
 			player.cor = Math.round(player.cor);
-			mainView.statsView.showStatUp( 'cor' );
-			// corUp.visible = true;
-			// corDown.visible = false;
-			EngineCore.statScreenRefresh();
+			//mainView.statsView.showStatUp( 'cor' );
+			
 		}
+		EngineCore.showUpDown(false);
+		EngineCore.statScreenRefresh(false);
 	}
 	//Get one for demon Sheila regardless.
 	if(flags[kFLAGS.SHEILA_DEMON] == 1) dynStats("cor", 1);
+	
 }
 
 //XP0: the first encounter (sheila xp =0 and demon sheila = 0):
diff --git a/classes/classes/Scenes/Places/Bazaar.as b/classes/classes/Scenes/Places/Bazaar.as
index af26d9bc2..030895a57 100644
--- a/classes/classes/Scenes/Places/Bazaar.as
+++ b/classes/classes/Scenes/Places/Bazaar.as
@@ -225,7 +225,7 @@ private function buyCockMilker():void {
 	outputText("\"<i>Fantastic, fantastic!  Let me get it from the back.</i>\"  Joey rushes behind a curtain, audibly rummaging through the storeroom.  Soon he comes back, carrying a bunch of tubes and nozzles.  \"<i>Here you go!</i>\"  He dumps the collection of junk in your arms, taking the gems from you in the same motion.  You hastily begin stuffing the contraption in your pack.  \"<i>Now, don't get too attached.  A machine's never gonna beat the real thing.</i>\"  He flexes his delicate fingers.  \"<i>Speaking of which, need something?</i>\"");
 	outputText("\n\n(<b>Key Item Acquired: Cock Milker</b>)");
 	player.gems -= 200;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.createKeyItem("Cock Milker",0,0,0,0);
 	simpleChoices("JoeyMassage", joeyMassage, "Androgyny", null, "Joey'sOffer", null, "", null, "Leave", enterTheBazaar);
 }
@@ -238,7 +238,7 @@ private function joeyAndrogyny():void {
 		return;
 	}
 	player.gems -= 500;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("Joey takes your hand in his and insistently pulls towards the back rooms.  \"<i>Once we have this all done ");
 	if(player.gender == 1) outputText("you'll be able to be as cute as me!");
 	else if(player.gender == 2) outputText("you'll be able to be as masculine as you want!");
@@ -264,7 +264,7 @@ private function joeyMassage():void {
 	}
 	player.slimeFeed();
 	player.gems -= 10;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("Joey bounces on his feet excitedly, the little poof-ball above his exposed, heart-shaped ass twitching happily.  His soft hand takes yours and leads you towards one of the back rooms, dragging you inside just before the door is silently closed.  The small wooden chamber houses a single, padded bed that's clearly meant for you, and at Joey's insistence you disrobe to lie down on it.  You put your face through a rounded oval and lie down, taking the idle moment to glance around.  A small coal-fired steam-oven isn't far past the bed, and you can make out Joey's small, human feet as he stokes it.\n\n");
 	outputText("One of your chosen masseuse's soft, demure hands rests on your shoulder while the oven starts and begins to vent warm steam through the room.  Joey starts by leaping atop you in a single bound to  straddle your back and rub your shoulders.  His small, skilled fingers work wonders, working out the constant tension this strange land has inspired in you since your arrival.  Each insistent, languid touch dissolves a knot of worry, sending shivers of contentment through you that make you feel as if you're melting into the bed.\n\n");
 	outputText("Once he feels the tension from your upper body has been released, the girly bunny-boy slides himself lower, placing his taut, barely-covered rear atop your " + buttDescript() + ".  Joey's hands slide down along your spine, smoothing out every knotted muscle in your back as he goes.  You could swear his fingers are magic; you feel like a lump of clay being worked by a master sculptor.  Sighing dreamily, you lie there and groan while he finishes the small of your back, muscles rendered into goo-like softness.\n\n");
@@ -593,7 +593,7 @@ private function buyGretasBikini():void {
 	clearOutput();
 	flags[kFLAGS.OWN_MAIDEN_BIKINI] = 1;
 	player.gems -= 500;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("Greta's eyes widen in surprise.  \"<i>Really?</i>\"");
 	outputText("\n\nYou nod and pull out your gems, counting out the exact amount for her.  As soon as you finish, Greta pulls you over the counter and kisses you on the lips, her tongue sensually assaulting your surprised palate. Before you can react, she pulls back with a hum of pleasure.");
 	outputText("\n\n\"<i>Thanks, sugar!  Have fun and be safe, and if you don't want to be safe, come visit me sometime!</i>\"");
@@ -803,15 +803,12 @@ private function yesPutDatSockOnMe(target:int):void {
 
 	if (!conflict) { // There's no conflict. DO IT!!!
 		player.cocks[target].sock = flags[kFLAGS.SOCK_HOLDING];
-		EngineCore.statScreenRefresh();
-
 		outputText("With one hand she lifts your limp cock up, giving it a pleasant little stroke.");
-	
 		outputText("\n\nHer other hand approaches, her thumb, fore- and middle-fingers holding the sock open as she slips it over your " + player.cockHead(target) + ".  She pulls it snugly into place and then gives your penis a little kiss.  The second her lips make contact with your flesh, a chill runs across your body, followed by a flood of warmth.");
-	
 		outputText("\n\nGreta smiles knowingly and returns to her chair behind the counter.");
 		//(Cock-sock get! +2 Corruption, +5 Arousal)
 		dynStats("lus", 5, "cor", 2);
+		EngineCore.statScreenRefresh(true);
 		menu();
 		addButton(0,"Next",gretasGarments);
 	}
@@ -905,17 +902,14 @@ There's another option on the list, cheerfully presented with a pastel border an
 private function joeySweetMassage():void {
 	clearOutput();
 	player.gems -= 20;
-	EngineCore.statScreenRefresh();
-	outputText("Joey claps excitedly, his little puffy tail bouncing happily.  \"<i>Great!  It's a customer favorite, so I'm sure you'll just love, love, love it!</i>\"  He takes your hand and leads you towards the back rooms, letting the door shut behind the two of you with a soft click.  As usual, in the center of the room is a padded bed meant for you, and at Joey's insistence you disrobe to lie down on it.  You put your face through the rounded oval and relax, taking the moment to watch Joey's bare feet with their cute painted nails prance in and out of sight as he bustles around the room.  He pauses briefly by the coal-fired steam-oven, stoking it for a minute before turning back towards you.");
 	
+	outputText("Joey claps excitedly, his little puffy tail bouncing happily.  \"<i>Great!  It's a customer favorite, so I'm sure you'll just love, love, love it!</i>\"  He takes your hand and leads you towards the back rooms, letting the door shut behind the two of you with a soft click.  As usual, in the center of the room is a padded bed meant for you, and at Joey's insistence you disrobe to lie down on it.  You put your face through the rounded oval and relax, taking the moment to watch Joey's bare feet with their cute painted nails prance in and out of sight as he bustles around the room.  He pauses briefly by the coal-fired steam-oven, stoking it for a minute before turning back towards you.");
 	outputText("\n\nThe warm, steamy air caresses your " + player.skinFurScales() + " even before Joey does, running down your back, butt and [legs].  In no time at all, the air in the room is thick and warm, making you feel delightfully lazy with every breath, and a bead of sweat forms on your brow.  The bed shifts a bit as Joey leaps up onto it, straddling your waist, while he starts working his fingers over your shoulders.  His petite hands are surprisingly talented, finding every little knot you've accumulated in your journeys and unravelling them with one blissful touch.");
-	
 	outputText("\n\nAs usual, he works his way down your body, sliding his hairless body against yours as he goes.  His magic fingers work out a particularly troublesome knot in your lower back in no time, then he moves to your arms and legs.  He doesn't stop until you feel like putty, so relaxed you wonder if you're even capable of movement.  Afterwards he simply rubs you down, checking for any missed tension spots.  The whole while his little cock strains the little white thong he sports, occasionally pressing against your back, butt or leg.");
-	
 	outputText("\n\nJoey hops off of you and you notice his cute femboy feet round the table, heading towards a small counter nearby hosting a large number of bottles.  You hear the sounds of a cork being pulled from one such bottle, followed by the bunny-boy gulping down its contents.  Then, surprisingly, he bends over, letting his thong pool around his ankles and revealing his cute, pink asshole.  He retrieves something else from the table and pulls it into view... a large multihued egg!  Joey places the egg at his butthole, which contracts in anticipation.  Slowly he works it inside, a task that you're sure would put the average anal acrobat to the test, but Joey is clearly no amateur.  The egg disappears completely within a couple minutes, swallowed up by that sweet little pucker.  Joey pulls his thong back up and turns towards you, his modest erection raging right in front of your face.");
-
 	outputText("\n\nRather than the usual stream of off-white jism, what starts pouring out the tip of his cock is a rich brown color.  It's viscous, and when it dribbles down onto the floor it forms a velvety pool.  Your masseuse scoops some of it up with two fingers and slips them into his mouth, closing his eyes as if he's enjoying an incredibly tasty treat.  \"<i>Mmm,</i>\" he moans, \"<i>chocolate.  This is what makes the sweet massage so sweet.  It's just as good as my creamy lotion, and twice as tasty.</i>\"  Joey turns away, retrieving another large egg from the table.  You wonder briefly if he has room for two of the two huge eggs in his ass, before he asks, \"<i>Would you like an egg too?  They don't have anything to do with the massage, but I just </i>love<i> feeling so full, don't you?</i>\"");
 	dynStats("lus", 25);
+	EngineCore.statScreenRefresh();
 	//[Yes (gives the chocolate-egg stuffed ass from the Easter bunny)] [No (This just skips the "If Yes" paragraphs)]
 	menu();
 	addButton(0,"Yes",eggsInButt,true);
@@ -1241,7 +1235,7 @@ private function finalGayFinallee(road:int = 0):void {
 		//Gained 1 lust draft, lost a few gems(9 or so?)
 		inventory.takeItem(consumables.L_DRAFT, camp.returnToCampUseOneHour);
 		//Time set to morning
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 	//((Ending 2 , suck bear, //crazy steel jaw))
 	else if(road == 1) {
@@ -1273,7 +1267,7 @@ private function finalGayFinallee(road:int = 0):void {
 		//Gained 1 lust draft, lost a few gems(9 or so?)
 		inventory.takeItem(consumables.L_DRAFT, camp.returnToCampUseOneHour);
 		//Time set to morning
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 	//((Ending 3 , suck none, //No furry plx))
 	else {
@@ -1304,7 +1298,7 @@ private function finalGayFinallee(road:int = 0):void {
 		//Lust sated
 		//Gained 1 lust draft, lost a few gems(9 or so?)
 		inventory.takeItem(consumables.BIMBOLQ, camp.returnToCampUseOneHour);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		//Time set to morning
 	}
 }
diff --git a/classes/classes/Scenes/Places/Bazaar/Benoit.as b/classes/classes/Scenes/Places/Bazaar/Benoit.as
index d1698111a..860afd6b3 100644
--- a/classes/classes/Scenes/Places/Bazaar/Benoit.as
+++ b/classes/classes/Scenes/Places/Bazaar/Benoit.as
@@ -388,7 +388,7 @@ private function benoitTransactBuy(slot:int = 1):void {
 	benoitAffection(3);
 	
 	player.gems -= int(buyMod * itype.value);
-	statScreenRefresh();
+	//statScreenRefresh();
 	inventory.takeItem(itype, benoitsBuyMenu);
 }
 
@@ -409,7 +409,7 @@ private function benoitSellTransact(slot:int, sellMod:int):void {
 		//(+1 Affection)
 		benoitAffection(1);
 	}
-	statScreenRefresh();
+	//statScreenRefresh();
 	doNext(benoitSellMenu);
 }
 
@@ -426,7 +426,7 @@ private function benoitSellAllTransact(totalItems:int, sellMod:int):void {
 		outputText("Benoit" + benoitMF("", "e") + " gives your objects the briefest of goings-over with " + benoitMF("his", "her") + " fingers before stowing them away and handing over your " + num2Text(itemValue) + " gem reward with a trusting smile.");
 	else outputText("Following a painstaking examination of the items you've given him with his hands and nose, Benoit grudgingly accepts them and carefully counts out your " + num2Text(itemValue) + " gem reward.");
 	player.gems += itemValue;
-	statScreenRefresh();
+	//statScreenRefresh();
 	//(+1 Affection per item)
 	benoitAffection(totalItems);
 	doNext(benoitIntro);
@@ -589,7 +589,7 @@ private function buyFlintlockConfirmation():void {
 	flags[kFLAGS.BENOIT_PISTOL_BOUGHT]++;
 	player.ammo = 4;
 	player.gems -= 200;
-	statScreenRefresh();
+	//statScreenRefresh();
 	inventory.takeItem(weaponsrange.FLINTLK, benoitsBuyMenu);
 }
 
@@ -611,7 +611,7 @@ private function buyAlarmClockConfirmation():void {
 	outputText("\"<i>Here you go.  I have no need for zis,</i>\" " + benoitMF("Benoit", "Benoite") + " says.");
 	outputText("\n\n<b>You can now set alarm. Go to your cabin to set the alarm. (And change the time when you'll wake up.)</b>");
 	player.gems -= 500;
-	statScreenRefresh();
+	//statScreenRefresh();
 	flags[kFLAGS.BENOIT_CLOCK_BOUGHT]++;
 	flags[kFLAGS.BENOIT_CLOCK_ALARM] = 6;
 	doNext(benoitsBuyMenu);
@@ -650,7 +650,7 @@ private function buyBackpackConfirmation(size:int = 1, sizeDesc:String = "Small"
 		outputText(" for a total of " + num2Text(inventory.getMaxSlots()) + " slots.)</b>");
 	}
 	player.gems -= price;
-	statScreenRefresh();
+	//statScreenRefresh();
 	doNext(benoitsBuyMenu);
 }
 
@@ -673,7 +673,7 @@ private function buyZweihanderConfirmation():void {
 	outputText("" + benoitMF("He", "She") + " gives you the axe, and you pack it with the rest of your stuff.");
 	player.gems -= 2000;
 	flags[kFLAGS.BENOIT_PISTOL_BOUGHT] = 2;
-	statScreenRefresh();
+	//statScreenRefresh();
 	inventory.takeItem(weapons.FRTAXE, benoitsBuyMenu);
 }
 
diff --git a/classes/classes/Scenes/Places/Bazaar/BlackCock.as b/classes/classes/Scenes/Places/Bazaar/BlackCock.as
index 6764a8475..eebbae2c1 100644
--- a/classes/classes/Scenes/Places/Bazaar/BlackCock.as
+++ b/classes/classes/Scenes/Places/Bazaar/BlackCock.as
@@ -146,7 +146,7 @@ import classes.lists.Gender;
 				return;
 			}
 			player.gems -= gemCost;
-			statScreenRefresh();
+			//statScreenRefresh();
 			inventory.takeItem(item, checkFoodMenu);
 		}
 		
@@ -191,7 +191,7 @@ import classes.lists.Gender;
 				return;
 			}
 			player.gems -= gemCost;
-			statScreenRefresh();
+			//statScreenRefresh();
 			eatFoodNomNom(foodName, foodEatDesc);
 		}
 		
@@ -379,7 +379,7 @@ import classes.lists.Gender;
 					outputText("\n\n<b>Something wrong has happened. Let me play you the song of my people. Actually, you should let Ormael/Aimozg/Oxdeception know.</b>");
 			}
 			player.gems -= 5;
-			statScreenRefresh();
+			//statScreenRefresh();
 			flags[kFLAGS.BLACK_COCK_ANITA_SONGS_LISTENED]++;
 			doNext(camp.returnToCampUseOneHour);
 		}
@@ -659,7 +659,7 @@ import classes.lists.Gender;
 				default:
 			}
 			player.gems -= 5;
-			statScreenRefresh();
+			//statScreenRefresh();
 			applyAndysSmokeEffect();
 			outputText("\n\nWhat do you want to do?");
 			menu();
diff --git a/classes/classes/Scenes/Places/Farm.as b/classes/classes/Scenes/Places/Farm.as
index 7e84f24f4..5d07c3b8b 100644
--- a/classes/classes/Scenes/Places/Farm.as
+++ b/classes/classes/Scenes/Places/Farm.as
@@ -363,14 +363,14 @@ private function talkWhitney():void {
 private function breastMilkerPurchase():void {
 	clearOutput();
 	outputText("Whitney takes the gems and leaves with the promise of having your gear set up within the hour.  She calls back over her shoulder with a cryptic warning, \"<i>Watch how much time you spend getting milked like an animal, lest you wind up like one.</i>\"");
-	doNext(camp.returnToCampUseOneHour);
 	player.createKeyItem("Breast Milker - Installed At Whitney's Farm", 0, 0, 0, 0);
 	player.gems -= 250;
-	EngineCore.statScreenRefresh();
+	doNext(camp.returnToCampUseOneHour);
+	//EngineCore.statScreenRefresh();
 }
 
 private function breastMilkerNoPurchase():void {
-	doNext(camp.returnToCampUseOneHour);
+	
 	clearOutput();
 	outputText("Whitney shrugs and the two of you chat about other things, just passing the time and enjoying a relatively normal chat.");
 	//+3 int if less than 15, +2 int if less 20, +1 int if less than 30, +.5 int if less than 40.
@@ -378,6 +378,7 @@ private function breastMilkerNoPurchase():void {
 	if (player.inte100 < 20) dynStats("int", 1);
 	if (player.inte100 < 30) dynStats("int", .5);
 	if (player.inte100 < 40) dynStats("int", .5);
+	doNext(camp.returnToCampUseOneHour);
 }
 
 public function workFarm():void {
@@ -1126,14 +1127,14 @@ public function cockPumping():void {
 	}	
 	if(payout > 0) {
 		if (player.cumQ() < 1000) player.modCumMultiplier(1);
-		if (payout == 1) outputText(Num2Text(payout) + " gem rolls ");
+		if (payout == 1) 
+			outputText(Num2Text(payout) + " gem rolls ");
 		else outputText(Num2Text(payout) + " gems roll");
-	
-	outputText("out into a collection plate.  Whitney really put a lot of work into this! ");
+			outputText("out into a collection plate.  Whitney really put a lot of work into this! ");
 	
 		player.gems += payout;
 		flags[kFLAGS.WHITNEY_GEMS_PAID_THIS_WEEK] += payout;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 	if (player.countCockSocks("gilded") > 0) {
 		
@@ -1144,13 +1145,10 @@ public function cockPumping():void {
 		
 		if (payout > 0) {
 			outputText("\n\nAs you take your payment, <b>y");
-		}
-		else {
+		} else {
 			outputText("\n\n<b>Y");
 		}
-		
 		outputText("ou see a few sparkling gems in your trail of cum on the floor. You reach down and pick up all " + gems + " of them</b>, and then you are");
-		
 		player.gems += gems;
 		
 	}
diff --git a/classes/classes/Scenes/Places/HeXinDao.as b/classes/classes/Scenes/Places/HeXinDao.as
index b0d518cbb..f04c3d9d6 100644
--- a/classes/classes/Scenes/Places/HeXinDao.as
+++ b/classes/classes/Scenes/Places/HeXinDao.as
@@ -86,7 +86,7 @@ public class HeXinDao extends BaseContent
 		outputText("Wow! You were lucky! There was " + Gems + " gems inside! This sure is good fortune for the coming year.");
 		player.createStatusEffect(StatusEffects.CanGetLunarGift,0,0,0,0);
 		player.gems += Gems;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 		EngineCore.doNext(riverislandVillageStuffLunar);
 	}
 	public function riverislandVillageStuffLunarFood():void {
@@ -251,7 +251,7 @@ public class HeXinDao extends BaseContent
 						sayLine1(consumables.FATPILL,"It's quite useful item for soul cultivators, this little pill can help you not feel hunger for a few days.")).hint("Fasting Pill.");
 			}
 			addButton(14, "Back", golemmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
 		}
 		function TierII():void {
 			menu();
@@ -286,7 +286,7 @@ public class HeXinDao extends BaseContent
 				).hint("Violet Pupil Transformation Manual.");
 			}
             addButton(14, "Back", golemmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
 		}
 		function TierIII():void {
 			menu();
@@ -303,7 +303,7 @@ public class HeXinDao extends BaseContent
 					"\n\nSince you going deeper into all that 'soulforce' stuff you now got something to train with someone that would goes into fights alongside you.  Maybe there is some more of those 'combined' soulskills somewhere?  "
 			).hint("Yin Yang Blast Manual.");*/
 			addButton(14, "Back", golemmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
 		}/*
 		if (player.findPerk(PerkLib.SoulExalt) >= 0) { lub soul overlord - each soul stage above starting allow to extend channeling time by 1 round
 			addButton(1, "GHoMB", buyItem2,consumables.HOB4MAN,
@@ -316,7 +316,7 @@ public class HeXinDao extends BaseContent
 					sayLine2(consumables.HG_SFRP,"It's quite useful item for all cultivators at Soul Overlord or above stage, this small pill can help you restore some of used up soulforce and it would be much more than the mid-grade one.")).hint("High-grade Soulforce Recovery Pill.");
 		}
         addButton(14, "Back", riverislandVillageStuff);
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
     }
     private function debitItem1(returnFunc:Function,shopKeep:String,priceRate:int,itype:ItemType,onBuy:String):void{
         var value:int = itype.value * priceRate;
@@ -329,7 +329,7 @@ public class HeXinDao extends BaseContent
             player.gems -= value;
             outputText(onBuy);
             inventory.takeItem(itype, returnFunc);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
     }
     private function debitItem2(returnFunc:Function,shopKeep:String,priceRate:int,itype:ItemType,onBuy:String):void{
@@ -342,7 +342,7 @@ public class HeXinDao extends BaseContent
             flags[kFLAGS.SPIRIT_STONES] -= itype.value / 5;
             outputText(onBuy);
             inventory.takeItem(itype, returnFunc);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
     }
     private function confirmBuy1(returnFunc:Function,shopKeep:String,priceRate:int,itype:ItemType,descString:String,onBuyString:String="\n"):void{
@@ -383,7 +383,7 @@ public class HeXinDao extends BaseContent
         addButton(11, "Sell", sellItemsForSpiritStones).hint("Sell items for spirit stones.");
         addButton(12, "Exchange", exchangeGemsToSpiritStonesorReverse).hint("Exchange gems to spirit stones or spirit stones to gems.");
         addButton(14, "Back", riverislandVillageStuff);
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         //buyItem,consumables.,sayLine(consumables.,""),onBuyString
         function Tier1():void {
             menu();
@@ -402,7 +402,7 @@ public class HeXinDao extends BaseContent
             addButton(12, "IncubiD", buyItem,consumables.INCUBID,sayLine(consumables.INCUBID,"incubus"),onBuyString).hint("Buy a flask of Incubi draft.");
             addButton(13, "KangaFruit", buyItem,consumables.KANGAFT,sayLine(consumables.KANGAFT,"kangaroo"),onBuyString).hint("Buy a piece of kanga fruit.");
             addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
         function Tier2():void {
             menu();
@@ -420,7 +420,7 @@ public class HeXinDao extends BaseContent
             addButton(11, "SnakeOil", buyItem,consumables.SNAKOIL,sayLine(consumables.SNAKOIL,"snake"),onBuyString).hint("Buy a vial of snake oil.");
             addButton(12, "SucMilk", buyItem,consumables.SUCMILK,sayLine(consumables.SUCMILK,"sucubus"),onBuyString).hint("Buy a bottle of Succubi milk.");
             addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
 		function Tier3():void {
 			menu();
@@ -429,7 +429,7 @@ public class HeXinDao extends BaseContent
             addButton(2, "WetCloth", buyItem,consumables.WETCLTH,sayLine(consumables.WETCLTH,"goo"),onBuyString).hint("Buy a wet cloth dripping with slippery slime.");
             addButton(3, "YetiCum", buyItem,consumables.YETICUM,sayLine(consumables.YETICUM,"yeti"),onBuyString).hint("Buy a bottle of Yeti Cum.");
 			addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
 		}
         function Tier4():void {
             menu();
@@ -444,7 +444,7 @@ public class HeXinDao extends BaseContent
             addButton(8, "SkySeed", buyItem,consumables.SKYSEED,sayLine(consumables.SKYSEED,"avian"),onBuyString).hint("Buy a skyborn seed.");
             //addButton(9, "B.Gossr", BGossr).hint("Buy .");
             addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
         function Tier5():void {
             menu();
@@ -453,7 +453,7 @@ public class HeXinDao extends BaseContent
             addButton(2, "DrakeHeart", buyItem,consumables.DRAKHRT,sayLine(consumables.DRAKHRT,"dragon"),onBuyString).hint("Buy a drake's heart's flower.");
             addButton(4, "Hummus", buyItem,consumables.HUMMUS_,sayLine(consumables.HUMMUS_,"humanity"),onBuyString).hint("Buy a blob of cheesy-looking hummus.");
             addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
         function Tier6():void {
             menu();
@@ -464,7 +464,7 @@ public class HeXinDao extends BaseContent
             addButton(4, "Icicle", buyItem,consumables.ICICLE_,sayLine(consumables.ICICLE_,"ice shard"),onBuyString).hint("Buy an icicle.");
             addButton(5, "S.Delight", buyItem,consumables.SDELITE,sayLine(consumables.SDELITE,"Succubi's Delight"),onBuyString).hint("Buy a bottle of 'Succubi's Delight'.");
             addButton(14, "Back", mogahenmerchant);
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
         }
     }
 
@@ -507,7 +507,7 @@ public class HeXinDao extends BaseContent
             player.gems += 5*value;
             flags[kFLAGS.SPIRIT_STONES]-=value;
         }
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         EngineCore.doNext(exchangeGemsToSpiritStonesorReverse);
 
     }
@@ -556,7 +556,7 @@ public class HeXinDao extends BaseContent
         addButton(10, necklaces.SMNECK.shortName, weaponBuy, necklaces.SMNECK);
         addButton(11, jewelries.SOULRNG.shortName, weaponBuy, jewelries.SOULRNG);
         addButton(14, "Back", riverislandVillageStuff);
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
     }
     public function soulequipmentshelf1():void {
         menu();
@@ -624,7 +624,7 @@ public class HeXinDao extends BaseContent
     }
     private function debitWeapon(itype:ItemType):void {
         flags[kFLAGS.SPIRIT_STONES] -= itype.value / 10;
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         inventory.takeItem(itype, serenamerchant);
     }
 	
@@ -666,7 +666,7 @@ public class HeXinDao extends BaseContent
         //addButton(9, weapons.MACE.shortName, weaponBuy, weapons.MACE);//bow made for soul cultivator xD
         addButton(13, "Training", ermaswiftarrowmerchantarcherytraining).hint("Archery training.");
         addButton(14, "Back", riverislandVillageStuff);
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
     }
 
     private function weaponrangeBuy(itype:ItemType):void {
@@ -685,7 +685,7 @@ public class HeXinDao extends BaseContent
     }
     private function debitWeaponRange(itype:ItemType):void {
         player.gems -= itype.value;
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         inventory.takeItem(itype, ermaswiftarrowmerchant);
     }
 	
@@ -741,7 +741,7 @@ public function soularena():void {
 		addButton(2, "Challenge", soularenaChallenge).hint("Go to the section of soul arena for challenges. (Who knows what reward you may get after winning any of the challenges there...)");
 		if (flags[kFLAGS.IGNIS_ARENA_SEER] >= 1) addButton(10, "Ignis", ignisarenaseer.mainIgnisMenu);
 		addButton(14, "Back", riverislandVillageStuff);
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 }
 
@@ -1020,7 +1020,7 @@ public function soularena():void {
         dynStats("tou", tempToughness);
         flags[kFLAGS.SPIRIT_STONES]--;
 		player.refillHunger(100);
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         EngineCore.doNext(camp.returnToCampUseOneHour);
     }
 }
diff --git a/classes/classes/Scenes/Places/HeXinDao/JourneyToTheEast.as b/classes/classes/Scenes/Places/HeXinDao/JourneyToTheEast.as
index 20064c481..6cb9bf8b6 100644
--- a/classes/classes/Scenes/Places/HeXinDao/JourneyToTheEast.as
+++ b/classes/classes/Scenes/Places/HeXinDao/JourneyToTheEast.as
@@ -88,7 +88,7 @@ package classes.Scenes.Places.HeXinDao
 				return;
 			}
 			player.gems -= cost;
-			statScreenRefresh();
+			//statScreenRefresh();
 			outputText("\n\nThe barman hands over the drink you ordered. ");
 			inventory.takeItem(drink, drinkAlcohol);
 		}
@@ -135,7 +135,7 @@ package classes.Scenes.Places.HeXinDao
 				outputText("She picks up a small Copper colored plate and give it to you.\n\n");
 				outputText("\"<i>Well as of now you are officially a member of the adventurer guild. Tell whenever you are ready ask for a quest and I will direct you to your target.</i>\"\n\n");
 				flags[kFLAGS.SPIRIT_STONES] -= 5;
-				statScreenRefresh();
+				//statScreenRefresh();
 				player.createKeyItem("Adventurer Guild: Copper plate", 0, 0, 0, 0);
 				doNext(curry(enteringInn,false));
 			}
@@ -180,7 +180,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests1, 1, 1);
 						player.destroyItems(useables.IMPSKLL, 5);
 						flags[kFLAGS.SPIRIT_STONES] += 7;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else {
 						outputText("The panda tap her foot on the ground.\n\n");
@@ -254,7 +254,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests2, 1, 1);
 						player.destroyItems(useables.SEVTENT, 3);
 						flags[kFLAGS.SPIRIT_STONES] += 8;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else outputText("You try turn in the quest but Yang tells you you don’t have enough tentacles yet.\n\n");
 				}
@@ -317,7 +317,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests1, 2, 1);
 						player.destroyItems(useables.DEMSKLL, 3);
 						flags[kFLAGS.SPIRIT_STONES] += 8;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else {
 						outputText("The panda tap her foot on the ground.\n\n");
@@ -398,7 +398,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests2, 2, 1);
 						player.destroyItems(useables.FIMPSKL, 5);
 						flags[kFLAGS.SPIRIT_STONES] += 7;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else outputText("You try turn in the quest but Yang tells you you don’t have enough feral imp skulls yet.\n\n");
 				}
@@ -461,7 +461,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests1, 3, 1);
 						player.destroyItems(useables.MINOHOR, 4);
 						flags[kFLAGS.SPIRIT_STONES] += 8;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else outputText("\"<i>Hey [name], I counted those horns and clearly you forgot a few. Get out there and bring me the remaining ones.</i>\"\n\n");
 				}
@@ -522,7 +522,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests4, 2, 1);
 						player.destroyItems(useables.GREENGL, 5);
 						flags[kFLAGS.SPIRIT_STONES] += 3;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else outputText("You try to turn in the quest but Yang tells you you don’t have enough gel yet.\n\n");
 				}
@@ -566,7 +566,7 @@ package classes.Scenes.Places.HeXinDao
 						player.addStatusValue(StatusEffects.AdventureGuildQuests4, 1, 1);
 						player.destroyItems(useables.B_CHITN, 5);
 						flags[kFLAGS.SPIRIT_STONES] += 4;
-						statScreenRefresh();
+						//statScreenRefresh();
 					}
 					else outputText("You try to turn in the quest but Yang tells you you don’t have enough chitin yet.\n\n");
 				}
@@ -615,7 +615,7 @@ package classes.Scenes.Places.HeXinDao
 					else flags[kFLAGS.GALIA_LVL_UP] += 0.05;
 					flags[kFLAGS.GALIA_AFFECTION] = 0;
 					flags[kFLAGS.SPIRIT_STONES] += 2;
-					statScreenRefresh();
+					//statScreenRefresh();
 				}
 				else outputText("You try turn in the quest but looking inside your bag Yang tells you you cant turn an empty bag in and need to capture an imp first.\n\n");
 			}
@@ -640,7 +640,7 @@ package classes.Scenes.Places.HeXinDao
 			flags[kFLAGS.GALIA_LVL_UP] = 0.53;
 			flags[kFLAGS.GALIA_AFFECTION] = 0;
 			flags[kFLAGS.SPIRIT_STONES] += 22;
-			statScreenRefresh();
+			//statScreenRefresh();
 			doNext(curry(enteringInn, false));
 		}
 		public function BoardkeeperYangQuestEzekiel1Keep():void {
@@ -700,7 +700,7 @@ package classes.Scenes.Places.HeXinDao
 			outputText("Yang wait at you arm crossed. You write a full job description and hand it over to Yang along with the stones. This done, she then posts it on the board as an iron plate request.\n\n");
 			flags[kFLAGS.SPIRIT_STONES] -= 10;
 			flags[kFLAGS.AURORA_LVL] = 0.35;
-			statScreenRefresh();
+			//statScreenRefresh();
 			doNext(curry(enteringInn,false));
 		}
 		public function BoardkeeperYangTalk():void {
diff --git a/classes/classes/Scenes/Places/Ingnam.as b/classes/classes/Scenes/Places/Ingnam.as
index 062e6ceaf..61ce8f95e 100644
--- a/classes/classes/Scenes/Places/Ingnam.as
+++ b/classes/classes/Scenes/Places/Ingnam.as
@@ -314,7 +314,7 @@ CoC.instance.saves.saveGame(player.slotName);
 				outputText("You have purchased " + item.longName + " for " + price + " gems. ");
 				player.gems -= price;
 				menu();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				inventory.takeItem(item, shopToGo);
 			}
 			else {
@@ -573,7 +573,7 @@ CoC.instance.saves.saveGame(player.slotName);
 			}
 			outputText("You pay five gems for a pack of hard biscuits.  ");
 			player.gems -= 5;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			inventory.takeItem(consumables.H_BISCU, orderFood);
 		}
 
@@ -586,7 +586,7 @@ CoC.instance.saves.saveGame(player.slotName);
 			}
 			outputText("You pay twenty gems for a pack of trail mix.  ");
 			player.gems -= 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			inventory.takeItem(consumables.TRAILMX, orderFood);
 		}
 		
diff --git a/classes/classes/Scenes/Places/Ingnam/IngnamFarm.as b/classes/classes/Scenes/Places/Ingnam/IngnamFarm.as
index 5de41357d..cf3dd7763 100644
--- a/classes/classes/Scenes/Places/Ingnam/IngnamFarm.as
+++ b/classes/classes/Scenes/Places/Ingnam/IngnamFarm.as
@@ -89,7 +89,7 @@ public class IngnamFarm extends BaseContent
 			outputText("\n\nYou walk back to Ingnam.");
 			if (player.HP > player.maxHP()) player.HP = player.maxHP();
 			player.gems += 5;
-			EngineCore.statScreenRefresh();
+			//EngineCore.statScreenRefresh();
 			doNext(camp.returnToCampUseOneHour);	
 		}
 	}
diff --git a/classes/classes/Scenes/Places/Prison.as b/classes/classes/Scenes/Places/Prison.as
index a6e6aaf8c..201567f49 100644
--- a/classes/classes/Scenes/Places/Prison.as
+++ b/classes/classes/Scenes/Places/Prison.as
@@ -166,7 +166,7 @@ public class Prison extends BaseContent implements TimeAwareInterface
 			if (player.esteem > oldEsteem) showStatUp("esteem");
 			if (player.esteem < oldEsteem) showStatDown("esteem");
 			dynStats("lus", 0, "scale", false);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		/**
 		 * Change the player's willpower.
@@ -180,7 +180,7 @@ public class Prison extends BaseContent implements TimeAwareInterface
 			if (player.will > oldWill) showStatUp("will");
 			if (player.will < oldWill) showStatDown("will");
 			dynStats("lus", 0, "scale", false);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		/**
 		 * Change the player's obedience.
@@ -224,7 +224,7 @@ public class Prison extends BaseContent implements TimeAwareInterface
 			if (player.obey > oldObey) showStatUp("obey");
 			if (player.obey < oldObey) showStatDown("obey");
 			dynStats("lus", 0, "scale", false);
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 		}
 		
 		public function prisonWillCostDescript(baseVal:Number):String
diff --git a/classes/classes/Scenes/Places/TelAdre.as b/classes/classes/Scenes/Places/TelAdre.as
index cffc5b659..38b69a475 100644
--- a/classes/classes/Scenes/Places/TelAdre.as
+++ b/classes/classes/Scenes/Places/TelAdre.as
@@ -299,7 +299,7 @@ public function oswaldPawn():void {
 
 private function buyCarrotFromOswald():void {
 	player.gems -= 500;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	player.createKeyItem("Carrot",0,0,0,0);
 	clearOutput();
 	outputText("Gems change hands in a flash, and you're now the proud owner of a bright orange carrot!\n\n(<b>Acquired Key Item: Carrot</b>)");
@@ -349,7 +349,7 @@ private function oswaldPawnSell(slot:int):void { //Moved here from Inventory.as
 		player.itemSlots[slot].removeOneItem();
 		player.gems += itemValue;
 	}
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(oswaldPawn);
 }
 
@@ -365,7 +365,7 @@ private function oswaldPawnSellAll():void {
 	}
 	outputText("You lay out all the items you're carrying on the counter in front of Oswald.  He examines them all and nods.  Nervously, he pulls out " + num2Text(itemValue) + " gems and drops them into your waiting hand.");
 	player.gems += itemValue;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(oswaldPawn);
 }
 
@@ -642,7 +642,7 @@ private function carpentryShopBuyNailsYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough gems.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopBuyNails);
 }
 
@@ -695,7 +695,7 @@ private function carpentryShopBuyWoodYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough gems.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopBuyWood);
 }
 
@@ -748,7 +748,7 @@ private function carpentryShopBuyStoneYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough gems.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopBuyStone);
 }
 
@@ -794,7 +794,7 @@ private function carpentryShopSellNailsYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough nails.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopSellNails);
 }
 
@@ -839,7 +839,7 @@ private function carpentryShopSellWoodYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough wood.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopSellWood);
 }
 
@@ -884,7 +884,7 @@ private function carpentryShopSellStoneYes():void {
 		}
 	}
 	else outputText("\"<i>I'm sorry, my friend. You do not have enough stones.</i>\"");
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopSellStone);
 }
 
@@ -920,7 +920,7 @@ public function carpentryShopBuySetYes():void {
 	outputText("<b>Gained Key Item: Carpenter's Toolbox!</b>");
 	player.createKeyItem("Carpenter's Toolbox", 0, 0, 0, 0);
 	flags[kFLAGS.MATERIALS_STORAGE_UPGRADES] = 1;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopInside);
 }
 
@@ -962,7 +962,7 @@ public function carpentryShopBuySet2Yes():void {
 	outputText("<b>Gained Key Item: Nail's Box!</b>");
 	player.createKeyItem("Nail's Box", 0, 0, 0, 0);
 	flags[kFLAGS.MATERIALS_STORAGE_UPGRADES] += 1;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopInside);
 }
 
@@ -1004,7 +1004,7 @@ public function carpentryShopBuySet3Yes():void {
 	outputText("<b>Gained Key Item: Stone Building Guide!</b>");
 	player.createKeyItem("Stone Building Guide", 0, 0, 0, 0);
 	flags[kFLAGS.MATERIALS_STORAGE_UPGRADES] += 1;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	EngineCore.doNext(carpentryShopInside);
 }
 
@@ -1079,7 +1079,7 @@ private function buyItem(odd:ItemType):void{
 
 private function buyItemYes(odd:ItemType):void {
 	player.gems -= odd.value;// * 3
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("Kaiba smile wide as you hand the gems to him.\n\n");
 	outputText("\"<i>Thanks for your patronage.</i>\"\n\n");
 	inventory.takeItem(odd, kaibaShopInside);
@@ -1202,7 +1202,7 @@ private function buyItemT1(odd:ItemType, page:int = 1):void{
 }
 private function buyItemT1Yes(odd:ItemType):void {
 	player.gems -= odd.value;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("You pass on the gems to Tripxi who hands you the weapon over.\n\n");
 	outputText("\"<i>Kill some demons with this baby will you. I'd like to think that my tools help clean the place some of my peers are busy dirtying with stupid sex toys.</i>\"\n\n");
 	inventory.takeItem(odd, tripxiShopMainMenu2a);
@@ -1226,7 +1226,7 @@ private function buyItemT2(odd:ItemType):void{
 }
 private function buyItemT2Yes(odd:ItemType):void {
 	player.gems -= odd.value;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("You pass on the gems to Tripxi who hands you the weapon over.\n\n");
 	outputText("\"<i>Kill some demons with this baby will you. I'd like to think that my tools help clean the place some of my peers are busy dirtying with stupid sex toys.</i>\"\n\n");
 	inventory.takeItem(odd, tripxiShopMainMenu2b);
@@ -1250,7 +1250,7 @@ private function buyItemT3(odd:ItemType):void{
 }
 private function buyItemT3Yes(odd:ItemType):void {
 	player.gems -= odd.value;
-	EngineCore.statScreenRefresh();
+	//EngineCore.statScreenRefresh();
 	outputText("You pass on the gems to Tripxi who hands you the weapon over.\n\n");
 	outputText("\"<i>Kill some demons with this baby will you. I'd like to think that my tools help clean the place some of my peers are busy dirtying with stupid sex toys.</i>\"\n\n");
 	inventory.takeItem(odd, tripxiShopMainMenu2c);
@@ -1397,7 +1397,7 @@ private function buyGymLifeTimeMembership():void {
 	}
 	flags[kFLAGS.LIFETIME_GYM_MEMBER] = 1;
 	player.gems -= 500;
-	EngineCore.statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	//[Bring up gym menu]
 	gymMenu();
 }
@@ -1414,7 +1414,7 @@ private function weightLifting():void {
 	//Deduct gems if not a full member.
 	if(flags[kFLAGS.LIFETIME_GYM_MEMBER] == 0) {
 		player.gems -= 10;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 	//[Lift Weights] +25 fatigue!
 	fatigue(25);
@@ -1465,7 +1465,7 @@ private function goJogging():void {
 	//Deduct gems if not a full member.
 	if(flags[kFLAGS.LIFETIME_GYM_MEMBER] == 0) {
 		player.gems -= 10;
-		EngineCore.statScreenRefresh();
+		//EngineCore.statScreenRefresh();
 	}
 	//[Jogging] +30 fatigue!
 	fatigue(30);
diff --git a/classes/classes/Scenes/Places/TelAdre/Shop.as b/classes/classes/Scenes/Places/TelAdre/Shop.as
index 7106dffce..1118c1572 100644
--- a/classes/classes/Scenes/Places/TelAdre/Shop.as
+++ b/classes/classes/Scenes/Places/TelAdre/Shop.as
@@ -44,7 +44,7 @@ public class Shop extends TelAdreAbstractContent {
         localvars.debit.keyItem = keyItem;
         display("debit",localvars.debit);
         player.gems -= priceOverride >= 0 ? priceOverride : itype.value;
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         if (keyItem != "") {
             player.createKeyItem(keyItem, 0, 0, 0, 0);
             doNext(inside);
diff --git a/classes/classes/Scenes/Places/TelAdre/YaraPiercingStudio.as b/classes/classes/Scenes/Places/TelAdre/YaraPiercingStudio.as
index 82baa8922..07492f177 100644
--- a/classes/classes/Scenes/Places/TelAdre/YaraPiercingStudio.as
+++ b/classes/classes/Scenes/Places/TelAdre/YaraPiercingStudio.as
@@ -270,7 +270,7 @@ public class YaraPiercingStudio extends TelAdreAbstractContent {
         if (mat == 13) {
             player.gems -= 1000;
         }
-        EngineCore.statScreenRefresh();
+        //EngineCore.statScreenRefresh();
         //set up material description
         switch (mat) {
             case MAT_AMETHYST:
@@ -572,7 +572,7 @@ public class YaraPiercingStudio extends TelAdreAbstractContent {
             applyPiercing(loc);
             dynStats("tou", -5);
             player.gems -= 100;
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
             doNext(piercingStudio);
         }
     }
diff --git a/classes/classes/Scenes/Pregnancy.as b/classes/classes/Scenes/Pregnancy.as
index 7269d9eaa..146f0c7e7 100644
--- a/classes/classes/Scenes/Pregnancy.as
+++ b/classes/classes/Scenes/Pregnancy.as
@@ -38,7 +38,7 @@ public class Pregnancy extends NPCAwareContent {
             //Remove bonus libido from heat
             player.dynStats("lib", -player.statusEffectv2(StatusEffects.Heat));
             if(player.lib < 10) player.lib = 10;
-            EngineCore.statScreenRefresh();
+            //EngineCore.statScreenRefresh();
             player.removeStatusEffect(StatusEffects.Heat);
             displayedUpdate = true;
         }
diff --git a/classes/classes/Scenes/PregnancyProgression.as b/classes/classes/Scenes/PregnancyProgression.as
index 72c409196..4d0a482e3 100644
--- a/classes/classes/Scenes/PregnancyProgression.as
+++ b/classes/classes/Scenes/PregnancyProgression.as
@@ -36,7 +36,7 @@ package classes.Scenes
 				//Remove bonus libido from heat
 				dynStats("lib", -player.statusEffectv2(StatusEffects.Heat));
 				if (player.lib < 10) player.lib = 10;
-				statScreenRefresh();
+				//statScreenRefresh();
 				player.removeStatusEffect(StatusEffects.Heat);
 				displayedUpdate = true;
 			}
diff --git a/classes/classes/Scenes/Quests/UrtaQuest.as b/classes/classes/Scenes/Quests/UrtaQuest.as
index 15c7a5809..abbc2c8c0 100644
--- a/classes/classes/Scenes/Quests/UrtaQuest.as
+++ b/classes/classes/Scenes/Quests/UrtaQuest.as
@@ -798,7 +798,7 @@ private function snuggleWithUrta(truth:Boolean):void {
 private function morningAfterCampVisitEmbark(truth:Boolean):void {
 	clearOutput();
 	model.time.days++;
-	statScreenRefresh();
+	EngineCore.statScreenRefresh(true);
 	outputText("Sadly, morning comes, and your time with " + player2.short + " comes to an end.  You push " + player2.mf("his", "her") + " shoulder gently to rouse " + player2.mf("him", "her") + ", smiling at " + player2.mf("him", "her") + " when " + player2.mf("he", "she") + " wakes.  You kiss " + player2.mf("him", "her") + " on the lips before rolling out from under the blanket.  The two of you eat a quiet breakfast together, simply enjoying each other's company.  ");
 	if (truth)
 	{
@@ -943,7 +943,7 @@ private function urtaGameOver():void {
 	model.time.days++;
 	resetToPC();
 	model.time.hours = 6;
-	statScreenRefresh();
+	//statScreenRefresh();
 	doNext(camp.returnToCampUseOneHour);
 }
 
diff --git a/classes/classes/Scenes/Soulforce.as b/classes/classes/Scenes/Soulforce.as
index d83c42078..3b2026331 100644
--- a/classes/classes/Scenes/Soulforce.as
+++ b/classes/classes/Scenes/Soulforce.as
@@ -1576,7 +1576,7 @@ public function FightHellfireSnail():void {
 		public function AddMetalPieces():void {
 			outputText("\n\n<b>(Gained 50 Metal Pieces!)</b>\n\n");
 			flags[kFLAGS.CAMP_CABIN_METAL_PIECES_RESOURCES] += 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			MaterialMenu();
 		}
 		public function AddPolarMidnightScroll():void {
@@ -1787,452 +1787,452 @@ public function FightHellfireSnail():void {
 		}
 		public function AddStr1():void {
 			player.str = player.str + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function AddStr2():void {
 			player.str = player.str + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function AddStr3():void {
 			player.str = player.str + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function AddStr4():void {
 			player.str = player.str + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function AddStr5():void {
 			player.str = player.str + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function AddTou1():void {
 			player.tou = player.tou + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function AddTou2():void {
 			player.tou = player.tou + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function AddTou3():void {
 			player.tou = player.tou + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function AddTou4():void {
 			player.tou = player.tou + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function AddTou5():void {
 			player.tou = player.tou + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function AddSpe1():void {
 			player.spe = player.spe + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function AddSpe2():void {
 			player.spe = player.spe + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function AddSpe3():void {
 			player.spe = player.spe + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function AddSpe4():void {
 			player.spe = player.spe + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function AddSpe5():void {
 			player.spe = player.spe + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function AddInte1():void {
 			player.inte = player.inte + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function AddInte2():void {
 			player.inte = player.inte + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function AddInte3():void {
 			player.inte = player.inte + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function AddInte4():void {
 			player.inte = player.inte + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function AddInte5():void {
 			player.inte = player.inte + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function AddWis1():void {
 			player.wis = player.wis + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function AddWis2():void {
 			player.wis = player.wis + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function AddWis3():void {
 			player.wis = player.wis + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function AddWis4():void {
 			player.wis = player.wis + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function AddWis5():void {
 			player.wis = player.wis + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function AddLib1():void {
 			player.lib = player.lib + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function AddLib2():void {
 			player.lib = player.lib + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function AddLib3():void {
 			player.lib = player.lib + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function AddLib4():void {
 			player.lib = player.lib + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function AddLib5():void {
 			player.lib = player.lib + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function AddSens1():void {
 			player.sens = player.sens + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function AddSens2():void {
 			player.sens = player.sens + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function AddSens3():void {
 			player.sens = player.sens + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function AddSens4():void {
 			player.sens = player.sens + 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function AddSens5():void {
 			player.sens = player.sens + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function AddCor1():void {
 			player.cor = player.cor + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function AddCor2():void {
 			player.cor = player.cor + 5;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function AddCor3():void {
 			player.cor = player.cor + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function AddCor4():void {
 			player.cor = player.cor + 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function AddTone1():void {
 			player.tone = player.tone + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddTone2():void {
 			player.tone = player.tone + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddThickness1():void {
 			player.thickness = player.thickness + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddThickness2():void {
 			player.thickness = player.thickness + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddFeminity1():void {
 			player.femininity = player.femininity + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddFeminity2():void {
 			player.femininity = player.femininity + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubStr1():void {
 			player.str = player.str - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function SubStr2():void {
 			player.str = player.str - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function SubStr3():void {
 			player.str = player.str - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function SubStr4():void {
 			player.str = player.str - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function SubStr5():void {
 			player.str = player.str - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuStr();
 		}
 		public function SubTou1():void {
 			player.tou = player.tou - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function SubTou2():void {
 			player.tou = player.tou - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function SubTou3():void {
 			player.tou = player.tou - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function SubTou4():void {
 			player.tou = player.tou - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function SubTou5():void {
 			player.tou = player.tou - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuTou();
 		}
 		public function SubSpe1():void {
 			player.spe = player.spe - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function SubSpe2():void {
 			player.spe = player.spe - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function SubSpe3():void {
 			player.spe = player.spe - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function SubSpe4():void {
 			player.spe = player.spe - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function SubSpe5():void {
 			player.spe = player.spe - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSpe();
 		}
 		public function SubInte1():void {
 			player.inte = player.inte - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function SubInte2():void {
 			player.inte = player.inte - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function SubInte3():void {
 			player.inte = player.inte - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function SubInte4():void {
 			player.inte = player.inte - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function SubInte5():void {
 			player.inte = player.inte - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuInte();
 		}
 		public function SubWis1():void {
 			player.wis = player.wis - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function SubWis2():void {
 			player.wis = player.wis - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function SubWis3():void {
 			player.wis = player.wis - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function SubWis4():void {
 			player.wis = player.wis - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function SubWis5():void {
 			player.wis = player.wis - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuWis();
 		}
 		public function SubLib1():void {
 			player.lib = player.lib - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function SubLib2():void {
 			player.lib = player.lib - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function SubLib3():void {
 			player.lib = player.lib - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function SubLib4():void {
 			player.lib = player.lib - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function SubLib5():void {
 			player.lib = player.lib - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuLib();
 		}
 		public function SubSens1():void {
 			player.sens = player.sens - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function SubSens2():void {
 			player.sens = player.sens - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function SubSens3():void {
 			player.sens = player.sens - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function SubSens4():void {
 			player.sens = player.sens - 200;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function SubSens5():void {
 			player.sens = player.sens - 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuSens();
 		}
 		public function SubCor1():void {
 			player.cor = player.cor - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function SubCor2():void {
 			player.cor = player.cor - 5;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function SubCor3():void {
 			player.cor = player.cor - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function SubCor4():void {
 			player.cor = player.cor - 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuCor();
 		}
 		public function SubTone1():void {
 			player.tone = player.tone - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubTone2():void {
 			player.tone = player.tone - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubThickness1():void {
 			player.thickness = player.thickness - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubThickness2():void {
 			player.thickness = player.thickness - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubFeminity1():void {
 			player.femininity = player.femininity - 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function SubFeminity2():void {
 			player.femininity = player.femininity - 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			StatsMenuToneThicknessFeminity();
 		}
 		public function AddPerkPoint():void {
@@ -2249,46 +2249,46 @@ public function FightHellfireSnail():void {
 		}
 		public function AddGems1():void {
 			player.gems = player.gems + 100;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddGems2():void {
 			player.gems = player.gems + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddEXP1():void {
 			player.XP = player.XP + 100;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddEXP2():void {
 			player.XP = player.XP + 1000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddEXP3():void {
 			player.XP = player.XP + 10000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddEXP4():void {
 			player.XP = player.XP + 100000;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddLvL1():void {
 			player.level = player.level + 1;
 			player.statPoints += 5;
 			player.perkPoints = player.perkPoints + 1;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddLvL2():void {
 			player.level = player.level + 10;
 			player.statPoints += 50;
 			player.perkPoints = player.perkPoints + 10;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			PerksGemsEXPLvL();
 		}
 		public function AddRapPerk():void {
@@ -2348,19 +2348,19 @@ public function FightHellfireSnail():void {
 		public function AddWood():void {
 			outputText("\n\n<b>(Gained 100 Wood!)</b>");
 			flags[kFLAGS.CAMP_CABIN_WOOD_RESOURCES] += 100;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			MaterialMenu();
 		}
 		public function AddNail():void {
 			outputText("\n\n<b>(Gained 50 Nails!)</b>");
 			flags[kFLAGS.CAMP_CABIN_NAILS_RESOURCES] += 50;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			MaterialMenu();
 		}
 		public function AddStone():void {
 			outputText("\n\n<b>(Gained 100 Stones!)</b>");
 			flags[kFLAGS.CAMP_CABIN_STONE_RESOURCES] += 100;
-			EngineCore.statScreenRefresh();
+			EngineCore.statScreenRefresh(true);
 			MaterialMenu();
 		}
 		public function FightForPearl():void {
@@ -2894,7 +2894,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 50;
 				player.refillHunger(10);
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(10);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -2910,7 +2910,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 100;
 				player.refillHunger(20);
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(20);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -2926,7 +2926,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 200;
 				player.refillHunger(40);
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(40);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -2942,7 +2942,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 400;
 				player.refillHunger(80);
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(80);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -2958,7 +2958,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 800;
 				player.refillHunger(160);
 				if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(160);
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -2986,7 +2986,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 40;
 				player.lust -= 20;
 				if (player.lust < 0) player.lust = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3002,7 +3002,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 80;
 				player.lust -= 40;
 				if (player.lust < 0) player.lust = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3018,7 +3018,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 200;
 				player.lust -= 100;
 				if (player.lust < 0) player.lust = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3034,7 +3034,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 400;
 				player.lust -= 200;
 				if (player.lust < 0) player.lust = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				doNext(playerMenu);
 			}
@@ -3050,7 +3050,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 800;
 				player.lust -= 400;
 				if (player.lust < 0) player.lust = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3088,7 +3088,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 100;
 				player.mana += 100;
 				if (player.mana > player.maxMana()) player.mana = player.maxMana();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3104,7 +3104,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 200;
 				player.mana += 200;
 				if (player.mana > player.maxMana()) player.mana = player.maxMana();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3120,7 +3120,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 500;
 				player.mana += 500;
 				if (player.mana > player.maxMana()) player.mana = player.maxMana();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3136,7 +3136,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 1000;
 				player.mana += 1000;
 				if (player.mana > player.maxMana()) player.mana = player.maxMana();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3152,7 +3152,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 2000;
 				player.mana += 2000;
 				if (player.mana > player.maxMana()) player.mana = player.maxMana();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3172,7 +3172,7 @@ public function FightHellfireSnail():void {
 				player.mana -= 100;
 				player.soulforce += 50;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3188,7 +3188,7 @@ public function FightHellfireSnail():void {
 				player.mana -= 200;
 				player.soulforce += 100;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3204,7 +3204,7 @@ public function FightHellfireSnail():void {
 				player.mana -= 500;
 				player.soulforce += 250;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3220,7 +3220,7 @@ public function FightHellfireSnail():void {
 				player.mana -= 1000;
 				player.soulforce += 500;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3236,7 +3236,7 @@ public function FightHellfireSnail():void {
 				player.mana -= 2000;
 				player.soulforce += 1000;
 				if (player.soulforce > player.maxSoulforce()) player.soulforce = player.maxSoulforce();
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3265,7 +3265,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 100;
 				player.cor -= 1;
 				if (player.cor < 0) player.cor = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3281,7 +3281,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 200;
 				player.cor -= 2;
 				if (player.cor < 0) player.cor = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3297,7 +3297,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 500;
 				player.cor -= 5;
 				if (player.cor < 0) player.cor = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3313,7 +3313,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 1000;
 				player.cor -= 10;
 				if (player.cor < 0) player.cor = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3329,7 +3329,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 2000;
 				player.cor -= 20;
 				if (player.cor < 0) player.cor = 0;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3345,7 +3345,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 50;
 				player.cor += 1;
 				if (player.cor > 100) player.cor = 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3361,7 +3361,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 100;
 				player.cor += 2;
 				if (player.cor > 100) player.cor = 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3377,7 +3377,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 250;
 				player.cor += 5;
 				if (player.cor > 100) player.cor = 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3393,7 +3393,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 500;
 				player.cor += 10;
 				if (player.cor > 100) player.cor = 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3409,7 +3409,7 @@ public function FightHellfireSnail():void {
 				player.soulforce -= 1000;
 				player.cor += 20;
 				if (player.cor > 100) player.cor = 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				flags[kFLAGS.DAILY_SOULFORCE_USE_LIMIT]++;
 				EngineCore.doNext(playerMenu);
 			}
@@ -3440,7 +3440,7 @@ public function FightHellfireSnail():void {
 		public function TamaniEnc():void {
 			if (player.soulforce >= 80) {
 				player.soulforce -= 80;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				tamaniScene.encounterTamani();
 			}
 			else {
@@ -3451,7 +3451,7 @@ public function FightHellfireSnail():void {
 		public function TamaniDaughtersEnc():void {
 			if (player.soulforce >= 10 * (8 + (Math.floor(flags[kFLAGS.TAMANI_NUMBER_OF_DAUGHTERS] / 20)))) {
 				player.soulforce -= 10 * (8 + (Math.floor(flags[kFLAGS.TAMANI_NUMBER_OF_DAUGHTERS] / 20)));
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				tamaniDaughtersScene.encounterTamanisDaughters();
 			}
 			else {
@@ -3462,7 +3462,7 @@ public function FightHellfireSnail():void {
 		public function KitsuneMansion():void {
 			if (player.soulforce >= 90) {
 				player.soulforce -= 90;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				SceneLib.kitsuneScene.enterTheTrickster();
 			}
 			else {
@@ -3473,7 +3473,7 @@ public function FightHellfireSnail():void {
 		public function IzumiEnc():void {
 			if (player.soulforce >= 300) {
 				player.soulforce -= 300;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				izumiScenes.encounter();
 			}
 			else {
@@ -3484,7 +3484,7 @@ public function FightHellfireSnail():void {
 		public function findWorldTree():void {
 			if (player.soulforce >= 100) {
 				player.soulforce -= 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				wolrdtreeScene.YggdrasilDiscovery();
 			}
 			else {
@@ -3495,7 +3495,7 @@ public function FightHellfireSnail():void {
 		public function findGiacomo():void {
 			if (player.soulforce >= 100) {
 				player.soulforce -= 100;
-				EngineCore.statScreenRefresh();
+				EngineCore.statScreenRefresh(true);
 				SceneLib.giacomoShop.giacomoEncounter();
 			}
 			else {
-- 
2.17.1.windows.2

